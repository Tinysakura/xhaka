<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (273 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>[deoptimization] (4 samples, 1.47%)</title><rect x="10.0" y="947.0" width="17.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info(JavaThread*) (3 samples, 1.10%)</title><rect x="10.0" y="931.0" width="13.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info_helper(JavaThread*) (3 samples, 1.10%)</title><rect x="10.0" y="915.0" width="13.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>Bytecode_invoke::is_valid() const (1 samples, 0.37%)</title><rect x="10.0" y="899.0" width="4.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>Deoptimization::create_vframeArray(JavaThread*, frame, RegisterMap*, GrowableArray&lt;compiledVFrame*&gt;*, bool) (1 samples, 0.37%)</title><rect x="14.3" y="899.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="17.3" y="910.0"></text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (1 samples, 0.37%)</title><rect x="14.3" y="883.0" width="4.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="17.3" y="894.0"></text>
</g>
<g>
<title>StringEventLog::logv(Thread*, char const*, __va_list_tag*) (1 samples, 0.37%)</title><rect x="14.3" y="867.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="17.3" y="878.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.37%)</title><rect x="14.3" y="851.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="17.3" y="862.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.37%)</title><rect x="18.6" y="899.0" width="4.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="21.6" y="910.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.37%)</title><rect x="18.6" y="883.0" width="4.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="21.6" y="894.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.37%)</title><rect x="18.6" y="867.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="21.6" y="878.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (1 samples, 0.37%)</title><rect x="18.6" y="851.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="21.6" y="862.0"></text>
</g>
<g>
<title>OopMapValue::read_from(CompressedReadStream*) (1 samples, 0.37%)</title><rect x="18.6" y="835.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="21.6" y="846.0"></text>
</g>
<g>
<title>CompressedReadStream::read_int_mb(int) (1 samples, 0.37%)</title><rect x="18.6" y="819.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="21.6" y="830.0"></text>
</g>
<g>
<title>Deoptimization::unpack_frames(JavaThread*, int) (1 samples, 0.37%)</title><rect x="23.0" y="931.0" width="4.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="26.0" y="942.0"></text>
</g>
<g>
<title>vframeArray::unpack_to_stack(frame&amp;, int, int) (1 samples, 0.37%)</title><rect x="23.0" y="915.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="26.0" y="926.0"></text>
</g>
<g>
<title>nmethod::is_compiled_by_c2() const (1 samples, 0.37%)</title><rect x="23.0" y="899.0" width="4.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="26.0" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.run (121 samples, 44.32%)</title><rect x="27.3" y="947.0" width="523.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.3" y="958.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/FastThreadLocalRunnable.run (1 samples, 0.37%)</title><rect x="27.3" y="931.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.3" y="942.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/internal/ThreadExecutorMap$2.run (1 samples, 0.37%)</title><rect x="27.3" y="915.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="30.3" y="926.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/SingleThreadEventExecutor$4.run (1 samples, 0.37%)</title><rect x="27.3" y="899.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.3" y="910.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/NioEventLoop.run (1 samples, 0.37%)</title><rect x="27.3" y="883.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.3" y="894.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/NioEventLoop.processSelectedKeys (1 samples, 0.37%)</title><rect x="27.3" y="867.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.3" y="878.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized (1 samples, 0.37%)</title><rect x="27.3" y="851.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="30.3" y="862.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/NioEventLoop.processSelectedKey (1 samples, 0.37%)</title><rect x="27.3" y="835.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.3" y="846.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read (1 samples, 0.37%)</title><rect x="27.3" y="819.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.3" y="830.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline.fireChannelRead (1 samples, 0.37%)</title><rect x="27.3" y="803.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.3" y="814.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.37%)</title><rect x="27.3" y="787.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="30.3" y="798.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.37%)</title><rect x="27.3" y="771.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.3" y="782.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (1 samples, 0.37%)</title><rect x="27.3" y="755.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.3" y="766.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (1 samples, 0.37%)</title><rect x="27.3" y="739.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.3" y="750.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.37%)</title><rect x="27.3" y="723.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.3" y="734.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.37%)</title><rect x="27.3" y="707.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.3" y="718.0"></text>
</g>
<g>
<title>io/termd/core/telnet/netty/TelnetChannelHandler.channelRead (1 samples, 0.37%)</title><rect x="27.3" y="691.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.3" y="702.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.receive (1 samples, 0.37%)</title><rect x="27.3" y="675.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.3" y="686.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.flushDataIfNecessary (1 samples, 0.37%)</title><rect x="27.3" y="659.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.3" y="670.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.flushData (1 samples, 0.37%)</title><rect x="27.3" y="643.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.3" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.37%)</title><rect x="27.3" y="627.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="30.3" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.37%)</title><rect x="27.3" y="611.0" width="4.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="30.3" y="622.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultThreadFactory$DefaultRunnableDecorator.run (115 samples, 42.12%)</title><rect x="31.6" y="931.0" width="497.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.6" y="942.0">io/netty/util/concurrent/DefaultThreadFactory$DefaultRunnableDecorato..</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor$5.run (115 samples, 42.12%)</title><rect x="31.6" y="915.0" width="497.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.6" y="926.0">io/netty/util/concurrent/SingleThreadEventExecutor$5.run</text>
</g>
<g>
<title>io/netty/channel/DefaultEventLoop.run (37 samples, 13.55%)</title><rect x="31.6" y="899.0" width="159.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.6" y="910.0">io/netty/channel/Def..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$7.run (24 samples, 8.79%)</title><rect x="31.6" y="883.0" width="103.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.6" y="894.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$600 (24 samples, 8.79%)</title><rect x="31.6" y="867.0" width="103.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.6" y="878.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (24 samples, 8.79%)</title><rect x="31.6" y="851.0" width="103.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.6" y="862.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (24 samples, 8.79%)</title><rect x="31.6" y="835.0" width="103.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="34.6" y="846.0">io/netty/cha..</text>
</g>
<g>
<title>com/tinysakura/xhaka/server/handler/XhakaHttpServletHandler.channelRead0 (24 samples, 8.79%)</title><rect x="31.6" y="819.0" width="103.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="34.6" y="830.0">com/tinysaku..</text>
</g>
<g>
<title>com/tinysakura/xhaka/server/handler/XhakaHttpServletHandler.channelRead0 (24 samples, 8.79%)</title><rect x="31.6" y="803.0" width="103.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="34.6" y="814.0">com/tinysaku..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/filter/FilterChainImpl.doFilter (23 samples, 8.42%)</title><rect x="31.6" y="787.0" width="99.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.6" y="798.0">com/tinysaku..</text>
</g>
<g>
<title>com/tinysakura/xhaka/filter/TestFIlter2.doFilter (23 samples, 8.42%)</title><rect x="31.6" y="771.0" width="99.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.6" y="782.0">com/tinysaku..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (2 samples, 0.73%)</title><rect x="31.6" y="755.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.6" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (2 samples, 0.73%)</title><rect x="31.6" y="739.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.6" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (2 samples, 0.73%)</title><rect x="31.6" y="723.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="34.6" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (2 samples, 0.73%)</title><rect x="31.6" y="707.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.6" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (2 samples, 0.73%)</title><rect x="31.6" y="691.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.6" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (2 samples, 0.73%)</title><rect x="31.6" y="675.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.6" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (2 samples, 0.73%)</title><rect x="31.6" y="659.0" width="8.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="34.6" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (2 samples, 0.73%)</title><rect x="31.6" y="643.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.6" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (2 samples, 0.73%)</title><rect x="31.6" y="627.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.6" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (2 samples, 0.73%)</title><rect x="31.6" y="611.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.37%)</title><rect x="31.6" y="595.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (1 samples, 0.37%)</title><rect x="31.6" y="579.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.37%)</title><rect x="31.6" y="563.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="34.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.37%)</title><rect x="31.6" y="547.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.37%)</title><rect x="31.6" y="531.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.37%)</title><rect x="31.6" y="515.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.6" y="526.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.37%)</title><rect x="31.6" y="499.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.6" y="510.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.37%)</title><rect x="31.6" y="483.0" width="4.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="34.6" y="494.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.37%)</title><rect x="31.6" y="467.0" width="4.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="34.6" y="478.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.37%)</title><rect x="31.6" y="451.0" width="4.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="34.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.37%)</title><rect x="35.9" y="595.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="38.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.37%)</title><rect x="35.9" y="579.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="38.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.37%)</title><rect x="35.9" y="563.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="38.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.37%)</title><rect x="35.9" y="547.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="38.9" y="558.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (1 samples, 0.37%)</title><rect x="35.9" y="531.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.9" y="542.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.37%)</title><rect x="35.9" y="515.0" width="4.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="38.9" y="526.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.37%)</title><rect x="35.9" y="499.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="38.9" y="510.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.37%)</title><rect x="35.9" y="483.0" width="4.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="38.9" y="494.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/filter/FilterChainImpl.doFilter (21 samples, 7.69%)</title><rect x="40.3" y="755.0" width="90.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="43.3" y="766.0">com/tinysa..</text>
</g>
<g>
<title>com/tinysakura/xhaka/filter/TestFilter.doFilter (21 samples, 7.69%)</title><rect x="40.3" y="739.0" width="90.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="43.3" y="750.0">com/tinysa..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/filter/FilterChainImpl.doFilter (21 samples, 7.69%)</title><rect x="40.3" y="723.0" width="90.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="43.3" y="734.0">com/tinysa..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/filter/XhakaServlet.service (21 samples, 7.69%)</title><rect x="40.3" y="707.0" width="90.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="43.3" y="718.0">com/tinysa..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (6 samples, 2.20%)</title><rect x="40.3" y="691.0" width="25.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="43.3" y="702.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.37%)</title><rect x="40.3" y="675.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.3" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.37%)</title><rect x="40.3" y="659.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="43.3" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.37%)</title><rect x="40.3" y="643.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="43.3" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.37%)</title><rect x="40.3" y="627.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="43.3" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.37%)</title><rect x="40.3" y="611.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="43.3" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.37%)</title><rect x="40.3" y="595.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.3" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.37%)</title><rect x="40.3" y="579.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.3" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.37%)</title><rect x="40.3" y="563.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="43.3" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.37%)</title><rect x="40.3" y="547.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.3" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.37%)</title><rect x="40.3" y="531.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="43.3" y="542.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.37%)</title><rect x="40.3" y="515.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.3" y="526.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.37%)</title><rect x="40.3" y="499.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="43.3" y="510.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.37%)</title><rect x="40.3" y="483.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.3" y="494.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.37%)</title><rect x="40.3" y="467.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="43.3" y="478.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.37%)</title><rect x="40.3" y="451.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.3" y="462.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.37%)</title><rect x="40.3" y="435.0" width="4.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="43.3" y="446.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.37%)</title><rect x="40.3" y="419.0" width="4.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="43.3" y="430.0"></text>
</g>
<g>
<title>write (1 samples, 0.37%)</title><rect x="40.3" y="403.0" width="4.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="43.3" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (5 samples, 1.83%)</title><rect x="44.6" y="675.0" width="21.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.6" y="686.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (5 samples, 1.83%)</title><rect x="44.6" y="659.0" width="21.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="47.6" y="670.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (5 samples, 1.83%)</title><rect x="44.6" y="643.0" width="21.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.6" y="654.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (5 samples, 1.83%)</title><rect x="44.6" y="627.0" width="21.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.6" y="638.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (5 samples, 1.83%)</title><rect x="44.6" y="611.0" width="21.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.6" y="622.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (5 samples, 1.83%)</title><rect x="44.6" y="595.0" width="21.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="47.6" y="606.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (5 samples, 1.83%)</title><rect x="44.6" y="579.0" width="21.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.6" y="590.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (5 samples, 1.83%)</title><rect x="44.6" y="563.0" width="21.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="47.6" y="574.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (4 samples, 1.47%)</title><rect x="44.6" y="547.0" width="17.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 1.47%)</title><rect x="44.6" y="531.0" width="17.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (4 samples, 1.47%)</title><rect x="44.6" y="515.0" width="17.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 1.47%)</title><rect x="44.6" y="499.0" width="17.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 1.47%)</title><rect x="44.6" y="483.0" width="17.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 1.47%)</title><rect x="44.6" y="467.0" width="17.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 1.47%)</title><rect x="44.6" y="451.0" width="17.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.6" y="462.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (4 samples, 1.47%)</title><rect x="44.6" y="435.0" width="17.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.6" y="446.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 1.47%)</title><rect x="44.6" y="419.0" width="17.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="47.6" y="430.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 1.47%)</title><rect x="44.6" y="403.0" width="17.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="47.6" y="414.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 1.47%)</title><rect x="44.6" y="387.0" width="17.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="47.6" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.37%)</title><rect x="61.9" y="547.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.9" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.37%)</title><rect x="61.9" y="531.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.9" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.37%)</title><rect x="61.9" y="515.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.9" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (1 samples, 0.37%)</title><rect x="61.9" y="499.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.9" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (1 samples, 0.37%)</title><rect x="61.9" y="483.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.9" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.37%)</title><rect x="61.9" y="467.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.9" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.37%)</title><rect x="61.9" y="451.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.9" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.37%)</title><rect x="61.9" y="435.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="64.9" y="446.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.37%)</title><rect x="61.9" y="419.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.9" y="430.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.37%)</title><rect x="61.9" y="403.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.9" y="414.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.37%)</title><rect x="61.9" y="387.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.9" y="398.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (1 samples, 0.37%)</title><rect x="61.9" y="371.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.9" y="382.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (1 samples, 0.37%)</title><rect x="61.9" y="355.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.9" y="366.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.37%)</title><rect x="61.9" y="339.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.9" y="350.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.get (9 samples, 3.30%)</title><rect x="66.2" y="691.0" width="38.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.2" y="702.0">com..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (5 samples, 1.83%)</title><rect x="66.2" y="675.0" width="21.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.2" y="686.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (2 samples, 0.73%)</title><rect x="66.2" y="659.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.2" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (2 samples, 0.73%)</title><rect x="66.2" y="643.0" width="8.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.2" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (2 samples, 0.73%)</title><rect x="66.2" y="627.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.2" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (2 samples, 0.73%)</title><rect x="66.2" y="611.0" width="8.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.2" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (2 samples, 0.73%)</title><rect x="66.2" y="595.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.2" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (2 samples, 0.73%)</title><rect x="66.2" y="579.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.2" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (2 samples, 0.73%)</title><rect x="66.2" y="563.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.2" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (2 samples, 0.73%)</title><rect x="66.2" y="547.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.2" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.73%)</title><rect x="66.2" y="531.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.2" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (2 samples, 0.73%)</title><rect x="66.2" y="515.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.2" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (2 samples, 0.73%)</title><rect x="66.2" y="499.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.2" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (2 samples, 0.73%)</title><rect x="66.2" y="483.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.2" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (2 samples, 0.73%)</title><rect x="66.2" y="467.0" width="8.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.2" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (2 samples, 0.73%)</title><rect x="66.2" y="451.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.2" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (2 samples, 0.73%)</title><rect x="66.2" y="435.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.2" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.abbreviate (2 samples, 0.73%)</title><rect x="66.2" y="419.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.37%)</title><rect x="66.2" y="403.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.2" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.37%)</title><rect x="66.2" y="387.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.2" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.37%)</title><rect x="66.2" y="371.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.37%)</title><rect x="66.2" y="355.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.37%)</title><rect x="70.5" y="403.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.5" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.37%)</title><rect x="70.5" y="387.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.5" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (3 samples, 1.10%)</title><rect x="74.8" y="659.0" width="13.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.8" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (3 samples, 1.10%)</title><rect x="74.8" y="643.0" width="13.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.8" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (3 samples, 1.10%)</title><rect x="74.8" y="627.0" width="13.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.8" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (3 samples, 1.10%)</title><rect x="74.8" y="611.0" width="13.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.8" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (3 samples, 1.10%)</title><rect x="74.8" y="595.0" width="13.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="77.8" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (3 samples, 1.10%)</title><rect x="74.8" y="579.0" width="13.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="77.8" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (3 samples, 1.10%)</title><rect x="74.8" y="563.0" width="13.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.8" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (3 samples, 1.10%)</title><rect x="74.8" y="547.0" width="13.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.8" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.37%)</title><rect x="74.8" y="531.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.8" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.37%)</title><rect x="74.8" y="515.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.8" y="526.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.37%)</title><rect x="74.8" y="499.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.8" y="510.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.37%)</title><rect x="74.8" y="483.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="77.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.37%)</title><rect x="74.8" y="467.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.8" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.37%)</title><rect x="74.8" y="451.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.8" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.37%)</title><rect x="79.2" y="531.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.2" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.37%)</title><rect x="79.2" y="515.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.2" y="526.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.37%)</title><rect x="79.2" y="499.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.2" y="510.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.37%)</title><rect x="79.2" y="483.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="82.2" y="494.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.37%)</title><rect x="79.2" y="467.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.2" y="478.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.37%)</title><rect x="79.2" y="451.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.2" y="462.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.37%)</title><rect x="79.2" y="435.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.2" y="446.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.37%)</title><rect x="79.2" y="419.0" width="4.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="82.2" y="430.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.37%)</title><rect x="79.2" y="403.0" width="4.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="82.2" y="414.0"></text>
</g>
<g>
<title>write (1 samples, 0.37%)</title><rect x="79.2" y="387.0" width="4.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="82.2" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.37%)</title><rect x="83.5" y="531.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="86.5" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.37%)</title><rect x="83.5" y="515.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.5" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.37%)</title><rect x="83.5" y="499.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="86.5" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (1 samples, 0.37%)</title><rect x="83.5" y="483.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.5" y="494.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.37%)</title><rect x="83.5" y="467.0" width="4.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="86.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 1.47%)</title><rect x="87.8" y="675.0" width="17.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="90.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (4 samples, 1.47%)</title><rect x="87.8" y="659.0" width="17.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.8" y="670.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (4 samples, 1.47%)</title><rect x="87.8" y="643.0" width="17.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.8" y="654.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 1.47%)</title><rect x="87.8" y="627.0" width="17.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="90.8" y="638.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 1.47%)</title><rect x="87.8" y="611.0" width="17.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="90.8" y="622.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 1.47%)</title><rect x="87.8" y="595.0" width="17.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="90.8" y="606.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/remote/route/ServerDispatcher.getDispatcherServerName (1 samples, 0.37%)</title><rect x="105.1" y="691.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.1" y="702.0"></text>
</g>
<g>
<title>org/springframework/util/AntPathMatcher.match (1 samples, 0.37%)</title><rect x="105.1" y="675.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="108.1" y="686.0"></text>
</g>
<g>
<title>org/springframework/util/AntPathMatcher.doMatch (1 samples, 0.37%)</title><rect x="105.1" y="659.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="108.1" y="670.0"></text>
</g>
<g>
<title>org/springframework/util/AntPathMatcher.tokenizePath (1 samples, 0.37%)</title><rect x="105.1" y="643.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.1" y="654.0"></text>
</g>
<g>
<title>org/springframework/util/StringUtils.tokenizeToStringArray (1 samples, 0.37%)</title><rect x="105.1" y="627.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="108.1" y="638.0"></text>
</g>
<g>
<title>org/springframework/util/StringUtils.toStringArray (1 samples, 0.37%)</title><rect x="105.1" y="611.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.1" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.37%)</title><rect x="105.1" y="595.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="108.1" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.37%)</title><rect x="105.1" y="579.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.1" y="590.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.37%)</title><rect x="105.1" y="563.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.1" y="574.0"></text>
</g>
<g>
<title>JVM_GetComponentType (1 samples, 0.37%)</title><rect x="105.1" y="547.0" width="4.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="108.1" y="558.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.37%)</title><rect x="105.1" y="531.0" width="4.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="108.1" y="542.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/request/XhakaHttpServletRequest.getHeader (1 samples, 0.37%)</title><rect x="109.4" y="691.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="112.4" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.get (1 samples, 0.37%)</title><rect x="109.4" y="675.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.4" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.get (1 samples, 0.37%)</title><rect x="109.4" y="659.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.4" y="670.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils.getAsString (1 samples, 0.37%)</title><rect x="109.4" y="643.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.4" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.get (1 samples, 0.37%)</title><rect x="109.4" y="627.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="112.4" y="638.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.equals (1 samples, 0.37%)</title><rect x="109.4" y="611.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="112.4" y="622.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.equals (1 samples, 0.37%)</title><rect x="109.4" y="595.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.4" y="606.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaHttpServletResponse.replaceOriginResponse (3 samples, 1.10%)</title><rect x="113.7" y="691.0" width="13.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="116.7" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.get (1 samples, 0.37%)</title><rect x="113.7" y="675.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.7" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.get (1 samples, 0.37%)</title><rect x="113.7" y="659.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.7" y="670.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils.getAsString (1 samples, 0.37%)</title><rect x="113.7" y="643.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.7" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.get (1 samples, 0.37%)</title><rect x="113.7" y="627.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.7" y="638.0"></text>
</g>
<g>
<title>java/io/PrintWriter.&lt;init&gt; (2 samples, 0.73%)</title><rect x="118.1" y="675.0" width="8.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.1" y="686.0"></text>
</g>
<g>
<title>java/io/PrintWriter.&lt;init&gt; (2 samples, 0.73%)</title><rect x="118.1" y="659.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="121.1" y="670.0"></text>
</g>
<g>
<title>java/io/BufferedWriter.&lt;init&gt; (1 samples, 0.37%)</title><rect x="118.1" y="643.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.1" y="654.0"></text>
</g>
<g>
<title>java/io/BufferedWriter.&lt;init&gt; (1 samples, 0.37%)</title><rect x="118.1" y="627.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.1" y="638.0"></text>
</g>
<g>
<title>new_type_array Runtime1 stub (1 samples, 0.37%)</title><rect x="118.1" y="611.0" width="4.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="121.1" y="622.0"></text>
</g>
<g>
<title>java/io/OutputStreamWriter.&lt;init&gt; (1 samples, 0.37%)</title><rect x="122.4" y="643.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.forOutputStreamWriter (1 samples, 0.37%)</title><rect x="122.4" y="627.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.4" y="638.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.&lt;init&gt; (1 samples, 0.37%)</title><rect x="122.4" y="611.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="125.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8.newEncoder (1 samples, 0.37%)</title><rect x="122.4" y="595.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.4" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpRequest.copy (1 samples, 0.37%)</title><rect x="126.7" y="691.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.7" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.copy (1 samples, 0.37%)</title><rect x="126.7" y="675.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.7" y="686.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaServletOutputStream.flush (1 samples, 0.37%)</title><rect x="131.0" y="787.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="134.0" y="798.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaHttpServletResponse.setResponseBasicHeader (1 samples, 0.37%)</title><rect x="131.0" y="771.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="134.0" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.add (1 samples, 0.37%)</title><rect x="131.0" y="755.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.0" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.addObject (1 samples, 0.37%)</title><rect x="131.0" y="739.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.0" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add (1 samples, 0.37%)</title><rect x="131.0" y="723.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.0" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$2.validateName (1 samples, 0.37%)</title><rect x="131.0" y="707.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.0" y="718.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.takeTask (13 samples, 4.76%)</title><rect x="135.3" y="883.0" width="56.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.3" y="894.0">io/net..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (13 samples, 4.76%)</title><rect x="135.3" y="867.0" width="56.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="138.3" y="878.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (13 samples, 4.76%)</title><rect x="135.3" y="851.0" width="56.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="138.3" y="862.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (13 samples, 4.76%)</title><rect x="135.3" y="835.0" width="56.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.3" y="846.0">java/u..</text>
</g>
<g>
<title>sun/misc/Unsafe.park (13 samples, 4.76%)</title><rect x="135.3" y="819.0" width="56.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.3" y="830.0">sun/mi..</text>
</g>
<g>
<title>Unsafe_Park (13 samples, 4.76%)</title><rect x="135.3" y="803.0" width="56.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="138.3" y="814.0">Unsafe..</text>
</g>
<g>
<title>Parker::park(bool, long) (13 samples, 4.76%)</title><rect x="135.3" y="787.0" width="56.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="138.3" y="798.0">Parker..</text>
</g>
<g>
<title>__psynch_cvwait (13 samples, 4.76%)</title><rect x="135.3" y="771.0" width="56.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="138.3" y="782.0">__psyn..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.run (78 samples, 28.57%)</title><rect x="191.5" y="899.0" width="337.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.5" y="910.0">io/netty/channel/nio/NioEventLoop.run</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeys (28 samples, 10.26%)</title><rect x="195.9" y="883.0" width="121.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.9" y="894.0">io/netty/channe..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized (28 samples, 10.26%)</title><rect x="195.9" y="867.0" width="121.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.9" y="878.0">io/netty/channe..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKey (28 samples, 10.26%)</title><rect x="195.9" y="851.0" width="121.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="198.9" y="862.0">io/netty/channe..</text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read (27 samples, 9.89%)</title><rect x="195.9" y="835.0" width="116.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="198.9" y="846.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (26 samples, 9.52%)</title><rect x="195.9" y="819.0" width="112.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="198.9" y="830.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (26 samples, 9.52%)</title><rect x="195.9" y="803.0" width="112.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="198.9" y="814.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (26 samples, 9.52%)</title><rect x="195.9" y="787.0" width="112.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="198.9" y="798.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (26 samples, 9.52%)</title><rect x="195.9" y="771.0" width="112.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="198.9" y="782.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (26 samples, 9.52%)</title><rect x="195.9" y="755.0" width="112.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="198.9" y="766.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (26 samples, 9.52%)</title><rect x="195.9" y="739.0" width="112.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.9" y="750.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (26 samples, 9.52%)</title><rect x="195.9" y="723.0" width="112.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.9" y="734.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelRead (11 samples, 4.03%)</title><rect x="195.9" y="707.0" width="47.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.9" y="718.0">io/n..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (11 samples, 4.03%)</title><rect x="195.9" y="691.0" width="47.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="198.9" y="702.0">io/n..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.callDecode (1 samples, 0.37%)</title><rect x="195.9" y="675.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.9" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.decode (1 samples, 0.37%)</title><rect x="195.9" y="659.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.9" y="670.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.readHeaders (1 samples, 0.37%)</title><rect x="195.9" y="643.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="198.9" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.add (1 samples, 0.37%)</title><rect x="195.9" y="627.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.9" y="638.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.addObject (1 samples, 0.37%)</title><rect x="195.9" y="611.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.9" y="622.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add (1 samples, 0.37%)</title><rect x="195.9" y="595.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.9" y="606.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.hashCode (1 samples, 0.37%)</title><rect x="195.9" y="579.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="198.9" y="590.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.hashCode (1 samples, 0.37%)</title><rect x="195.9" y="563.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="198.9" y="574.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString.hashCode (1 samples, 0.37%)</title><rect x="195.9" y="547.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="198.9" y="558.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.hashCodeAscii (1 samples, 0.37%)</title><rect x="195.9" y="531.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="198.9" y="542.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.hashCodeAsciiSanitizeShort (1 samples, 0.37%)</title><rect x="195.9" y="515.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="198.9" y="526.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (10 samples, 3.66%)</title><rect x="200.2" y="675.0" width="43.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="203.2" y="686.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead (10 samples, 3.66%)</title><rect x="200.2" y="659.0" width="43.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.2" y="670.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (10 samples, 3.66%)</title><rect x="200.2" y="643.0" width="43.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.2" y="654.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (10 samples, 3.66%)</title><rect x="200.2" y="627.0" width="43.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="203.2" y="638.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (10 samples, 3.66%)</title><rect x="200.2" y="611.0" width="43.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="203.2" y="622.0">io/n..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (10 samples, 3.66%)</title><rect x="200.2" y="595.0" width="43.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.2" y="606.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (10 samples, 3.66%)</title><rect x="200.2" y="579.0" width="43.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="203.2" y="590.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (10 samples, 3.66%)</title><rect x="200.2" y="563.0" width="43.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="203.2" y="574.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (10 samples, 3.66%)</title><rect x="200.2" y="547.0" width="43.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="203.2" y="558.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelRead (10 samples, 3.66%)</title><rect x="200.2" y="531.0" width="43.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="203.2" y="542.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (10 samples, 3.66%)</title><rect x="200.2" y="515.0" width="43.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="203.2" y="526.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (10 samples, 3.66%)</title><rect x="200.2" y="499.0" width="43.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="203.2" y="510.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (10 samples, 3.66%)</title><rect x="200.2" y="483.0" width="43.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="203.2" y="494.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (10 samples, 3.66%)</title><rect x="200.2" y="467.0" width="43.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.2" y="478.0">io/n..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/handler/FullHttpRequest2HttpServletHandler.channelRead0 (10 samples, 3.66%)</title><rect x="200.2" y="451.0" width="43.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="203.2" y="462.0">com/..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/handler/FullHttpRequest2HttpServletHandler.channelRead0 (10 samples, 3.66%)</title><rect x="200.2" y="435.0" width="43.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.2" y="446.0">com/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (8 samples, 2.93%)</title><rect x="200.2" y="419.0" width="34.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.2" y="430.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (8 samples, 2.93%)</title><rect x="200.2" y="403.0" width="34.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.2" y="414.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (8 samples, 2.93%)</title><rect x="200.2" y="387.0" width="34.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.2" y="398.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (8 samples, 2.93%)</title><rect x="200.2" y="371.0" width="34.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="203.2" y="382.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (8 samples, 2.93%)</title><rect x="200.2" y="355.0" width="34.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.2" y="366.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (8 samples, 2.93%)</title><rect x="200.2" y="339.0" width="34.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.2" y="350.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (8 samples, 2.93%)</title><rect x="200.2" y="323.0" width="34.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.2" y="334.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (8 samples, 2.93%)</title><rect x="200.2" y="307.0" width="34.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.2" y="318.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (8 samples, 2.93%)</title><rect x="200.2" y="291.0" width="34.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="203.2" y="302.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (3 samples, 1.10%)</title><rect x="200.2" y="275.0" width="13.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.2" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (3 samples, 1.10%)</title><rect x="200.2" y="259.0" width="13.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.2" y="270.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (3 samples, 1.10%)</title><rect x="200.2" y="243.0" width="13.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.2" y="254.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (3 samples, 1.10%)</title><rect x="200.2" y="227.0" width="13.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.2" y="238.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (3 samples, 1.10%)</title><rect x="200.2" y="211.0" width="13.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="203.2" y="222.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (3 samples, 1.10%)</title><rect x="200.2" y="195.0" width="13.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.2" y="206.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpRequest.toString (3 samples, 1.10%)</title><rect x="200.2" y="179.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="203.2" y="190.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMessageUtil.appendFullRequest (3 samples, 1.10%)</title><rect x="200.2" y="163.0" width="13.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="203.2" y="174.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMessageUtil.appendFullCommon (3 samples, 1.10%)</title><rect x="200.2" y="147.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="203.2" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 1.10%)</title><rect x="200.2" y="131.0" width="13.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="203.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (3 samples, 1.10%)</title><rect x="200.2" y="115.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="203.2" y="126.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.toString (3 samples, 1.10%)</title><rect x="200.2" y="99.0" width="13.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.2" y="110.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.toString (2 samples, 0.73%)</title><rect x="200.2" y="83.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="203.2" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.73%)</title><rect x="200.2" y="67.0" width="8.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="203.2" y="78.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.unwrap (1 samples, 0.37%)</title><rect x="200.2" y="51.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="203.2" y="62.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.37%)</title><rect x="204.5" y="51.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.5" y="62.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.37%)</title><rect x="204.5" y="35.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="207.5" y="46.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.37%)</title><rect x="208.8" y="83.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="211.8" y="94.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.37%)</title><rect x="208.8" y="67.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="211.8" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (4 samples, 1.47%)</title><rect x="213.2" y="275.0" width="17.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.37%)</title><rect x="213.2" y="259.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="216.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (1 samples, 0.37%)</title><rect x="213.2" y="243.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="216.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.37%)</title><rect x="213.2" y="227.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="216.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.37%)</title><rect x="213.2" y="211.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.37%)</title><rect x="213.2" y="195.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.37%)</title><rect x="213.2" y="179.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.2" y="190.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.37%)</title><rect x="213.2" y="163.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.2" y="174.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.37%)</title><rect x="213.2" y="147.0" width="4.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="216.2" y="158.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.37%)</title><rect x="213.2" y="131.0" width="4.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="216.2" y="142.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.37%)</title><rect x="213.2" y="115.0" width="4.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="216.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 1.10%)</title><rect x="217.5" y="259.0" width="12.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="220.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 1.10%)</title><rect x="217.5" y="243.0" width="12.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="220.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 1.10%)</title><rect x="217.5" y="227.0" width="12.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="220.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 1.10%)</title><rect x="217.5" y="211.0" width="12.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.5" y="222.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (3 samples, 1.10%)</title><rect x="217.5" y="195.0" width="12.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="220.5" y="206.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 1.10%)</title><rect x="217.5" y="179.0" width="12.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="220.5" y="190.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.73%)</title><rect x="217.5" y="163.0" width="8.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="220.5" y="174.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.73%)</title><rect x="217.5" y="147.0" width="8.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="220.5" y="158.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.37%)</title><rect x="226.1" y="163.0" width="4.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="229.1" y="174.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (1 samples, 0.37%)</title><rect x="226.1" y="147.0" width="4.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="229.1" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.37%)</title><rect x="230.4" y="275.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="233.4" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.37%)</title><rect x="230.4" y="259.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.4" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.37%)</title><rect x="230.4" y="243.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="233.4" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (1 samples, 0.37%)</title><rect x="230.4" y="227.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="233.4" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (1 samples, 0.37%)</title><rect x="230.4" y="211.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="233.4" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.37%)</title><rect x="230.4" y="195.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="233.4" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.37%)</title><rect x="230.4" y="179.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="233.4" y="190.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaHttpServletResponse.&lt;init&gt; (2 samples, 0.73%)</title><rect x="234.8" y="419.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="237.8" y="430.0"></text>
</g>
<g>
<title>java/io/PrintWriter.&lt;init&gt; (2 samples, 0.73%)</title><rect x="234.8" y="403.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.8" y="414.0"></text>
</g>
<g>
<title>java/io/PrintWriter.&lt;init&gt; (2 samples, 0.73%)</title><rect x="234.8" y="387.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.8" y="398.0"></text>
</g>
<g>
<title>java/io/BufferedWriter.&lt;init&gt; (2 samples, 0.73%)</title><rect x="234.8" y="371.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.8" y="382.0"></text>
</g>
<g>
<title>java/io/BufferedWriter.&lt;init&gt; (2 samples, 0.73%)</title><rect x="234.8" y="355.0" width="8.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.8" y="366.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="239.1" y="339.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="242.1" y="350.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.37%)</title><rect x="239.1" y="323.0" width="4.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="242.1" y="334.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.37%)</title><rect x="239.1" y="307.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="242.1" y="318.0"></text>
</g>
<g>
<title>vframeStreamCommon::next() (1 samples, 0.37%)</title><rect x="239.1" y="291.0" width="4.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="242.1" y="302.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.37%)</title><rect x="239.1" y="275.0" width="4.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="242.1" y="286.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.37%)</title><rect x="239.1" y="259.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="242.1" y="270.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.37%)</title><rect x="239.1" y="243.0" width="4.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="242.1" y="254.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.37%)</title><rect x="239.1" y="227.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="242.1" y="238.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (15 samples, 5.49%)</title><rect x="243.4" y="707.0" width="64.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="246.4" y="718.0">io/nett..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.callDecode (9 samples, 3.30%)</title><rect x="243.4" y="691.0" width="38.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="246.4" y="702.0">io/..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (6 samples, 2.20%)</title><rect x="243.4" y="675.0" width="25.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.4" y="686.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (6 samples, 2.20%)</title><rect x="243.4" y="659.0" width="25.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="246.4" y="670.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (6 samples, 2.20%)</title><rect x="243.4" y="643.0" width="25.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.4" y="654.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (6 samples, 2.20%)</title><rect x="243.4" y="627.0" width="25.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="246.4" y="638.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (6 samples, 2.20%)</title><rect x="243.4" y="611.0" width="25.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="246.4" y="622.0">i..</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (5 samples, 1.83%)</title><rect x="247.7" y="595.0" width="21.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="250.7" y="606.0">i..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (5 samples, 1.83%)</title><rect x="247.7" y="579.0" width="21.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="250.7" y="590.0">c..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (5 samples, 1.83%)</title><rect x="247.7" y="563.0" width="21.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="250.7" y="574.0">c..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (5 samples, 1.83%)</title><rect x="247.7" y="547.0" width="21.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.7" y="558.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (5 samples, 1.83%)</title><rect x="247.7" y="531.0" width="21.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="250.7" y="542.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (5 samples, 1.83%)</title><rect x="247.7" y="515.0" width="21.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="250.7" y="526.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (5 samples, 1.83%)</title><rect x="247.7" y="499.0" width="21.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.7" y="510.0">i..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/Xhaka2FullHttpResponseDecoder.decode (2 samples, 0.73%)</title><rect x="247.7" y="483.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="250.7" y="494.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/Xhaka2FullHttpResponseDecoder.decode (2 samples, 0.73%)</title><rect x="247.7" y="467.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="250.7" y="478.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpResponseProtobufTypeSerialize.deserialize (2 samples, 0.73%)</title><rect x="247.7" y="451.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="250.7" y="462.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpResponseProtobufTypeSerialize.deserialize (2 samples, 0.73%)</title><rect x="247.7" y="435.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="250.7" y="446.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse.parseFrom (1 samples, 0.37%)</title><rect x="247.7" y="419.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.7" y="430.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.37%)</title><rect x="247.7" y="403.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="250.7" y="414.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.37%)</title><rect x="247.7" y="387.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="250.7" y="398.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.37%)</title><rect x="247.7" y="371.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="250.7" y="382.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.37%)</title><rect x="247.7" y="355.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="250.7" y="366.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (1 samples, 0.37%)</title><rect x="247.7" y="339.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="250.7" y="350.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream.newInstance (1 samples, 0.37%)</title><rect x="247.7" y="323.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="250.7" y="334.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.add (1 samples, 0.37%)</title><rect x="252.1" y="419.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="255.1" y="430.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.addObject (1 samples, 0.37%)</title><rect x="252.1" y="403.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.1" y="414.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add (1 samples, 0.37%)</title><rect x="252.1" y="387.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="255.1" y="398.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$2.validateName (1 samples, 0.37%)</title><rect x="252.1" y="371.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="255.1" y="382.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (3 samples, 1.10%)</title><rect x="256.4" y="483.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="259.4" y="494.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (3 samples, 1.10%)</title><rect x="256.4" y="467.0" width="12.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.4" y="478.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (3 samples, 1.10%)</title><rect x="256.4" y="451.0" width="12.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.4" y="462.0"></text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (3 samples, 1.10%)</title><rect x="256.4" y="435.0" width="12.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.4" y="446.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/SlaveXhakaHttpServletResponsehHandler.channelRead0 (3 samples, 1.10%)</title><rect x="256.4" y="419.0" width="12.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="259.4" y="430.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/SlaveXhakaHttpServletResponsehHandler.channelRead0 (3 samples, 1.10%)</title><rect x="256.4" y="403.0" width="12.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="259.4" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1 samples, 0.37%)</title><rect x="256.4" y="387.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="259.4" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (1 samples, 0.37%)</title><rect x="256.4" y="371.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.4" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.37%)</title><rect x="256.4" y="355.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="259.4" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.37%)</title><rect x="256.4" y="339.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.4" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.37%)</title><rect x="256.4" y="323.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.4" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.37%)</title><rect x="256.4" y="307.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="259.4" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.37%)</title><rect x="256.4" y="291.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="259.4" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.37%)</title><rect x="256.4" y="275.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="259.4" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.37%)</title><rect x="256.4" y="259.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="259.4" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.37%)</title><rect x="256.4" y="243.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="259.4" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.37%)</title><rect x="256.4" y="227.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="259.4" y="238.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.37%)</title><rect x="256.4" y="211.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="259.4" y="222.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.37%)</title><rect x="256.4" y="195.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="259.4" y="206.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.37%)</title><rect x="256.4" y="179.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="259.4" y="190.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.37%)</title><rect x="256.4" y="163.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.4" y="174.0"></text>
</g>
<g>
<title>java/lang/Long.toString (1 samples, 0.37%)</title><rect x="256.4" y="147.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="259.4" y="158.0"></text>
</g>
<g>
<title>java/lang/Long.toString (1 samples, 0.37%)</title><rect x="256.4" y="131.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="259.4" y="142.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.received (2 samples, 0.73%)</title><rect x="260.7" y="387.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="263.7" y="398.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.doReceived (2 samples, 0.73%)</title><rect x="260.7" y="371.0" width="8.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="263.7" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (2 samples, 0.73%)</title><rect x="260.7" y="355.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="263.7" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (2 samples, 0.73%)</title><rect x="260.7" y="339.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="263.7" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (2 samples, 0.73%)</title><rect x="260.7" y="323.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.7" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (2 samples, 0.73%)</title><rect x="260.7" y="307.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="263.7" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (2 samples, 0.73%)</title><rect x="260.7" y="291.0" width="8.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="263.7" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (2 samples, 0.73%)</title><rect x="260.7" y="275.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.7" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (2 samples, 0.73%)</title><rect x="260.7" y="259.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="263.7" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (2 samples, 0.73%)</title><rect x="260.7" y="243.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.7" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (2 samples, 0.73%)</title><rect x="260.7" y="227.0" width="8.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="263.7" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.37%)</title><rect x="260.7" y="211.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="263.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.37%)</title><rect x="260.7" y="195.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="263.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (1 samples, 0.37%)</title><rect x="260.7" y="179.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="263.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.37%)</title><rect x="260.7" y="163.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="263.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.37%)</title><rect x="260.7" y="147.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="263.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.37%)</title><rect x="260.7" y="131.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="263.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.37%)</title><rect x="260.7" y="115.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.7" y="126.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.37%)</title><rect x="260.7" y="99.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="263.7" y="110.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.37%)</title><rect x="260.7" y="83.0" width="4.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="263.7" y="94.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.37%)</title><rect x="260.7" y="67.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="263.7" y="78.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.37%)</title><rect x="260.7" y="51.0" width="4.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="263.7" y="62.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.37%)</title><rect x="265.0" y="211.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="268.0" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.37%)</title><rect x="265.0" y="195.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.0" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.37%)</title><rect x="265.0" y="179.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="268.0" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (1 samples, 0.37%)</title><rect x="265.0" y="163.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="268.0" y="174.0"></text>
</g>
<g>
<title>io/netty/handler/codec/LengthFieldBasedFrameDecoder.decode (3 samples, 1.10%)</title><rect x="269.3" y="675.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="272.3" y="686.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/XhakaDecoder.decode (3 samples, 1.10%)</title><rect x="269.3" y="659.0" width="13.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.3" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (3 samples, 1.10%)</title><rect x="269.3" y="643.0" width="13.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.3" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (3 samples, 1.10%)</title><rect x="269.3" y="627.0" width="13.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="272.3" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (3 samples, 1.10%)</title><rect x="269.3" y="611.0" width="13.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="272.3" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (3 samples, 1.10%)</title><rect x="269.3" y="595.0" width="13.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="272.3" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (3 samples, 1.10%)</title><rect x="269.3" y="579.0" width="13.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.3" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (3 samples, 1.10%)</title><rect x="269.3" y="563.0" width="13.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="272.3" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (3 samples, 1.10%)</title><rect x="269.3" y="547.0" width="13.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="272.3" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (2 samples, 0.73%)</title><rect x="269.3" y="531.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="272.3" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (2 samples, 0.73%)</title><rect x="269.3" y="515.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.3" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.37%)</title><rect x="269.3" y="499.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="272.3" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.37%)</title><rect x="269.3" y="483.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="272.3" y="494.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.37%)</title><rect x="269.3" y="467.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="272.3" y="478.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.37%)</title><rect x="269.3" y="451.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.3" y="462.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.37%)</title><rect x="269.3" y="435.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="272.3" y="446.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (1 samples, 0.37%)</title><rect x="269.3" y="419.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="272.3" y="430.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.37%)</title><rect x="269.3" y="403.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="272.3" y="414.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.37%)</title><rect x="269.3" y="387.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="272.3" y="398.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.37%)</title><rect x="269.3" y="371.0" width="4.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="272.3" y="382.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.37%)</title><rect x="269.3" y="355.0" width="4.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="272.3" y="366.0"></text>
</g>
<g>
<title>jni_GetIntField (1 samples, 0.37%)</title><rect x="269.3" y="339.0" width="4.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="272.3" y="350.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.37%)</title><rect x="269.3" y="323.0" width="4.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="272.3" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.37%)</title><rect x="273.7" y="499.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="276.7" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.37%)</title><rect x="273.7" y="483.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="276.7" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.37%)</title><rect x="273.7" y="467.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="276.7" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (1 samples, 0.37%)</title><rect x="273.7" y="451.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="276.7" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (1 samples, 0.37%)</title><rect x="273.7" y="435.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="276.7" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.37%)</title><rect x="273.7" y="419.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="276.7" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.37%)</title><rect x="273.7" y="403.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.7" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.37%)</title><rect x="273.7" y="387.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="276.7" y="398.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.37%)</title><rect x="273.7" y="371.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="276.7" y="382.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.37%)</title><rect x="273.7" y="355.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="276.7" y="366.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.37%)</title><rect x="273.7" y="339.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="276.7" y="350.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (1 samples, 0.37%)</title><rect x="273.7" y="323.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.7" y="334.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (1 samples, 0.37%)</title><rect x="273.7" y="307.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.7" y="318.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.37%)</title><rect x="273.7" y="291.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="276.7" y="302.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.37%)</title><rect x="273.7" y="275.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="276.7" y="286.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getOffsets (1 samples, 0.37%)</title><rect x="273.7" y="259.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.7" y="270.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getOffsets (1 samples, 0.37%)</title><rect x="273.7" y="243.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="276.7" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.37%)</title><rect x="278.0" y="531.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.0" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$100 (1 samples, 0.37%)</title><rect x="278.0" y="515.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="281.0" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.37%)</title><rect x="278.0" y="499.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="281.0" y="510.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (6 samples, 2.20%)</title><rect x="282.3" y="691.0" width="25.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="285.3" y="702.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (6 samples, 2.20%)</title><rect x="282.3" y="675.0" width="25.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="285.3" y="686.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (6 samples, 2.20%)</title><rect x="282.3" y="659.0" width="25.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="285.3" y="670.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (6 samples, 2.20%)</title><rect x="282.3" y="643.0" width="25.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="285.3" y="654.0">i..</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (6 samples, 2.20%)</title><rect x="282.3" y="627.0" width="25.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.3" y="638.0">i..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (6 samples, 2.20%)</title><rect x="282.3" y="611.0" width="25.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="285.3" y="622.0">c..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (6 samples, 2.20%)</title><rect x="282.3" y="595.0" width="25.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.3" y="606.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.37%)</title><rect x="282.3" y="579.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.3" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.37%)</title><rect x="282.3" y="563.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="285.3" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.37%)</title><rect x="282.3" y="547.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="285.3" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.37%)</title><rect x="282.3" y="531.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="285.3" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.37%)</title><rect x="282.3" y="515.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.3" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.37%)</title><rect x="282.3" y="499.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="285.3" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.37%)</title><rect x="282.3" y="483.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.3" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.37%)</title><rect x="282.3" y="467.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="285.3" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.37%)</title><rect x="282.3" y="451.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.3" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.37%)</title><rect x="282.3" y="435.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="285.3" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.37%)</title><rect x="282.3" y="419.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.3" y="430.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.37%)</title><rect x="282.3" y="403.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="285.3" y="414.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.37%)</title><rect x="282.3" y="387.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.37%)</title><rect x="282.3" y="371.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.3" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.37%)</title><rect x="282.3" y="355.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="285.3" y="366.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (5 samples, 1.83%)</title><rect x="286.6" y="579.0" width="21.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.6" y="590.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (5 samples, 1.83%)</title><rect x="286.6" y="563.0" width="21.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.6" y="574.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (5 samples, 1.83%)</title><rect x="286.6" y="547.0" width="21.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.6" y="558.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (5 samples, 1.83%)</title><rect x="286.6" y="531.0" width="21.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.6" y="542.0">i..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/Xhaka2FullHttpResponseDecoder.decode (1 samples, 0.37%)</title><rect x="286.6" y="515.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.6" y="526.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/Xhaka2FullHttpResponseDecoder.decode (1 samples, 0.37%)</title><rect x="286.6" y="499.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="289.6" y="510.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpResponseProtobufTypeSerialize.deserialize (1 samples, 0.37%)</title><rect x="286.6" y="483.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.6" y="494.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpResponseProtobufTypeSerialize.deserialize (1 samples, 0.37%)</title><rect x="286.6" y="467.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.6" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.37%)</title><rect x="286.6" y="451.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="289.6" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.37%)</title><rect x="286.6" y="435.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.6" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1 samples, 0.37%)</title><rect x="286.6" y="419.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.6" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.37%)</title><rect x="286.6" y="403.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="289.6" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.37%)</title><rect x="286.6" y="387.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.6" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocateTiny (1 samples, 0.37%)</title><rect x="286.6" y="371.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.6" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.allocate (1 samples, 0.37%)</title><rect x="286.6" y="355.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.6" y="366.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.allocate (1 samples, 0.37%)</title><rect x="286.6" y="339.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.6" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.recycle (1 samples, 0.37%)</title><rect x="286.6" y="323.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="289.6" y="334.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$DefaultHandle.recycle (1 samples, 0.37%)</title><rect x="286.6" y="307.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.6" y="318.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$WeakOrderQueue.add (1 samples, 0.37%)</title><rect x="286.6" y="291.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="289.6" y="302.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (4 samples, 1.47%)</title><rect x="291.0" y="515.0" width="17.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="294.0" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (4 samples, 1.47%)</title><rect x="291.0" y="499.0" width="17.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="294.0" y="510.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (4 samples, 1.47%)</title><rect x="291.0" y="483.0" width="17.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.0" y="494.0"></text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (4 samples, 1.47%)</title><rect x="291.0" y="467.0" width="17.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="294.0" y="478.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/SlaveXhakaHttpServletResponsehHandler.channelRead0 (4 samples, 1.47%)</title><rect x="291.0" y="451.0" width="17.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="294.0" y="462.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/SlaveXhakaHttpServletResponsehHandler.channelRead0 (4 samples, 1.47%)</title><rect x="291.0" y="435.0" width="17.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="294.0" y="446.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.received (3 samples, 1.10%)</title><rect x="291.0" y="419.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.0" y="430.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.doReceived (3 samples, 1.10%)</title><rect x="291.0" y="403.0" width="12.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 1.10%)</title><rect x="291.0" y="387.0" width="12.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="294.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 1.10%)</title><rect x="291.0" y="371.0" width="12.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="294.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 1.10%)</title><rect x="291.0" y="355.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 1.10%)</title><rect x="291.0" y="339.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.0" y="350.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (3 samples, 1.10%)</title><rect x="291.0" y="323.0" width="12.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="294.0" y="334.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 1.10%)</title><rect x="291.0" y="307.0" width="12.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="294.0" y="318.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.73%)</title><rect x="291.0" y="291.0" width="8.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="294.0" y="302.0"></text>
</g>
<g>
<title>__psynch_cvsignal (2 samples, 0.73%)</title><rect x="291.0" y="275.0" width="8.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="294.0" y="286.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.37%)</title><rect x="299.6" y="291.0" width="4.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="302.6" y="302.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (1 samples, 0.37%)</title><rect x="299.6" y="275.0" width="4.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="302.6" y="286.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.get (1 samples, 0.37%)</title><rect x="303.9" y="419.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="306.9" y="430.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.get (1 samples, 0.37%)</title><rect x="303.9" y="403.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.9" y="414.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils.getAsString (1 samples, 0.37%)</title><rect x="303.9" y="387.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.9" y="398.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.get (1 samples, 0.37%)</title><rect x="303.9" y="371.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="306.9" y="382.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.equals (1 samples, 0.37%)</title><rect x="303.9" y="355.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="306.9" y="366.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.equals (1 samples, 0.37%)</title><rect x="303.9" y="339.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="306.9" y="350.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString.contentEqualsIgnoreCase (1 samples, 0.37%)</title><rect x="303.9" y="323.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="306.9" y="334.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelReadComplete (1 samples, 0.37%)</title><rect x="308.2" y="819.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="311.2" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (1 samples, 0.37%)</title><rect x="308.2" y="803.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.2" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (1 samples, 0.37%)</title><rect x="308.2" y="787.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="311.2" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelReadComplete (1 samples, 0.37%)</title><rect x="308.2" y="771.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="311.2" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.readIfIsAutoRead (1 samples, 0.37%)</title><rect x="308.2" y="755.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.2" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.read (1 samples, 0.37%)</title><rect x="308.2" y="739.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="311.2" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.read (1 samples, 0.37%)</title><rect x="308.2" y="723.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.2" y="734.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.37%)</title><rect x="308.2" y="707.0" width="4.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="311.2" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioMessageChannel$NioMessageUnsafe.read (1 samples, 0.37%)</title><rect x="312.6" y="835.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="315.6" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioServerSocketChannel.doReadMessages (1 samples, 0.37%)</title><rect x="312.6" y="819.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="315.6" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.&lt;init&gt; (1 samples, 0.37%)</title><rect x="312.6" y="803.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="315.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.socket (1 samples, 0.37%)</title><rect x="312.6" y="787.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="315.6" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.create (1 samples, 0.37%)</title><rect x="312.6" y="771.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="315.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.&lt;init&gt; (1 samples, 0.37%)</title><rect x="312.6" y="755.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.6" y="766.0"></text>
</g>
<g>
<title>java/net/Socket.&lt;init&gt; (1 samples, 0.37%)</title><rect x="312.6" y="739.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="315.6" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.select (29 samples, 10.62%)</title><rect x="316.9" y="883.0" width="125.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="319.9" y="894.0">io/netty/channe..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (29 samples, 10.62%)</title><rect x="316.9" y="867.0" width="125.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="319.9" y="878.0">sun/nio/ch/Sele..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (29 samples, 10.62%)</title><rect x="316.9" y="851.0" width="125.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="319.9" y="862.0">sun/nio/ch/Sele..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (29 samples, 10.62%)</title><rect x="316.9" y="835.0" width="125.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="319.9" y="846.0">sun/nio/ch/KQue..</text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.poll (29 samples, 10.62%)</title><rect x="316.9" y="819.0" width="125.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="319.9" y="830.0">sun/nio/ch/KQue..</text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.kevent0 (29 samples, 10.62%)</title><rect x="316.9" y="803.0" width="125.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="319.9" y="814.0">sun/nio/ch/KQue..</text>
</g>
<g>
<title>kevent (29 samples, 10.62%)</title><rect x="316.9" y="787.0" width="125.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="319.9" y="798.0">kevent</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.runAllTasks (19 samples, 6.96%)</title><rect x="442.2" y="883.0" width="82.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.2" y="894.0">io/netty/..</text>
</g>
<g>
<title>io/netty/channel/SingleThreadEventLoop.afterRunningAllTasks (1 samples, 0.37%)</title><rect x="442.2" y="867.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="445.2" y="878.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.runAllTasksFrom (1 samples, 0.37%)</title><rect x="442.2" y="851.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.2" y="862.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.pollTaskFrom (1 samples, 0.37%)</title><rect x="442.2" y="835.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="445.2" y="846.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscChunkedArrayQueue.poll (1 samples, 0.37%)</title><rect x="442.2" y="819.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="445.2" y="830.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.safeExecute (18 samples, 6.59%)</title><rect x="446.6" y="867.0" width="77.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="449.6" y="878.0">io/netty/..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaServletOutputStream$$Lambda$191/457922692.run (3 samples, 1.10%)</title><rect x="446.6" y="851.0" width="12.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="449.6" y="862.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaServletOutputStream.lambda$flush$1 (3 samples, 1.10%)</title><rect x="446.6" y="835.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="449.6" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.flush (1 samples, 0.37%)</title><rect x="446.6" y="819.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="449.6" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundHandlerAdapter.flush (1 samples, 0.37%)</title><rect x="446.6" y="803.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="449.6" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush (1 samples, 0.37%)</title><rect x="446.6" y="787.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="449.6" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (1 samples, 0.37%)</title><rect x="446.6" y="771.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="449.6" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (1 samples, 0.37%)</title><rect x="446.6" y="755.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.6" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (1 samples, 0.37%)</title><rect x="446.6" y="739.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="449.6" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.flush (1 samples, 0.37%)</title><rect x="446.6" y="723.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.6" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush (1 samples, 0.37%)</title><rect x="446.6" y="707.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.6" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.flush0 (1 samples, 0.37%)</title><rect x="446.6" y="691.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="449.6" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (1 samples, 0.37%)</title><rect x="446.6" y="675.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="449.6" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doWrite (1 samples, 0.37%)</title><rect x="446.6" y="659.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.6" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.37%)</title><rect x="446.6" y="643.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="449.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.37%)</title><rect x="446.6" y="627.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="449.6" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (1 samples, 0.37%)</title><rect x="446.6" y="611.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="449.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (1 samples, 0.37%)</title><rect x="446.6" y="595.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="449.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.37%)</title><rect x="446.6" y="579.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="449.6" y="590.0"></text>
</g>
<g>
<title>write (1 samples, 0.37%)</title><rect x="446.6" y="563.0" width="4.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="449.6" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.write (2 samples, 0.73%)</title><rect x="450.9" y="819.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.9" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (2 samples, 0.73%)</title><rect x="450.9" y="803.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="453.9" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.write (1 samples, 0.37%)</title><rect x="450.9" y="787.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="453.9" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.37%)</title><rect x="450.9" y="771.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.9" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.37%)</title><rect x="450.9" y="755.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.9" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.eventLoop (1 samples, 0.37%)</title><rect x="450.9" y="739.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.9" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectEncoder.encode (1 samples, 0.37%)</title><rect x="455.2" y="787.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="458.2" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectEncoder.encodeHeaders (1 samples, 0.37%)</title><rect x="455.2" y="771.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="458.2" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeadersEncoder.encoderHeader (1 samples, 0.37%)</title><rect x="455.2" y="755.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="458.2" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeadersEncoder.writeAscii (1 samples, 0.37%)</title><rect x="455.2" y="739.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="458.2" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeadersEncoder.writeCharSequence (1 samples, 0.37%)</title><rect x="455.2" y="723.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="458.2" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.setByte (1 samples, 0.37%)</title><rect x="455.2" y="707.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="458.2" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex (1 samples, 0.37%)</title><rect x="455.2" y="691.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="458.2" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex (1 samples, 0.37%)</title><rect x="455.2" y="675.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="458.2" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex0 (1 samples, 0.37%)</title><rect x="455.2" y="659.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="458.2" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$AbstractWriteTask.run (15 samples, 5.49%)</title><rect x="459.5" y="851.0" width="64.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="462.5" y="862.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteAndFlushTask.write (15 samples, 5.49%)</title><rect x="459.5" y="835.0" width="64.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="462.5" y="846.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$AbstractWriteTask.write (15 samples, 5.49%)</title><rect x="459.5" y="819.0" width="64.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="462.5" y="830.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$1900 (15 samples, 5.49%)</title><rect x="459.5" y="803.0" width="64.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="462.5" y="814.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (15 samples, 5.49%)</title><rect x="459.5" y="787.0" width="64.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.5" y="798.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (15 samples, 5.49%)</title><rect x="459.5" y="771.0" width="64.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="462.5" y="782.0">io/nett..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (15 samples, 5.49%)</title><rect x="459.5" y="755.0" width="64.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.5" y="766.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (15 samples, 5.49%)</title><rect x="459.5" y="739.0" width="64.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.5" y="750.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (15 samples, 5.49%)</title><rect x="459.5" y="723.0" width="64.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.5" y="734.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (15 samples, 5.49%)</title><rect x="459.5" y="707.0" width="64.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="462.5" y="718.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (15 samples, 5.49%)</title><rect x="459.5" y="691.0" width="64.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="462.5" y="702.0">io/nett..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (15 samples, 5.49%)</title><rect x="459.5" y="675.0" width="64.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="462.5" y="686.0">io/nett..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.37%)</title><rect x="459.5" y="659.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="462.5" y="670.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/FullHttpRequest2XhakaEncoder.encode (12 samples, 4.40%)</title><rect x="463.8" y="659.0" width="51.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.8" y="670.0">com/t..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/FullHttpRequest2XhakaEncoder.encode (12 samples, 4.40%)</title><rect x="463.8" y="643.0" width="51.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.8" y="654.0">com/t..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (5 samples, 1.83%)</title><rect x="463.8" y="627.0" width="21.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.8" y="638.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (5 samples, 1.83%)</title><rect x="463.8" y="611.0" width="21.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.8" y="622.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (5 samples, 1.83%)</title><rect x="463.8" y="595.0" width="21.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.8" y="606.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (5 samples, 1.83%)</title><rect x="463.8" y="579.0" width="21.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.8" y="590.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (5 samples, 1.83%)</title><rect x="463.8" y="563.0" width="21.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.8" y="574.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (5 samples, 1.83%)</title><rect x="463.8" y="547.0" width="21.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="466.8" y="558.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (5 samples, 1.83%)</title><rect x="463.8" y="531.0" width="21.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.8" y="542.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (4 samples, 1.47%)</title><rect x="463.8" y="515.0" width="17.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="466.8" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (4 samples, 1.47%)</title><rect x="463.8" y="499.0" width="17.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.8" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (4 samples, 1.47%)</title><rect x="463.8" y="483.0" width="17.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.8" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (2 samples, 0.73%)</title><rect x="463.8" y="467.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="466.8" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (2 samples, 0.73%)</title><rect x="463.8" y="451.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.8" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (2 samples, 0.73%)</title><rect x="463.8" y="435.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.8" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (2 samples, 0.73%)</title><rect x="463.8" y="419.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.8" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (1 samples, 0.37%)</title><rect x="463.8" y="403.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.8" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (1 samples, 0.37%)</title><rect x="463.8" y="387.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.8" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.abbreviate (1 samples, 0.37%)</title><rect x="463.8" y="371.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.37%)</title><rect x="468.2" y="403.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.2" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.37%)</title><rect x="468.2" y="387.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.2" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (2 samples, 0.73%)</title><rect x="472.5" y="467.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="475.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.73%)</title><rect x="472.5" y="451.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="475.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.73%)</title><rect x="472.5" y="435.0" width="8.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="475.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.37%)</title><rect x="472.5" y="419.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (1 samples, 0.37%)</title><rect x="472.5" y="403.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="475.5" y="414.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.defaultCharset (1 samples, 0.37%)</title><rect x="476.8" y="419.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="479.8" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.37%)</title><rect x="481.1" y="515.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="484.1" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.37%)</title><rect x="481.1" y="499.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.1" y="510.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.writeAndFlush (7 samples, 2.56%)</title><rect x="485.5" y="627.0" width="30.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="488.5" y="638.0">io..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.writeAndFlush (7 samples, 2.56%)</title><rect x="485.5" y="611.0" width="30.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.5" y="622.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (7 samples, 2.56%)</title><rect x="485.5" y="595.0" width="30.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="488.5" y="606.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (7 samples, 2.56%)</title><rect x="485.5" y="579.0" width="30.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="488.5" y="590.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (7 samples, 2.56%)</title><rect x="485.5" y="563.0" width="30.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="488.5" y="574.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWriteAndFlush (7 samples, 2.56%)</title><rect x="485.5" y="547.0" width="30.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.5" y="558.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (2 samples, 0.73%)</title><rect x="485.5" y="531.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="488.5" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundHandlerAdapter.flush (2 samples, 0.73%)</title><rect x="485.5" y="515.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="488.5" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (2 samples, 0.73%)</title><rect x="485.5" y="499.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.5" y="510.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (2 samples, 0.73%)</title><rect x="485.5" y="483.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="488.5" y="494.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (2 samples, 0.73%)</title><rect x="485.5" y="467.0" width="8.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.5" y="478.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundHandlerAdapter.flush (2 samples, 0.73%)</title><rect x="485.5" y="451.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="488.5" y="462.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (2 samples, 0.73%)</title><rect x="485.5" y="435.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="488.5" y="446.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (2 samples, 0.73%)</title><rect x="485.5" y="419.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="488.5" y="430.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (2 samples, 0.73%)</title><rect x="485.5" y="403.0" width="8.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="488.5" y="414.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.flush (2 samples, 0.73%)</title><rect x="485.5" y="387.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="488.5" y="398.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush (2 samples, 0.73%)</title><rect x="485.5" y="371.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="488.5" y="382.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.flush0 (2 samples, 0.73%)</title><rect x="485.5" y="355.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="488.5" y="366.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (2 samples, 0.73%)</title><rect x="485.5" y="339.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.5" y="350.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doWrite (2 samples, 0.73%)</title><rect x="485.5" y="323.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="488.5" y="334.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.nioBuffers (1 samples, 0.37%)</title><rect x="485.5" y="307.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.5" y="318.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (1 samples, 0.37%)</title><rect x="485.5" y="291.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="488.5" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.37%)</title><rect x="489.8" y="307.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.37%)</title><rect x="489.8" y="291.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (1 samples, 0.37%)</title><rect x="489.8" y="275.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="492.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (1 samples, 0.37%)</title><rect x="489.8" y="259.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="492.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.37%)</title><rect x="489.8" y="243.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="492.8" y="254.0"></text>
</g>
<g>
<title>write (1 samples, 0.37%)</title><rect x="489.8" y="227.0" width="4.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="492.8" y="238.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (5 samples, 1.83%)</title><rect x="494.1" y="531.0" width="21.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="497.1" y="542.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (5 samples, 1.83%)</title><rect x="494.1" y="515.0" width="21.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="497.1" y="526.0">i..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/XhakaEncoder.encode (5 samples, 1.83%)</title><rect x="494.1" y="499.0" width="21.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.1" y="510.0">c..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/XhakaEncoder.encode (5 samples, 1.83%)</title><rect x="494.1" y="483.0" width="21.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="497.1" y="494.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1 samples, 0.37%)</title><rect x="494.1" y="467.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.1" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.37%)</title><rect x="494.1" y="451.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="497.1" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.37%)</title><rect x="494.1" y="435.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="497.1" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.37%)</title><rect x="494.1" y="419.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.1" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.37%)</title><rect x="494.1" y="403.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.1" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.37%)</title><rect x="494.1" y="387.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.1" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.37%)</title><rect x="494.1" y="371.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="497.1" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.37%)</title><rect x="494.1" y="355.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="497.1" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.37%)</title><rect x="494.1" y="339.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="497.1" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.37%)</title><rect x="494.1" y="323.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.1" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (1 samples, 0.37%)</title><rect x="494.1" y="307.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="497.1" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.37%)</title><rect x="494.1" y="291.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="497.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.37%)</title><rect x="494.1" y="275.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="497.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.37%)</title><rect x="494.1" y="259.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.1" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (1 samples, 0.37%)</title><rect x="494.1" y="243.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.1" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (3 samples, 1.10%)</title><rect x="498.4" y="467.0" width="13.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="501.4" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (3 samples, 1.10%)</title><rect x="498.4" y="451.0" width="13.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.4" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (3 samples, 1.10%)</title><rect x="498.4" y="435.0" width="13.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.4" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (3 samples, 1.10%)</title><rect x="498.4" y="419.0" width="13.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.4" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (3 samples, 1.10%)</title><rect x="498.4" y="403.0" width="13.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="501.4" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (3 samples, 1.10%)</title><rect x="498.4" y="387.0" width="13.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.4" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (3 samples, 1.10%)</title><rect x="498.4" y="371.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.4" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (3 samples, 1.10%)</title><rect x="498.4" y="355.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.4" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (3 samples, 1.10%)</title><rect x="498.4" y="339.0" width="13.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="501.4" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.37%)</title><rect x="498.4" y="323.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="501.4" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.73%)</title><rect x="502.7" y="323.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="505.7" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (2 samples, 0.73%)</title><rect x="502.7" y="307.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.7" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (2 samples, 0.73%)</title><rect x="502.7" y="291.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="505.7" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (2 samples, 0.73%)</title><rect x="502.7" y="275.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="505.7" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (1 samples, 0.37%)</title><rect x="507.1" y="259.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="510.1" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.37%)</title><rect x="507.1" y="243.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.1" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.37%)</title><rect x="507.1" y="227.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="510.1" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.37%)</title><rect x="507.1" y="211.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="510.1" y="222.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.37%)</title><rect x="507.1" y="195.0" width="4.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="510.1" y="206.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*) (1 samples, 0.37%)</title><rect x="507.1" y="179.0" width="4.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="510.1" y="190.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (1 samples, 0.37%)</title><rect x="511.4" y="467.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="514.4" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (1 samples, 0.37%)</title><rect x="511.4" y="451.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.4" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.setBytes (1 samples, 0.37%)</title><rect x="511.4" y="435.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="514.4" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/UnsafeByteBufUtil.setBytes (1 samples, 0.37%)</title><rect x="511.4" y="419.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="514.4" y="430.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.copyMemory (1 samples, 0.37%)</title><rect x="511.4" y="403.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="514.4" y="414.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.copyMemory (1 samples, 0.37%)</title><rect x="511.4" y="387.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="514.4" y="398.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.copyMemory (1 samples, 0.37%)</title><rect x="511.4" y="371.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="514.4" y="382.0"></text>
</g>
<g>
<title>Unsafe_CopyMemory2 (1 samples, 0.37%)</title><rect x="511.4" y="355.0" width="4.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="514.4" y="366.0"></text>
</g>
<g>
<title>io/netty/handler/codec/EncoderException.&lt;init&gt; (1 samples, 0.37%)</title><rect x="515.7" y="659.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.7" y="670.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecException.&lt;init&gt; (1 samples, 0.37%)</title><rect x="515.7" y="643.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.7" y="654.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.37%)</title><rect x="515.7" y="627.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.37%)</title><rect x="515.7" y="611.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.7" y="622.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.37%)</title><rect x="515.7" y="595.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.7" y="606.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.37%)</title><rect x="515.7" y="579.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.7" y="590.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.37%)</title><rect x="515.7" y="563.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="518.7" y="574.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.37%)</title><rect x="515.7" y="547.0" width="4.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="518.7" y="558.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.37%)</title><rect x="515.7" y="531.0" width="4.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="518.7" y="542.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (1 samples, 0.37%)</title><rect x="515.7" y="515.0" width="4.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="518.7" y="526.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (1 samples, 0.37%)</title><rect x="515.7" y="499.0" width="4.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="518.7" y="510.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.37%)</title><rect x="515.7" y="483.0" width="4.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="518.7" y="494.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.37%)</title><rect x="515.7" y="467.0" width="4.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="518.7" y="478.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (1 samples, 0.37%)</title><rect x="520.0" y="659.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="523.0" y="670.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpRequest.release (1 samples, 0.37%)</title><rect x="520.0" y="643.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.0" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (1 samples, 0.37%)</title><rect x="520.0" y="627.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="523.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.get (1 samples, 0.37%)</title><rect x="524.4" y="883.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 1.83%)</title><rect x="528.7" y="931.0" width="21.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="531.7" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 1.83%)</title><rect x="528.7" y="915.0" width="21.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="531.7" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.run (2 samples, 0.73%)</title><rect x="528.7" y="899.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="531.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201 (2 samples, 0.73%)</title><rect x="528.7" y="883.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="531.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 0.73%)</title><rect x="528.7" y="867.0" width="8.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="531.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run$$$capture (2 samples, 0.73%)</title><rect x="528.7" y="851.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 0.73%)</title><rect x="528.7" y="835.0" width="8.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.7" y="846.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/ProcessImpl$CommandProcessTask.run (2 samples, 0.73%)</title><rect x="528.7" y="819.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="531.7" y="830.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl$ProcessHandler.handle (2 samples, 0.73%)</title><rect x="528.7" y="803.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.7" y="814.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl$ProcessHandler.handle (2 samples, 0.73%)</title><rect x="528.7" y="787.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="531.7" y="798.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.access$100 (2 samples, 0.73%)</title><rect x="528.7" y="771.0" width="8.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="531.7" y="782.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.process (2 samples, 0.73%)</title><rect x="528.7" y="755.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="531.7" y="766.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/command/monitor200/ProfilerCommand.process (2 samples, 0.73%)</title><rect x="528.7" y="739.0" width="8.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.7" y="750.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/command/monitor200/ProfilerCommand.execute (1 samples, 0.37%)</title><rect x="528.7" y="723.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="531.7" y="734.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="528.7" y="707.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="531.7" y="718.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle, int, Bytecodes::Code, Thread*) (1 samples, 0.37%)</title><rect x="528.7" y="691.0" width="4.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="531.7" y="702.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokevirtual(CallInfo&amp;, Handle, constantPoolHandle, int, Thread*) (1 samples, 0.37%)</title><rect x="528.7" y="675.0" width="4.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="531.7" y="686.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.37%)</title><rect x="528.7" y="659.0" width="4.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="531.7" y="670.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/command/monitor200/ProfilerCommand.processStop (1 samples, 0.37%)</title><rect x="533.0" y="723.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="536.0" y="734.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/command/monitor200/ProfilerCommand.execute (1 samples, 0.37%)</title><rect x="533.0" y="707.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="536.0" y="718.0"></text>
</g>
<g>
<title>one/profiler/AsyncProfiler.execute (1 samples, 0.37%)</title><rect x="533.0" y="691.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="536.0" y="702.0"></text>
</g>
<g>
<title>one/profiler/AsyncProfiler.execute0 (1 samples, 0.37%)</title><rect x="533.0" y="675.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="536.0" y="686.0"></text>
</g>
<g>
<title>Java_one_profiler_AsyncProfiler_execute0 (1 samples, 0.37%)</title><rect x="533.0" y="659.0" width="4.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="536.0" y="670.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.37%)</title><rect x="533.0" y="643.0" width="4.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="536.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 1.10%)</title><rect x="537.3" y="899.0" width="13.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="540.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (3 samples, 1.10%)</title><rect x="537.3" y="883.0" width="13.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="540.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (3 samples, 1.10%)</title><rect x="537.3" y="867.0" width="13.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="540.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.finishPoll (1 samples, 0.37%)</title><rect x="541.6" y="851.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="544.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.siftDown (1 samples, 0.37%)</title><rect x="541.6" y="835.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="544.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (1 samples, 0.37%)</title><rect x="546.0" y="851.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="549.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (1 samples, 0.37%)</title><rect x="546.0" y="835.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="549.0" y="846.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.37%)</title><rect x="546.0" y="819.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="549.0" y="830.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.37%)</title><rect x="546.0" y="803.0" width="4.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="549.0" y="814.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.37%)</title><rect x="546.0" y="787.0" width="4.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="549.0" y="798.0"></text>
</g>
<g>
<title>svcudp_op (1 samples, 0.37%)</title><rect x="546.0" y="771.0" width="4.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="549.0" y="782.0"></text>
</g>
<g>
<title>thread_start (148 samples, 54.21%)</title><rect x="550.3" y="947.0" width="639.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="553.3" y="958.0">thread_start</text>
</g>
<g>
<title>_pthread_start (148 samples, 54.21%)</title><rect x="550.3" y="931.0" width="639.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="553.3" y="942.0">_pthread_start</text>
</g>
<g>
<title>_pthread_body (148 samples, 54.21%)</title><rect x="550.3" y="915.0" width="639.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="553.3" y="926.0">_pthread_body</text>
</g>
<g>
<title>java_start(Thread*) (148 samples, 54.21%)</title><rect x="550.3" y="899.0" width="639.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="553.3" y="910.0">java_start(Thread*)</text>
</g>
<g>
<title>GCTaskThread::run() (124 samples, 45.42%)</title><rect x="550.3" y="883.0" width="536.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="553.3" y="894.0">GCTaskThread::run()</text>
</g>
<g>
<title>MarkFromRootsTask::do_it(GCTaskManager*, unsigned int) (5 samples, 1.83%)</title><rect x="550.3" y="867.0" width="21.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="553.3" y="878.0">M..</text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (5 samples, 1.83%)</title><rect x="550.3" y="851.0" width="21.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="553.3" y="862.0">P..</text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (2 samples, 0.73%)</title><rect x="550.3" y="835.0" width="8.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="553.3" y="846.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (2 samples, 0.73%)</title><rect x="550.3" y="819.0" width="8.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="553.3" y="830.0"></text>
</g>
<g>
<title>ParallelCompactData::add_obj(HeapWord*, unsigned long) (2 samples, 0.73%)</title><rect x="550.3" y="803.0" width="8.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="553.3" y="814.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (3 samples, 1.10%)</title><rect x="558.9" y="835.0" width="13.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="561.9" y="846.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (3 samples, 1.10%)</title><rect x="558.9" y="819.0" width="13.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="561.9" y="830.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (3 samples, 1.10%)</title><rect x="558.9" y="803.0" width="13.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="561.9" y="814.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (1 samples, 0.37%)</title><rect x="558.9" y="787.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="561.9" y="798.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.73%)</title><rect x="563.3" y="787.0" width="8.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="566.3" y="798.0"></text>
</g>
<g>
<title>OldToYoungRootsTask::do_it(GCTaskManager*, unsigned int) (18 samples, 6.59%)</title><rect x="571.9" y="867.0" width="77.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="574.9" y="878.0">OldToYoun..</text>
</g>
<g>
<title>CardTableExtension::scavenge_contents_parallel(ObjectStartArray*, MutableSpace*, HeapWord*, PSPromotionManager*, unsigned int, unsigned int) (18 samples, 6.59%)</title><rect x="571.9" y="851.0" width="77.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="574.9" y="862.0">CardTable..</text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (2 samples, 0.73%)</title><rect x="571.9" y="835.0" width="8.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="574.9" y="846.0"></text>
</g>
<g>
<title>ObjectStartArray::object_start(HeapWord*) const (2 samples, 0.73%)</title><rect x="580.5" y="835.0" width="8.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="583.5" y="846.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.73%)</title><rect x="580.5" y="819.0" width="8.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="583.5" y="830.0"></text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (14 samples, 5.13%)</title><rect x="589.2" y="835.0" width="60.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="592.2" y="846.0">PSProm..</text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (13 samples, 4.76%)</title><rect x="589.2" y="819.0" width="56.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="592.2" y="830.0">PSProm..</text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (12 samples, 4.40%)</title><rect x="593.5" y="803.0" width="51.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="596.5" y="814.0">oopDe..</text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.37%)</title><rect x="606.5" y="787.0" width="4.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="609.5" y="798.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.37%)</title><rect x="606.5" y="771.0" width="4.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="609.5" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (6 samples, 2.20%)</title><rect x="610.8" y="787.0" width="25.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="613.8" y="798.0">I..</text>
</g>
<g>
<title>InstanceKlass::vtable_length() const (1 samples, 0.37%)</title><rect x="636.7" y="787.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="639.7" y="798.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.37%)</title><rect x="641.1" y="787.0" width="4.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="644.1" y="798.0"></text>
</g>
<g>
<title>void PSPromotionManager::process_array_chunk_work&lt;unsigned int&gt;(oopDesc*, int, int) (1 samples, 0.37%)</title><rect x="645.4" y="819.0" width="4.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="648.4" y="830.0"></text>
</g>
<g>
<title>ScavengeRootsTask::do_it(GCTaskManager*, unsigned int) (2 samples, 0.73%)</title><rect x="649.7" y="867.0" width="8.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="652.7" y="878.0"></text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (2 samples, 0.73%)</title><rect x="649.7" y="851.0" width="8.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="652.7" y="862.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (2 samples, 0.73%)</title><rect x="649.7" y="835.0" width="8.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="652.7" y="846.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (2 samples, 0.73%)</title><rect x="649.7" y="819.0" width="8.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="652.7" y="830.0"></text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.37%)</title><rect x="649.7" y="803.0" width="4.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="652.7" y="814.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.37%)</title><rect x="649.7" y="787.0" width="4.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="652.7" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (1 samples, 0.37%)</title><rect x="654.0" y="803.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="657.0" y="814.0"></text>
</g>
<g>
<title>StealMarkingTask::do_it(GCTaskManager*, unsigned int) (9 samples, 3.30%)</title><rect x="658.4" y="867.0" width="38.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="661.4" y="878.0">Ste..</text>
</g>
<g>
<title>GenericTaskQueueSet&lt;GenericTaskQueue&lt;oopDesc*, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal(unsigned int, int*, oopDesc*&amp;) (1 samples, 0.37%)</title><rect x="658.4" y="851.0" width="4.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="661.4" y="862.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;GenericTaskQueue&lt;oopDesc*, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal_best_of_2(unsigned int, int*, oopDesc*&amp;) (1 samples, 0.37%)</title><rect x="658.4" y="835.0" width="4.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="661.4" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.37%)</title><rect x="662.7" y="851.0" width="4.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="665.7" y="862.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.37%)</title><rect x="662.7" y="835.0" width="4.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="665.7" y="846.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.37%)</title><rect x="662.7" y="819.0" width="4.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="665.7" y="830.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (7 samples, 2.56%)</title><rect x="667.0" y="851.0" width="30.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="670.0" y="862.0">Pa..</text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (4 samples, 1.47%)</title><rect x="671.3" y="835.0" width="17.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="674.3" y="846.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (4 samples, 1.47%)</title><rect x="671.3" y="819.0" width="17.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="674.3" y="830.0"></text>
</g>
<g>
<title>oopDesc::size() (4 samples, 1.47%)</title><rect x="671.3" y="803.0" width="17.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="674.3" y="814.0"></text>
</g>
<g>
<title>void specialized_oop_follow_contents&lt;unsigned int&gt;(InstanceRefKlass*, ParCompactionManager*, oopDesc*) (2 samples, 0.73%)</title><rect x="688.6" y="835.0" width="8.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="691.6" y="846.0"></text>
</g>
<g>
<title>ReferenceProcessor::discover_reference(oopDesc*, ReferenceType) (2 samples, 0.73%)</title><rect x="688.6" y="819.0" width="8.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="691.6" y="830.0"></text>
</g>
<g>
<title>oopDesc::atomic_compare_exchange_oop(oopDesc*, HeapWord volatile*, oopDesc*, bool) (2 samples, 0.73%)</title><rect x="688.6" y="803.0" width="8.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="691.6" y="814.0"></text>
</g>
<g>
<title>Atomic::cmpxchg(unsigned int, unsigned int volatile*, unsigned int) (2 samples, 0.73%)</title><rect x="688.6" y="787.0" width="8.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="691.6" y="798.0"></text>
</g>
<g>
<title>StealRegionCompactionTask::do_it(GCTaskManager*, unsigned int) (69 samples, 25.27%)</title><rect x="697.3" y="867.0" width="298.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="700.3" y="878.0">StealRegionCompactionTask::do_it(GCTaskM..</text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (18 samples, 6.59%)</title><rect x="697.3" y="851.0" width="77.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="700.3" y="862.0">PSParalle..</text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (1 samples, 0.37%)</title><rect x="697.3" y="835.0" width="4.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="700.3" y="846.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (17 samples, 6.23%)</title><rect x="701.6" y="835.0" width="73.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="704.6" y="846.0">ParMarkB..</text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (16 samples, 5.86%)</title><rect x="705.9" y="819.0" width="69.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="708.9" y="830.0">MoveAnd..</text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (5 samples, 1.83%)</title><rect x="705.9" y="803.0" width="21.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="708.9" y="814.0">I..</text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (4 samples, 1.47%)</title><rect x="710.2" y="787.0" width="17.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="713.2" y="798.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (4 samples, 1.47%)</title><rect x="710.2" y="771.0" width="17.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="713.2" y="782.0"></text>
</g>
<g>
<title>InstanceRefKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.37%)</title><rect x="727.5" y="803.0" width="4.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="730.5" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.37%)</title><rect x="727.5" y="787.0" width="4.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="730.5" y="798.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.37%)</title><rect x="727.5" y="771.0" width="4.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="730.5" y="782.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.37%)</title><rect x="727.5" y="755.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="730.5" y="766.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (8 samples, 2.93%)</title><rect x="731.8" y="803.0" width="34.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="734.8" y="814.0">Ob..</text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (8 samples, 2.93%)</title><rect x="731.8" y="787.0" width="34.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="734.8" y="798.0">Pa..</text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (8 samples, 2.93%)</title><rect x="731.8" y="771.0" width="34.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="734.8" y="782.0">Pa..</text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (2 samples, 0.73%)</title><rect x="766.4" y="803.0" width="8.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="769.4" y="814.0"></text>
</g>
<g>
<title>ParCompactionManager::drain_region_stacks() (35 samples, 12.82%)</title><rect x="775.1" y="851.0" width="151.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="778.1" y="862.0">ParCompactionManage..</text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (35 samples, 12.82%)</title><rect x="775.1" y="835.0" width="151.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="778.1" y="846.0">PSParallelCompact::..</text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (34 samples, 12.45%)</title><rect x="775.1" y="819.0" width="146.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="778.1" y="830.0">ParMarkBitMap::ite..</text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.37%)</title><rect x="788.0" y="803.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="791.0" y="814.0"></text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (30 samples, 10.99%)</title><rect x="792.3" y="803.0" width="129.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="795.3" y="814.0">MoveAndUpdateClo..</text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (13 samples, 4.76%)</title><rect x="792.3" y="787.0" width="56.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="795.3" y="798.0">Instan..</text>
</g>
<g>
<title>InstanceKlass::vtable_length() const (1 samples, 0.37%)</title><rect x="796.7" y="771.0" width="4.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="799.7" y="782.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.37%)</title><rect x="801.0" y="771.0" width="4.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="804.0" y="782.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (10 samples, 3.66%)</title><rect x="805.3" y="771.0" width="43.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="808.3" y="782.0">Para..</text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (8 samples, 2.93%)</title><rect x="814.0" y="755.0" width="34.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="817.0" y="766.0">Pa..</text>
</g>
<g>
<title>InstanceMirrorKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.37%)</title><rect x="848.5" y="787.0" width="4.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="851.5" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.37%)</title><rect x="848.5" y="771.0" width="4.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="851.5" y="782.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.37%)</title><rect x="848.5" y="755.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="851.5" y="766.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.37%)</title><rect x="848.5" y="739.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="851.5" y="750.0"></text>
</g>
<g>
<title>InstanceRefKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (2 samples, 0.73%)</title><rect x="852.9" y="787.0" width="8.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="855.9" y="798.0"></text>
</g>
<g>
<title>void specialized_oop_update_pointers&lt;unsigned int&gt;(InstanceRefKlass*, ParCompactionManager*, oopDesc*) (2 samples, 0.73%)</title><rect x="852.9" y="771.0" width="8.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="855.9" y="782.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (2 samples, 0.73%)</title><rect x="852.9" y="755.0" width="8.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="855.9" y="766.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (2 samples, 0.73%)</title><rect x="852.9" y="739.0" width="8.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="855.9" y="750.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (8 samples, 2.93%)</title><rect x="861.5" y="787.0" width="34.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="864.5" y="798.0">Ob..</text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (6 samples, 2.20%)</title><rect x="870.1" y="771.0" width="26.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="873.1" y="782.0">P..</text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (6 samples, 2.20%)</title><rect x="870.1" y="755.0" width="26.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="873.1" y="766.0">P..</text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (6 samples, 2.20%)</title><rect x="896.1" y="787.0" width="25.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="899.1" y="798.0">_..</text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.37%)</title><rect x="922.0" y="819.0" width="4.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="925.0" y="830.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (12 samples, 4.40%)</title><rect x="926.3" y="851.0" width="51.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="929.3" y="862.0">Paral..</text>
</g>
<g>
<title>xdrmem_ops_aligned (12 samples, 4.40%)</title><rect x="926.3" y="835.0" width="51.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="929.3" y="846.0">xdrme..</text>
</g>
<g>
<title>SpinPause (4 samples, 1.47%)</title><rect x="978.2" y="851.0" width="17.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="981.2" y="862.0"></text>
</g>
<g>
<title>StealTask::do_it(GCTaskManager*, unsigned int) (15 samples, 5.49%)</title><rect x="995.5" y="867.0" width="64.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="998.5" y="878.0">StealTa..</text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (13 samples, 4.76%)</title><rect x="995.5" y="851.0" width="56.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="998.5" y="862.0">PSProm..</text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (13 samples, 4.76%)</title><rect x="995.5" y="835.0" width="56.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="998.5" y="846.0">PSProm..</text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (13 samples, 4.76%)</title><rect x="995.5" y="819.0" width="56.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="998.5" y="830.0">oopDes..</text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (5 samples, 1.83%)</title><rect x="1021.4" y="803.0" width="21.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1024.4" y="814.0">C..</text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (5 samples, 1.83%)</title><rect x="1021.4" y="787.0" width="21.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1024.4" y="798.0">_..</text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (1 samples, 0.37%)</title><rect x="1043.0" y="803.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1046.0" y="814.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.37%)</title><rect x="1047.4" y="803.0" width="4.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1050.4" y="814.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (1 samples, 0.37%)</title><rect x="1051.7" y="851.0" width="4.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1054.7" y="862.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (1 samples, 0.37%)</title><rect x="1051.7" y="835.0" width="4.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1054.7" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (1 samples, 0.37%)</title><rect x="1051.7" y="819.0" width="4.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1054.7" y="830.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.37%)</title><rect x="1056.0" y="851.0" width="4.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1059.0" y="862.0"></text>
</g>
<g>
<title>xdrmem_ops_aligned (1 samples, 0.37%)</title><rect x="1056.0" y="835.0" width="4.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1059.0" y="846.0"></text>
</g>
<g>
<title>ThreadRootsMarkingTask::do_it(GCTaskManager*, unsigned int) (6 samples, 2.20%)</title><rect x="1060.3" y="867.0" width="26.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1063.3" y="878.0">T..</text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (2 samples, 0.73%)</title><rect x="1060.3" y="851.0" width="8.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1063.3" y="862.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, CLDClosure*, RegisterMap const*, bool) (2 samples, 0.73%)</title><rect x="1060.3" y="835.0" width="8.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1063.3" y="846.0"></text>
</g>
<g>
<title>ClassLoaderData::classes_do(KlassClosure*) (1 samples, 0.37%)</title><rect x="1060.3" y="819.0" width="4.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1063.3" y="830.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, KlassClosure*, bool) (1 samples, 0.37%)</title><rect x="1064.7" y="819.0" width="4.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1067.7" y="830.0"></text>
</g>
<g>
<title>ClassLoaderData::ChunkedHandleList::oops_do(OopClosure*) (1 samples, 0.37%)</title><rect x="1064.7" y="803.0" width="4.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1067.7" y="814.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;oopDesc*&gt;(ParCompactionManager*, oopDesc**) (1 samples, 0.37%)</title><rect x="1064.7" y="787.0" width="4.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1067.7" y="798.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (1 samples, 0.37%)</title><rect x="1064.7" y="771.0" width="4.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1067.7" y="782.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (4 samples, 1.47%)</title><rect x="1069.0" y="851.0" width="17.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1072.0" y="862.0"></text>
</g>
<g>
<title>InstanceMirrorKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.37%)</title><rect x="1077.6" y="835.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1080.6" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.37%)</title><rect x="1077.6" y="819.0" width="4.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1080.6" y="830.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.37%)</title><rect x="1077.6" y="803.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1080.6" y="814.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.37%)</title><rect x="1077.6" y="787.0" width="4.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1080.6" y="798.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.37%)</title><rect x="1081.9" y="835.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1084.9" y="846.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (1 samples, 0.37%)</title><rect x="1081.9" y="819.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1084.9" y="830.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.37%)</title><rect x="1081.9" y="803.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1084.9" y="814.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.37%)</title><rect x="1081.9" y="787.0" width="4.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1084.9" y="798.0"></text>
</g>
<g>
<title>JavaThread::run() (6 samples, 2.20%)</title><rect x="1086.3" y="883.0" width="25.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1089.3" y="894.0">J..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (6 samples, 2.20%)</title><rect x="1086.3" y="867.0" width="25.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1089.3" y="878.0">J..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (4 samples, 1.47%)</title><rect x="1086.3" y="851.0" width="17.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1089.3" y="862.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (3 samples, 1.10%)</title><rect x="1086.3" y="835.0" width="12.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1089.3" y="846.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (1 samples, 0.37%)</title><rect x="1086.3" y="819.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1089.3" y="830.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (1 samples, 0.37%)</title><rect x="1086.3" y="803.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1089.3" y="814.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.37%)</title><rect x="1086.3" y="787.0" width="4.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1089.3" y="798.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.37%)</title><rect x="1086.3" y="771.0" width="4.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1089.3" y="782.0"></text>
</g>
<g>
<title>Compilation::build_hir() (1 samples, 0.37%)</title><rect x="1086.3" y="755.0" width="4.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1089.3" y="766.0"></text>
</g>
<g>
<title>RangeCheckElimination::eliminate(IR*) (1 samples, 0.37%)</title><rect x="1086.3" y="739.0" width="4.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1089.3" y="750.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.37%)</title><rect x="1086.3" y="723.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1089.3" y="734.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.37%)</title><rect x="1086.3" y="707.0" width="4.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1089.3" y="718.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.37%)</title><rect x="1086.3" y="691.0" width="4.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1089.3" y="702.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.37%)</title><rect x="1086.3" y="675.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1089.3" y="686.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.37%)</title><rect x="1086.3" y="659.0" width="4.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1089.3" y="670.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.37%)</title><rect x="1090.6" y="819.0" width="4.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1093.6" y="830.0"></text>
</g>
<g>
<title>TraceTime::~TraceTime() (1 samples, 0.37%)</title><rect x="1094.9" y="819.0" width="4.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1097.9" y="830.0"></text>
</g>
<g>
<title>CompileQueue::get() (1 samples, 0.37%)</title><rect x="1099.2" y="835.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1102.2" y="846.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.37%)</title><rect x="1099.2" y="819.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1102.2" y="830.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.37%)</title><rect x="1099.2" y="803.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1102.2" y="814.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.37%)</title><rect x="1099.2" y="787.0" width="4.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1102.2" y="798.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.37%)</title><rect x="1099.2" y="771.0" width="4.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1102.2" y="782.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.37%)</title><rect x="1103.6" y="851.0" width="4.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1106.6" y="862.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.37%)</title><rect x="1107.9" y="851.0" width="4.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1110.9" y="862.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.37%)</title><rect x="1107.9" y="835.0" width="4.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1110.9" y="846.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.37%)</title><rect x="1107.9" y="819.0" width="4.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1110.9" y="830.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.37%)</title><rect x="1107.9" y="803.0" width="4.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1110.9" y="814.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.37%)</title><rect x="1107.9" y="787.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1110.9" y="798.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.37%)</title><rect x="1107.9" y="771.0" width="4.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1110.9" y="782.0"></text>
</g>
<g>
<title>VMThread::run() (9 samples, 3.30%)</title><rect x="1112.2" y="883.0" width="38.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1115.2" y="894.0">VMT..</text>
</g>
<g>
<title>VMThread::loop() (9 samples, 3.30%)</title><rect x="1112.2" y="867.0" width="38.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1115.2" y="878.0">VMT..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.37%)</title><rect x="1112.2" y="851.0" width="4.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1115.2" y="862.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.37%)</title><rect x="1112.2" y="835.0" width="4.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1115.2" y="846.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.37%)</title><rect x="1112.2" y="819.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1115.2" y="830.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.37%)</title><rect x="1112.2" y="803.0" width="4.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1115.2" y="814.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.37%)</title><rect x="1116.5" y="851.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1119.5" y="862.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.37%)</title><rect x="1116.5" y="835.0" width="4.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1119.5" y="846.0"></text>
</g>
<g>
<title>Threads::nmethods_do(CodeBlobClosure*) (1 samples, 0.37%)</title><rect x="1116.5" y="819.0" width="4.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1119.5" y="830.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (1 samples, 0.37%)</title><rect x="1116.5" y="803.0" width="4.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1119.5" y="814.0"></text>
</g>
<g>
<title>StackFrameStream::next() (1 samples, 0.37%)</title><rect x="1116.5" y="787.0" width="4.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1119.5" y="798.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.37%)</title><rect x="1116.5" y="771.0" width="4.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1119.5" y="782.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.37%)</title><rect x="1116.5" y="755.0" width="4.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1119.5" y="766.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.37%)</title><rect x="1116.5" y="739.0" width="4.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1119.5" y="750.0"></text>
</g>
<g>
<title>OopMapSet::find_map_at_offset(int) const (1 samples, 0.37%)</title><rect x="1116.5" y="723.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1119.5" y="734.0"></text>
</g>
<g>
<title>SafepointSynchronize::end() (1 samples, 0.37%)</title><rect x="1120.8" y="851.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1123.8" y="862.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.37%)</title><rect x="1120.8" y="835.0" width="4.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1123.8" y="846.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (1 samples, 0.37%)</title><rect x="1120.8" y="819.0" width="4.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1123.8" y="830.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (6 samples, 2.20%)</title><rect x="1125.2" y="851.0" width="25.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1128.2" y="862.0">V..</text>
</g>
<g>
<title>VM_Operation::evaluate() (6 samples, 2.20%)</title><rect x="1125.2" y="835.0" width="25.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1128.2" y="846.0">V..</text>
</g>
<g>
<title>VM_ParallelGCFailedAllocation::doit() (6 samples, 2.20%)</title><rect x="1125.2" y="819.0" width="25.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1128.2" y="830.0">V..</text>
</g>
<g>
<title>ParallelScavengeHeap::failed_mem_allocate(unsigned long) (6 samples, 2.20%)</title><rect x="1125.2" y="803.0" width="25.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1128.2" y="814.0">P..</text>
</g>
<g>
<title>PSScavenge::invoke() (6 samples, 2.20%)</title><rect x="1125.2" y="787.0" width="25.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1128.2" y="798.0">P..</text>
</g>
<g>
<title>PSParallelCompact::invoke_no_policy(bool) (6 samples, 2.20%)</title><rect x="1125.2" y="771.0" width="25.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1128.2" y="782.0">P..</text>
</g>
<g>
<title>PSParallelCompact::adjust_roots() (4 samples, 1.47%)</title><rect x="1125.2" y="755.0" width="17.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1128.2" y="766.0"></text>
</g>
<g>
<title>CodeCache::blobs_do(CodeBlobClosure*) (1 samples, 0.37%)</title><rect x="1125.2" y="739.0" width="4.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1128.2" y="750.0"></text>
</g>
<g>
<title>CodeBlobToOopClosure::do_nmethod(nmethod*) (1 samples, 0.37%)</title><rect x="1125.2" y="723.0" width="4.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1128.2" y="734.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.37%)</title><rect x="1125.2" y="707.0" width="4.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1128.2" y="718.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 0.37%)</title><rect x="1125.2" y="691.0" width="4.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1128.2" y="702.0"></text>
</g>
<g>
<title>JNIHandleBlock::weak_oops_do(BoolObjectClosure*, OopClosure*) (1 samples, 0.37%)</title><rect x="1129.5" y="739.0" width="4.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1132.5" y="750.0"></text>
</g>
<g>
<title>PSParallelCompact::AdjustPointerClosure::do_oop(oopDesc**) (1 samples, 0.37%)</title><rect x="1129.5" y="723.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1132.5" y="734.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.37%)</title><rect x="1129.5" y="707.0" width="4.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1132.5" y="718.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.37%)</title><rect x="1129.5" y="691.0" width="4.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1132.5" y="702.0"></text>
</g>
<g>
<title>StringTable::buckets_oops_do(OopClosure*, int, int) (1 samples, 0.37%)</title><rect x="1133.8" y="739.0" width="4.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1136.8" y="750.0"></text>
</g>
<g>
<title>PSParallelCompact::AdjustPointerClosure::do_oop(oopDesc**) (1 samples, 0.37%)</title><rect x="1133.8" y="723.0" width="4.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1136.8" y="734.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.37%)</title><rect x="1133.8" y="707.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1136.8" y="718.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.37%)</title><rect x="1133.8" y="691.0" width="4.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1136.8" y="702.0"></text>
</g>
<g>
<title>Threads::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (1 samples, 0.37%)</title><rect x="1138.1" y="739.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1141.1" y="750.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (1 samples, 0.37%)</title><rect x="1138.1" y="723.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1141.1" y="734.0"></text>
</g>
<g>
<title>frame::oops_code_blob_do(OopClosure*, CodeBlobClosure*, RegisterMap const*) (1 samples, 0.37%)</title><rect x="1138.1" y="707.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1141.1" y="718.0"></text>
</g>
<g>
<title>OopMapSet::all_do(frame const*, RegisterMap const*, OopClosure*, void (*)(oopDesc**, oopDesc**), OopClosure*) (1 samples, 0.37%)</title><rect x="1138.1" y="691.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1141.1" y="702.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (1 samples, 0.37%)</title><rect x="1138.1" y="675.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.1" y="686.0"></text>
</g>
<g>
<title>OopMapValue::read_from(CompressedReadStream*) (1 samples, 0.37%)</title><rect x="1138.1" y="659.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1141.1" y="670.0"></text>
</g>
<g>
<title>CompressedReadStream::read_int_mb(int) (1 samples, 0.37%)</title><rect x="1138.1" y="643.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1141.1" y="654.0"></text>
</g>
<g>
<title>PSParallelCompact::marking_phase(ParCompactionManager*, bool, ParallelOldTracer*) (2 samples, 0.73%)</title><rect x="1142.5" y="755.0" width="8.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1145.5" y="766.0"></text>
</g>
<g>
<title>Klass::clean_weak_klass_links(BoolObjectClosure*, bool) (1 samples, 0.37%)</title><rect x="1142.5" y="739.0" width="4.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1145.5" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::clean_weak_instanceklass_links(BoolObjectClosure*) (1 samples, 0.37%)</title><rect x="1142.5" y="723.0" width="4.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1145.5" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::clean_method_data(BoolObjectClosure*) (1 samples, 0.37%)</title><rect x="1142.5" y="707.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1145.5" y="718.0"></text>
</g>
<g>
<title>MethodData::clean_method_data(BoolObjectClosure*) (1 samples, 0.37%)</title><rect x="1142.5" y="691.0" width="4.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1145.5" y="702.0"></text>
</g>
<g>
<title>SymbolTable::unlink(int*, int*) (1 samples, 0.37%)</title><rect x="1146.8" y="739.0" width="4.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1149.8" y="750.0"></text>
</g>
<g>
<title>SymbolTable::buckets_unlink(int, int, BasicHashtable&lt;(MemoryType)9&gt;::BucketUnlinkContext*, unsigned long*) (1 samples, 0.37%)</title><rect x="1146.8" y="723.0" width="4.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1149.8" y="734.0"></text>
</g>
<g>
<title>WatcherThread::run() (9 samples, 3.30%)</title><rect x="1151.1" y="883.0" width="38.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1154.1" y="894.0">Wat..</text>
</g>
<g>
<title>WatcherThread::sleep() const (9 samples, 3.30%)</title><rect x="1151.1" y="867.0" width="38.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1154.1" y="878.0">Wat..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (9 samples, 3.30%)</title><rect x="1151.1" y="851.0" width="38.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1154.1" y="862.0">Mon..</text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (9 samples, 3.30%)</title><rect x="1151.1" y="835.0" width="38.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1154.1" y="846.0">Mon..</text>
</g>
<g>
<title>os::PlatformEvent::park(long) (9 samples, 3.30%)</title><rect x="1151.1" y="819.0" width="38.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1154.1" y="830.0">os:..</text>
</g>
<g>
<title>__psynch_cvwait (9 samples, 3.30%)</title><rect x="1151.1" y="803.0" width="38.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1154.1" y="814.0">__p..</text>
</g>
</g>
</svg>
