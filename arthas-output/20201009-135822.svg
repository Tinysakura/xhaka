<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="917"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="917"> </text>
<g id="frames">
<g>
<title>all (123 samples, 100.00%)</title><rect x="10.0" y="883.0" width="1180.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="13.0" y="894.0">all</text>
</g>
<g>
<title>[deoptimization] (2 samples, 1.63%)</title><rect x="10.0" y="867.0" width="19.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info(JavaThread*) (2 samples, 1.63%)</title><rect x="10.0" y="851.0" width="19.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info_helper(JavaThread*) (2 samples, 1.63%)</title><rect x="10.0" y="835.0" width="19.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>CHeapObj&lt;(MemoryType)6&gt;::operator new(unsigned long) (1 samples, 0.81%)</title><rect x="10.0" y="819.0" width="9.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>CHeapObj&lt;(MemoryType)6&gt;::operator new(unsigned long, NativeCallStack const&amp;) (1 samples, 0.81%)</title><rect x="10.0" y="803.0" width="9.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.81%)</title><rect x="10.0" y="787.0" width="9.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.81%)</title><rect x="10.0" y="771.0" width="9.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>malloc_zone_malloc (1 samples, 0.81%)</title><rect x="10.0" y="755.0" width="9.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (1 samples, 0.81%)</title><rect x="10.0" y="739.0" width="9.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>tiny_malloc_should_clear (1 samples, 0.81%)</title><rect x="10.0" y="723.0" width="9.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>tiny_malloc_from_free_list (1 samples, 0.81%)</title><rect x="10.0" y="707.0" width="9.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>Deoptimization::create_vframeArray(JavaThread*, frame, RegisterMap*, GrowableArray&lt;compiledVFrame*&gt;*, bool) (1 samples, 0.81%)</title><rect x="19.6" y="819.0" width="9.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="22.6" y="830.0"></text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (1 samples, 0.81%)</title><rect x="19.6" y="803.0" width="9.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="22.6" y="814.0"></text>
</g>
<g>
<title>Monitor::IUnlock(bool) (1 samples, 0.81%)</title><rect x="19.6" y="787.0" width="9.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="22.6" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.run (60 samples, 48.78%)</title><rect x="29.2" y="867.0" width="575.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="32.2" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultThreadFactory$DefaultRunnableDecorator.run (58 samples, 47.15%)</title><rect x="29.2" y="851.0" width="556.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.2" y="862.0">io/netty/util/concurrent/DefaultThreadFactory$DefaultRunnableDecorator.run</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor$5.run (58 samples, 47.15%)</title><rect x="29.2" y="835.0" width="556.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.2" y="846.0">io/netty/util/concurrent/SingleThreadEventExecutor$5.run</text>
</g>
<g>
<title>io/netty/channel/DefaultEventLoop.run (18 samples, 14.63%)</title><rect x="29.2" y="819.0" width="172.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.2" y="830.0">io/netty/channel/Defau..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$7.run (16 samples, 13.01%)</title><rect x="29.2" y="803.0" width="153.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.2" y="814.0">io/netty/channel/Ab..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$600 (16 samples, 13.01%)</title><rect x="29.2" y="787.0" width="153.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.2" y="798.0">io/netty/channel/Ab..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (16 samples, 13.01%)</title><rect x="29.2" y="771.0" width="153.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.2" y="782.0">io/netty/channel/Ab..</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (16 samples, 13.01%)</title><rect x="29.2" y="755.0" width="153.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="32.2" y="766.0">io/netty/channel/Si..</text>
</g>
<g>
<title>com/tinysakura/xhaka/server/handler/XhakaHttpServletHandler.channelRead0 (16 samples, 13.01%)</title><rect x="29.2" y="739.0" width="153.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="32.2" y="750.0">com/tinysakura/xhak..</text>
</g>
<g>
<title>com/tinysakura/xhaka/server/handler/XhakaHttpServletHandler.channelRead0 (16 samples, 13.01%)</title><rect x="29.2" y="723.0" width="153.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.2" y="734.0">com/tinysakura/xhak..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/filter/FilterChainImpl.doFilter (14 samples, 11.38%)</title><rect x="29.2" y="707.0" width="134.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.2" y="718.0">com/tinysakura/xh..</text>
</g>
<g>
<title>com/tinysakura/xhaka/filter/TestFilter.doFilter (14 samples, 11.38%)</title><rect x="29.2" y="691.0" width="134.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.2" y="702.0">com/tinysakura/xh..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/filter/FilterChainImpl.doFilter (14 samples, 11.38%)</title><rect x="29.2" y="675.0" width="134.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.2" y="686.0">com/tinysakura/xh..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/filter/XhakaServlet.service (14 samples, 11.38%)</title><rect x="29.2" y="659.0" width="134.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="32.2" y="670.0">com/tinysakura/xh..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (2 samples, 1.63%)</title><rect x="29.2" y="643.0" width="19.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.2" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (2 samples, 1.63%)</title><rect x="29.2" y="627.0" width="19.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="32.2" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (2 samples, 1.63%)</title><rect x="29.2" y="611.0" width="19.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.2" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (2 samples, 1.63%)</title><rect x="29.2" y="595.0" width="19.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.2" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (2 samples, 1.63%)</title><rect x="29.2" y="579.0" width="19.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.2" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (2 samples, 1.63%)</title><rect x="29.2" y="563.0" width="19.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.2" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (2 samples, 1.63%)</title><rect x="29.2" y="547.0" width="19.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.2" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (2 samples, 1.63%)</title><rect x="29.2" y="531.0" width="19.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="32.2" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (2 samples, 1.63%)</title><rect x="29.2" y="515.0" width="19.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="32.2" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.81%)</title><rect x="29.2" y="499.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.2" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.81%)</title><rect x="29.2" y="483.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.2" y="494.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.81%)</title><rect x="29.2" y="467.0" width="9.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="32.2" y="478.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.81%)</title><rect x="29.2" y="451.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.2" y="462.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.81%)</title><rect x="29.2" y="435.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="32.2" y="446.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.81%)</title><rect x="29.2" y="419.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="32.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.81%)</title><rect x="29.2" y="403.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.2" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.81%)</title><rect x="29.2" y="387.0" width="9.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.2" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.81%)</title><rect x="38.8" y="499.0" width="9.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.81%)</title><rect x="38.8" y="483.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (1 samples, 0.81%)</title><rect x="38.8" y="467.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.81%)</title><rect x="38.8" y="451.0" width="9.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.81%)</title><rect x="38.8" y="435.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.81%)</title><rect x="38.8" y="419.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="41.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.81%)</title><rect x="38.8" y="403.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.8" y="414.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.81%)</title><rect x="38.8" y="387.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.8" y="398.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.81%)</title><rect x="38.8" y="371.0" width="9.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="41.8" y="382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.81%)</title><rect x="38.8" y="355.0" width="9.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="41.8" y="366.0"></text>
</g>
<g>
<title>_pthread_cond_wait (1 samples, 0.81%)</title><rect x="38.8" y="339.0" width="9.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="41.8" y="350.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.81%)</title><rect x="38.8" y="323.0" width="9.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="41.8" y="334.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.81%)</title><rect x="38.8" y="307.0" width="9.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="41.8" y="318.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.get (10 samples, 8.13%)</title><rect x="48.4" y="643.0" width="95.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="51.4" y="654.0">com/tinysak..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (2 samples, 1.63%)</title><rect x="48.4" y="627.0" width="19.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="51.4" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (2 samples, 1.63%)</title><rect x="48.4" y="611.0" width="19.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="51.4" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (2 samples, 1.63%)</title><rect x="48.4" y="595.0" width="19.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.4" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (2 samples, 1.63%)</title><rect x="48.4" y="579.0" width="19.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.4" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (2 samples, 1.63%)</title><rect x="48.4" y="563.0" width="19.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="51.4" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (2 samples, 1.63%)</title><rect x="48.4" y="547.0" width="19.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.4" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (2 samples, 1.63%)</title><rect x="48.4" y="531.0" width="19.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="51.4" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.81%)</title><rect x="48.4" y="515.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.4" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.81%)</title><rect x="48.4" y="499.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.4" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.81%)</title><rect x="48.4" y="483.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.81%)</title><rect x="48.4" y="467.0" width="9.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (1 samples, 0.81%)</title><rect x="48.4" y="451.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.81%)</title><rect x="48.4" y="435.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="51.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.81%)</title><rect x="48.4" y="419.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="51.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.81%)</title><rect x="48.4" y="403.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="51.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.81%)</title><rect x="48.4" y="387.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="51.4" y="398.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.81%)</title><rect x="48.4" y="371.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.4" y="382.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.81%)</title><rect x="48.4" y="355.0" width="9.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="51.4" y="366.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.81%)</title><rect x="48.4" y="339.0" width="9.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="51.4" y="350.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.81%)</title><rect x="48.4" y="323.0" width="9.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="51.4" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.81%)</title><rect x="58.0" y="515.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.0" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.81%)</title><rect x="58.0" y="499.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.0" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.81%)</title><rect x="58.0" y="483.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="61.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 6.50%)</title><rect x="67.6" y="627.0" width="76.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.6" y="638.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (8 samples, 6.50%)</title><rect x="67.6" y="611.0" width="76.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="70.6" y="622.0">java/uti..</text>
</g>
<g>
<title>sun/misc/Unsafe.park (8 samples, 6.50%)</title><rect x="67.6" y="595.0" width="76.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.6" y="606.0">sun/misc..</text>
</g>
<g>
<title>Unsafe_Park (8 samples, 6.50%)</title><rect x="67.6" y="579.0" width="76.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="70.6" y="590.0">Unsafe_P..</text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 6.50%)</title><rect x="67.6" y="563.0" width="76.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="70.6" y="574.0">Parker::..</text>
</g>
<g>
<title>__psynch_cvwait (8 samples, 6.50%)</title><rect x="67.6" y="547.0" width="76.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="70.6" y="558.0">__psynch..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaHttpServletResponse.replaceOriginResponse (1 samples, 0.81%)</title><rect x="144.3" y="643.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.3" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.release (1 samples, 0.81%)</title><rect x="144.3" y="627.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="147.3" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (1 samples, 0.81%)</title><rect x="144.3" y="611.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.3" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (1 samples, 0.81%)</title><rect x="144.3" y="595.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.3" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.recycle (1 samples, 0.81%)</title><rect x="144.3" y="579.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.3" y="590.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$DefaultHandle.recycle (1 samples, 0.81%)</title><rect x="144.3" y="563.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="147.3" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.writeAndFlush (1 samples, 0.81%)</title><rect x="153.9" y="643.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.9" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.writeAndFlush (1 samples, 0.81%)</title><rect x="153.9" y="627.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.9" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (1 samples, 0.81%)</title><rect x="153.9" y="611.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.9" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (1 samples, 0.81%)</title><rect x="153.9" y="595.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="156.9" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.81%)</title><rect x="153.9" y="579.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.9" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.safeExecute (1 samples, 0.81%)</title><rect x="153.9" y="563.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.9" y="574.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (1 samples, 0.81%)</title><rect x="153.9" y="547.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.9" y="558.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (1 samples, 0.81%)</title><rect x="153.9" y="531.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.9" y="542.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (1 samples, 0.81%)</title><rect x="153.9" y="515.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.9" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.81%)</title><rect x="153.9" y="499.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="156.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.81%)</title><rect x="153.9" y="483.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.9" y="494.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.81%)</title><rect x="153.9" y="467.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.9" y="478.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.81%)</title><rect x="153.9" y="451.0" width="9.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="156.9" y="462.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.81%)</title><rect x="153.9" y="435.0" width="9.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="156.9" y="446.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (1 samples, 0.81%)</title><rect x="153.9" y="419.0" width="9.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="156.9" y="430.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (1 samples, 0.81%)</title><rect x="153.9" y="403.0" width="9.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="156.9" y="414.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaServletOutputStream.flush (2 samples, 1.63%)</title><rect x="163.5" y="707.0" width="19.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.5" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.flush (2 samples, 1.63%)</title><rect x="163.5" y="691.0" width="19.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.5" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundHandlerAdapter.flush (2 samples, 1.63%)</title><rect x="163.5" y="675.0" width="19.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.5" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush (2 samples, 1.63%)</title><rect x="163.5" y="659.0" width="19.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="166.5" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (2 samples, 1.63%)</title><rect x="163.5" y="643.0" width="19.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="166.5" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.safeExecute (2 samples, 1.63%)</title><rect x="163.5" y="627.0" width="19.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.5" y="638.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (2 samples, 1.63%)</title><rect x="163.5" y="611.0" width="19.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.5" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.wakeup (2 samples, 1.63%)</title><rect x="163.5" y="595.0" width="19.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (2 samples, 1.63%)</title><rect x="163.5" y="579.0" width="19.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.5" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.interrupt (2 samples, 1.63%)</title><rect x="163.5" y="563.0" width="19.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="166.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.interrupt (2 samples, 1.63%)</title><rect x="163.5" y="547.0" width="19.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.5" y="558.0"></text>
</g>
<g>
<title>write (2 samples, 1.63%)</title><rect x="163.5" y="531.0" width="19.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="166.5" y="542.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.takeTask (2 samples, 1.63%)</title><rect x="182.7" y="803.0" width="19.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="185.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 1.63%)</title><rect x="182.7" y="787.0" width="19.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.81%)</title><rect x="182.7" y="771.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="185.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.81%)</title><rect x="182.7" y="755.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="185.7" y="766.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.81%)</title><rect x="182.7" y="739.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="185.7" y="750.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.81%)</title><rect x="182.7" y="723.0" width="9.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="185.7" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.81%)</title><rect x="182.7" y="707.0" width="9.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="185.7" y="718.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.81%)</title><rect x="182.7" y="691.0" width="9.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="185.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.81%)</title><rect x="192.3" y="771.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="195.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.81%)</title><rect x="192.3" y="755.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.3" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.81%)</title><rect x="192.3" y="739.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="195.3" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.81%)</title><rect x="192.3" y="723.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.3" y="734.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.81%)</title><rect x="192.3" y="707.0" width="9.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="195.3" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.run (40 samples, 32.52%)</title><rect x="201.9" y="819.0" width="383.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.9" y="830.0">io/netty/channel/nio/NioEventLoop.run</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeys (8 samples, 6.50%)</title><rect x="201.9" y="803.0" width="76.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.9" y="814.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized (8 samples, 6.50%)</title><rect x="201.9" y="787.0" width="76.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.9" y="798.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKey (8 samples, 6.50%)</title><rect x="201.9" y="771.0" width="76.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="204.9" y="782.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read (7 samples, 5.69%)</title><rect x="201.9" y="755.0" width="67.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="204.9" y="766.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (7 samples, 5.69%)</title><rect x="201.9" y="739.0" width="67.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.9" y="750.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (7 samples, 5.69%)</title><rect x="201.9" y="723.0" width="67.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.9" y="734.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (7 samples, 5.69%)</title><rect x="201.9" y="707.0" width="67.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="204.9" y="718.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (7 samples, 5.69%)</title><rect x="201.9" y="691.0" width="67.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="204.9" y="702.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (7 samples, 5.69%)</title><rect x="201.9" y="675.0" width="67.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.9" y="686.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (7 samples, 5.69%)</title><rect x="201.9" y="659.0" width="67.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.9" y="670.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (7 samples, 5.69%)</title><rect x="201.9" y="643.0" width="67.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="204.9" y="654.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelRead (3 samples, 2.44%)</title><rect x="201.9" y="627.0" width="28.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.9" y="638.0">io..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (3 samples, 2.44%)</title><rect x="201.9" y="611.0" width="28.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.9" y="622.0">io..</text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (1 samples, 0.81%)</title><rect x="201.9" y="595.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.9" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (1 samples, 0.81%)</title><rect x="201.9" y="579.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="204.9" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (1 samples, 0.81%)</title><rect x="201.9" y="563.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.9" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.freeChunk (1 samples, 0.81%)</title><rect x="201.9" y="547.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.9" y="558.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.81%)</title><rect x="201.9" y="531.0" width="9.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="204.9" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.81%)</title><rect x="201.9" y="515.0" width="9.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="204.9" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.81%)</title><rect x="201.9" y="499.0" width="9.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="204.9" y="510.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.81%)</title><rect x="201.9" y="483.0" width="9.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="204.9" y="494.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.81%)</title><rect x="201.9" y="467.0" width="9.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="204.9" y="478.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (2 samples, 1.63%)</title><rect x="211.5" y="595.0" width="19.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.5" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead (2 samples, 1.63%)</title><rect x="211.5" y="579.0" width="19.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.5" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (2 samples, 1.63%)</title><rect x="211.5" y="563.0" width="19.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="214.5" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 1.63%)</title><rect x="211.5" y="547.0" width="19.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="214.5" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 1.63%)</title><rect x="211.5" y="531.0" width="19.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.5" y="542.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (2 samples, 1.63%)</title><rect x="211.5" y="515.0" width="19.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="214.5" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (2 samples, 1.63%)</title><rect x="211.5" y="499.0" width="19.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.5" y="510.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 1.63%)</title><rect x="211.5" y="483.0" width="19.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.5" y="494.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 1.63%)</title><rect x="211.5" y="467.0" width="19.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.5" y="478.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelRead (2 samples, 1.63%)</title><rect x="211.5" y="451.0" width="19.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.5" y="462.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (2 samples, 1.63%)</title><rect x="211.5" y="435.0" width="19.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="214.5" y="446.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 1.63%)</title><rect x="211.5" y="419.0" width="19.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.5" y="430.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 1.63%)</title><rect x="211.5" y="403.0" width="19.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.5" y="414.0"></text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (2 samples, 1.63%)</title><rect x="211.5" y="387.0" width="19.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="214.5" y="398.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/handler/FullHttpRequest2HttpServletHandler.channelRead0 (2 samples, 1.63%)</title><rect x="211.5" y="371.0" width="19.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="214.5" y="382.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/handler/FullHttpRequest2HttpServletHandler.channelRead0 (2 samples, 1.63%)</title><rect x="211.5" y="355.0" width="19.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.5" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (2 samples, 1.63%)</title><rect x="211.5" y="339.0" width="19.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.5" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (2 samples, 1.63%)</title><rect x="211.5" y="323.0" width="19.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.5" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (2 samples, 1.63%)</title><rect x="211.5" y="307.0" width="19.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="214.5" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (2 samples, 1.63%)</title><rect x="211.5" y="291.0" width="19.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="214.5" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (2 samples, 1.63%)</title><rect x="211.5" y="275.0" width="19.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="214.5" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (2 samples, 1.63%)</title><rect x="211.5" y="259.0" width="19.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="214.5" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (2 samples, 1.63%)</title><rect x="211.5" y="243.0" width="19.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="214.5" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (2 samples, 1.63%)</title><rect x="211.5" y="227.0" width="19.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="214.5" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (2 samples, 1.63%)</title><rect x="211.5" y="211.0" width="19.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="214.5" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.81%)</title><rect x="211.5" y="195.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="214.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.81%)</title><rect x="211.5" y="179.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="214.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (1 samples, 0.81%)</title><rect x="211.5" y="163.0" width="9.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.81%)</title><rect x="211.5" y="147.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="214.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.81%)</title><rect x="211.5" y="131.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="214.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.81%)</title><rect x="211.5" y="115.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="214.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.81%)</title><rect x="211.5" y="99.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="214.5" y="110.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.81%)</title><rect x="211.5" y="83.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="214.5" y="94.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.81%)</title><rect x="211.5" y="67.0" width="9.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="214.5" y="78.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.81%)</title><rect x="211.5" y="51.0" width="9.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="214.5" y="62.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.81%)</title><rect x="211.5" y="35.0" width="9.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="214.5" y="46.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.81%)</title><rect x="221.1" y="195.0" width="9.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="224.1" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.81%)</title><rect x="221.1" y="179.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="224.1" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.81%)</title><rect x="221.1" y="163.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="224.1" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (1 samples, 0.81%)</title><rect x="221.1" y="147.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="224.1" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (1 samples, 0.81%)</title><rect x="221.1" y="131.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.1" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.81%)</title><rect x="221.1" y="115.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="224.1" y="126.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.81%)</title><rect x="221.1" y="99.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.1" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.81%)</title><rect x="221.1" y="83.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="224.1" y="94.0"></text>
</g>
<g>
<title>Runtime1::monitorexit(JavaThread*, BasicObjectLock*) (1 samples, 0.81%)</title><rect x="221.1" y="67.0" width="9.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="224.1" y="78.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.81%)</title><rect x="221.1" y="51.0" width="9.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="224.1" y="62.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (4 samples, 3.25%)</title><rect x="230.7" y="627.0" width="38.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="233.7" y="638.0">io/..</text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (1 samples, 0.81%)</title><rect x="230.7" y="611.0" width="9.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.7" y="622.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (1 samples, 0.81%)</title><rect x="230.7" y="595.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="233.7" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (1 samples, 0.81%)</title><rect x="230.7" y="579.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="233.7" y="590.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.freeChunk (1 samples, 0.81%)</title><rect x="230.7" y="563.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="233.7" y="574.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.81%)</title><rect x="230.7" y="547.0" width="9.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="233.7" y="558.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.81%)</title><rect x="230.7" y="531.0" width="9.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="233.7" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.81%)</title><rect x="230.7" y="515.0" width="9.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="233.7" y="526.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.81%)</title><rect x="230.7" y="499.0" width="9.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="233.7" y="510.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.81%)</title><rect x="230.7" y="483.0" width="9.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="233.7" y="494.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.callDecode (2 samples, 1.63%)</title><rect x="240.2" y="611.0" width="19.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="243.2" y="622.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (2 samples, 1.63%)</title><rect x="240.2" y="595.0" width="19.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="243.2" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (2 samples, 1.63%)</title><rect x="240.2" y="579.0" width="19.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="243.2" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (2 samples, 1.63%)</title><rect x="240.2" y="563.0" width="19.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.2" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 1.63%)</title><rect x="240.2" y="547.0" width="19.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="243.2" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 1.63%)</title><rect x="240.2" y="531.0" width="19.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="243.2" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (2 samples, 1.63%)</title><rect x="240.2" y="515.0" width="19.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="243.2" y="526.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (2 samples, 1.63%)</title><rect x="240.2" y="499.0" width="19.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="243.2" y="510.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (2 samples, 1.63%)</title><rect x="240.2" y="483.0" width="19.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.2" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.81%)</title><rect x="240.2" y="467.0" width="9.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="243.2" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.81%)</title><rect x="240.2" y="451.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="243.2" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.81%)</title><rect x="240.2" y="435.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.2" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.81%)</title><rect x="240.2" y="419.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.2" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.81%)</title><rect x="240.2" y="403.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.2" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.81%)</title><rect x="240.2" y="387.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="243.2" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.81%)</title><rect x="240.2" y="371.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="243.2" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.81%)</title><rect x="240.2" y="355.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="243.2" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.81%)</title><rect x="240.2" y="339.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="243.2" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.81%)</title><rect x="240.2" y="323.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.2" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.81%)</title><rect x="240.2" y="307.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="243.2" y="318.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.81%)</title><rect x="240.2" y="291.0" width="9.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.2" y="302.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.81%)</title><rect x="240.2" y="275.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="243.2" y="286.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.81%)</title><rect x="240.2" y="259.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="243.2" y="270.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.81%)</title><rect x="240.2" y="243.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="243.2" y="254.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.81%)</title><rect x="240.2" y="227.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="243.2" y="238.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.81%)</title><rect x="240.2" y="211.0" width="9.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="243.2" y="222.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.81%)</title><rect x="240.2" y="195.0" width="9.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="243.2" y="206.0"></text>
</g>
<g>
<title>write (1 samples, 0.81%)</title><rect x="240.2" y="179.0" width="9.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="243.2" y="190.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (1 samples, 0.81%)</title><rect x="249.8" y="467.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="252.8" y="478.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.81%)</title><rect x="249.8" y="451.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.8" y="462.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.81%)</title><rect x="249.8" y="435.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="252.8" y="446.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (1 samples, 0.81%)</title><rect x="249.8" y="419.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="252.8" y="430.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/Xhaka2FullHttpResponseDecoder.decode (1 samples, 0.81%)</title><rect x="249.8" y="403.0" width="9.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.8" y="414.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/Xhaka2FullHttpResponseDecoder.decode (1 samples, 0.81%)</title><rect x="249.8" y="387.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="252.8" y="398.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpResponseProtobufTypeSerialize.deserialize (1 samples, 0.81%)</title><rect x="249.8" y="371.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="252.8" y="382.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpResponseProtobufTypeSerialize.deserialize (1 samples, 0.81%)</title><rect x="249.8" y="355.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="252.8" y="366.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse.parseFrom (1 samples, 0.81%)</title><rect x="249.8" y="339.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="252.8" y="350.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.81%)</title><rect x="249.8" y="323.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.8" y="334.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.81%)</title><rect x="249.8" y="307.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="252.8" y="318.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.81%)</title><rect x="249.8" y="291.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.8" y="302.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.81%)</title><rect x="249.8" y="275.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="252.8" y="286.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (1 samples, 0.81%)</title><rect x="249.8" y="259.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="252.8" y="270.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse$1.parsePartialFrom (1 samples, 0.81%)</title><rect x="249.8" y="243.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.8" y="254.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse$1.parsePartialFrom (1 samples, 0.81%)</title><rect x="249.8" y="227.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.8" y="238.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse.&lt;init&gt; (1 samples, 0.81%)</title><rect x="249.8" y="211.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="252.8" y="222.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse.&lt;init&gt; (1 samples, 0.81%)</title><rect x="249.8" y="195.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.8" y="206.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (1 samples, 0.81%)</title><rect x="249.8" y="179.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="252.8" y="190.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HeaderOuterClass$Header$1.parsePartialFrom (1 samples, 0.81%)</title><rect x="249.8" y="163.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="252.8" y="174.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (1 samples, 0.81%)</title><rect x="259.4" y="611.0" width="9.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.4" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (1 samples, 0.81%)</title><rect x="259.4" y="595.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.4" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.81%)</title><rect x="259.4" y="579.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="262.4" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.81%)</title><rect x="259.4" y="563.0" width="9.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="262.4" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (1 samples, 0.81%)</title><rect x="259.4" y="547.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="262.4" y="558.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (1 samples, 0.81%)</title><rect x="259.4" y="531.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="262.4" y="542.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (1 samples, 0.81%)</title><rect x="259.4" y="515.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="262.4" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (1 samples, 0.81%)</title><rect x="259.4" y="499.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="262.4" y="510.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.81%)</title><rect x="259.4" y="483.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="262.4" y="494.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.81%)</title><rect x="259.4" y="467.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.4" y="478.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (1 samples, 0.81%)</title><rect x="259.4" y="451.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="262.4" y="462.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (1 samples, 0.81%)</title><rect x="259.4" y="435.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="262.4" y="446.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.81%)</title><rect x="259.4" y="419.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.4" y="430.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.81%)</title><rect x="259.4" y="403.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="262.4" y="414.0"></text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (1 samples, 0.81%)</title><rect x="259.4" y="387.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="262.4" y="398.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/SlaveXhakaHttpServletResponsehHandler.channelRead0 (1 samples, 0.81%)</title><rect x="259.4" y="371.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.4" y="382.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/SlaveXhakaHttpServletResponsehHandler.channelRead0 (1 samples, 0.81%)</title><rect x="259.4" y="355.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.4" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.81%)</title><rect x="259.4" y="339.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.4" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (1 samples, 0.81%)</title><rect x="259.4" y="323.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="262.4" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.81%)</title><rect x="259.4" y="307.0" width="9.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="262.4" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.81%)</title><rect x="259.4" y="291.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.4" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.81%)</title><rect x="259.4" y="275.0" width="9.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.4" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.81%)</title><rect x="259.4" y="259.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="262.4" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.81%)</title><rect x="259.4" y="243.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="262.4" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.81%)</title><rect x="259.4" y="227.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.4" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.81%)</title><rect x="259.4" y="211.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="262.4" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.81%)</title><rect x="259.4" y="195.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="262.4" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.81%)</title><rect x="259.4" y="179.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="262.4" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.81%)</title><rect x="259.4" y="163.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.4" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (1 samples, 0.81%)</title><rect x="259.4" y="147.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="262.4" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (1 samples, 0.81%)</title><rect x="259.4" y="131.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.81%)</title><rect x="259.4" y="115.0" width="9.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="262.4" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.81%)</title><rect x="259.4" y="99.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="262.4" y="110.0"></text>
</g>
<g>
<title>java/lang/String.getChars (1 samples, 0.81%)</title><rect x="259.4" y="83.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="262.4" y="94.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.81%)</title><rect x="259.4" y="67.0" width="9.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="262.4" y="78.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioMessageChannel$NioMessageUnsafe.read (1 samples, 0.81%)</title><rect x="269.0" y="755.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.0" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (1 samples, 0.81%)</title><rect x="269.0" y="739.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.0" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.81%)</title><rect x="269.0" y="723.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="272.0" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.81%)</title><rect x="269.0" y="707.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.0" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (1 samples, 0.81%)</title><rect x="269.0" y="691.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.0" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (1 samples, 0.81%)</title><rect x="269.0" y="675.0" width="9.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="272.0" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.81%)</title><rect x="269.0" y="659.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.0" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.81%)</title><rect x="269.0" y="643.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.0" y="654.0"></text>
</g>
<g>
<title>io/netty/bootstrap/ServerBootstrap$ServerBootstrapAcceptor.channelRead (1 samples, 0.81%)</title><rect x="269.0" y="627.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="272.0" y="638.0"></text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (1 samples, 0.81%)</title><rect x="269.0" y="611.0" width="9.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="272.0" y="622.0"></text>
</g>
<g>
<title>ConstantPool::klass_at(int, Thread*) (1 samples, 0.81%)</title><rect x="269.0" y="595.0" width="9.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="272.0" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.select (27 samples, 21.95%)</title><rect x="278.6" y="803.0" width="259.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="281.6" y="814.0">io/netty/channel/nio/NioEventLoop.s..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (27 samples, 21.95%)</title><rect x="278.6" y="787.0" width="259.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.6" y="798.0">sun/nio/ch/SelectorImpl.select</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (27 samples, 21.95%)</title><rect x="278.6" y="771.0" width="259.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="281.6" y="782.0">sun/nio/ch/SelectorImpl.lockAndDoSe..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (27 samples, 21.95%)</title><rect x="278.6" y="755.0" width="259.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="281.6" y="766.0">sun/nio/ch/KQueueSelectorImpl.doSel..</text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.poll (27 samples, 21.95%)</title><rect x="278.6" y="739.0" width="259.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.6" y="750.0">sun/nio/ch/KQueueArrayWrapper.poll</text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.kevent0 (27 samples, 21.95%)</title><rect x="278.6" y="723.0" width="259.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.6" y="734.0">sun/nio/ch/KQueueArrayWrapper.kevent0</text>
</g>
<g>
<title>kevent (27 samples, 21.95%)</title><rect x="278.6" y="707.0" width="259.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="281.6" y="718.0">kevent</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.runAllTasks (5 samples, 4.07%)</title><rect x="537.6" y="803.0" width="48.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="540.6" y="814.0">io/n..</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.safeExecute (5 samples, 4.07%)</title><rect x="537.6" y="787.0" width="48.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="540.6" y="798.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$16.run (1 samples, 0.81%)</title><rect x="537.6" y="771.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="540.6" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$1500 (1 samples, 0.81%)</title><rect x="537.6" y="755.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="540.6" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (1 samples, 0.81%)</title><rect x="537.6" y="739.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="540.6" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (1 samples, 0.81%)</title><rect x="537.6" y="723.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="540.6" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.flush (1 samples, 0.81%)</title><rect x="537.6" y="707.0" width="9.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="540.6" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush (1 samples, 0.81%)</title><rect x="537.6" y="691.0" width="9.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="540.6" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.flush0 (1 samples, 0.81%)</title><rect x="537.6" y="675.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="540.6" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (1 samples, 0.81%)</title><rect x="537.6" y="659.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="540.6" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doWrite (1 samples, 0.81%)</title><rect x="537.6" y="643.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="540.6" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.nioBufferCount (1 samples, 0.81%)</title><rect x="537.6" y="627.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="540.6" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.nioBuffers (1 samples, 0.81%)</title><rect x="537.6" y="611.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="540.6" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$AbstractWriteTask.run (4 samples, 3.25%)</title><rect x="547.2" y="771.0" width="38.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.2" y="782.0">io/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteAndFlushTask.write (4 samples, 3.25%)</title><rect x="547.2" y="755.0" width="38.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.2" y="766.0">io/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$AbstractWriteTask.write (4 samples, 3.25%)</title><rect x="547.2" y="739.0" width="38.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="550.2" y="750.0">io/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$1900 (4 samples, 3.25%)</title><rect x="547.2" y="723.0" width="38.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.2" y="734.0">io/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (4 samples, 3.25%)</title><rect x="547.2" y="707.0" width="38.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="550.2" y="718.0">io/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (4 samples, 3.25%)</title><rect x="547.2" y="691.0" width="38.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.2" y="702.0">io/..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (4 samples, 3.25%)</title><rect x="547.2" y="675.0" width="38.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.2" y="686.0">io/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (4 samples, 3.25%)</title><rect x="547.2" y="659.0" width="38.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="550.2" y="670.0">io/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (4 samples, 3.25%)</title><rect x="547.2" y="643.0" width="38.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="550.2" y="654.0">io/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (4 samples, 3.25%)</title><rect x="547.2" y="627.0" width="38.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="550.2" y="638.0">io/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (4 samples, 3.25%)</title><rect x="547.2" y="611.0" width="38.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="550.2" y="622.0">io/..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (4 samples, 3.25%)</title><rect x="547.2" y="595.0" width="38.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="550.2" y="606.0">io/..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/FullHttpRequest2XhakaEncoder.encode (3 samples, 2.44%)</title><rect x="547.2" y="579.0" width="28.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="550.2" y="590.0">co..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/FullHttpRequest2XhakaEncoder.encode (3 samples, 2.44%)</title><rect x="547.2" y="563.0" width="28.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.2" y="574.0">co..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.writeAndFlush (2 samples, 1.63%)</title><rect x="547.2" y="547.0" width="19.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="550.2" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.writeAndFlush (2 samples, 1.63%)</title><rect x="547.2" y="531.0" width="19.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="550.2" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (2 samples, 1.63%)</title><rect x="547.2" y="515.0" width="19.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="550.2" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (2 samples, 1.63%)</title><rect x="547.2" y="499.0" width="19.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.2" y="510.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (2 samples, 1.63%)</title><rect x="547.2" y="483.0" width="19.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.2" y="494.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWriteAndFlush (2 samples, 1.63%)</title><rect x="547.2" y="467.0" width="19.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="550.2" y="478.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (2 samples, 1.63%)</title><rect x="547.2" y="451.0" width="19.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="550.2" y="462.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (2 samples, 1.63%)</title><rect x="547.2" y="435.0" width="19.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.2" y="446.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/XhakaEncoder.encode (2 samples, 1.63%)</title><rect x="547.2" y="419.0" width="19.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="550.2" y="430.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/XhakaEncoder.encode (2 samples, 1.63%)</title><rect x="547.2" y="403.0" width="19.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="550.2" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (2 samples, 1.63%)</title><rect x="547.2" y="387.0" width="19.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="550.2" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.81%)</title><rect x="547.2" y="371.0" width="9.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="550.2" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.81%)</title><rect x="547.2" y="355.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.2" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.81%)</title><rect x="547.2" y="339.0" width="9.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.2" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.81%)</title><rect x="547.2" y="323.0" width="9.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="550.2" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.81%)</title><rect x="547.2" y="307.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="550.2" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.81%)</title><rect x="547.2" y="291.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.2" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.81%)</title><rect x="547.2" y="275.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="550.2" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.81%)</title><rect x="547.2" y="259.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.2" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.81%)</title><rect x="547.2" y="243.0" width="9.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="550.2" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.81%)</title><rect x="547.2" y="227.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="550.2" y="238.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.81%)</title><rect x="547.2" y="211.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.2" y="222.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.81%)</title><rect x="547.2" y="195.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="550.2" y="206.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.81%)</title><rect x="547.2" y="179.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="550.2" y="190.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.81%)</title><rect x="547.2" y="163.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="550.2" y="174.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.81%)</title><rect x="547.2" y="147.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="550.2" y="158.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.81%)</title><rect x="547.2" y="131.0" width="9.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="550.2" y="142.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.81%)</title><rect x="547.2" y="115.0" width="9.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="550.2" y="126.0"></text>
</g>
<g>
<title>write (1 samples, 0.81%)</title><rect x="547.2" y="99.0" width="9.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="550.2" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (1 samples, 0.81%)</title><rect x="556.8" y="371.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="559.8" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.81%)</title><rect x="556.8" y="355.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.8" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.81%)</title><rect x="556.8" y="339.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="559.8" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.81%)</title><rect x="556.8" y="323.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.8" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.81%)</title><rect x="556.8" y="307.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="559.8" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.81%)</title><rect x="556.8" y="291.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="559.8" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.81%)</title><rect x="556.8" y="275.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="559.8" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.81%)</title><rect x="556.8" y="259.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="559.8" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.81%)</title><rect x="556.8" y="243.0" width="9.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="559.8" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.81%)</title><rect x="556.8" y="227.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.8" y="238.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.81%)</title><rect x="556.8" y="211.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="559.8" y="222.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.81%)</title><rect x="556.8" y="195.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.8" y="206.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.81%)</title><rect x="556.8" y="179.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.8" y="190.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.81%)</title><rect x="556.8" y="163.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="559.8" y="174.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.81%)</title><rect x="556.8" y="147.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.8" y="158.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.81%)</title><rect x="556.8" y="131.0" width="9.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="559.8" y="142.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.81%)</title><rect x="556.8" y="115.0" width="9.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="559.8" y="126.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.81%)</title><rect x="556.8" y="99.0" width="9.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="559.8" y="110.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.81%)</title><rect x="556.8" y="83.0" width="9.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="559.8" y="94.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.81%)</title><rect x="566.4" y="547.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="569.4" y="558.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.81%)</title><rect x="566.4" y="531.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.4" y="542.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.81%)</title><rect x="566.4" y="515.0" width="9.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="569.4" y="526.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.81%)</title><rect x="566.4" y="499.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="569.4" y="510.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.81%)</title><rect x="566.4" y="483.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="569.4" y="494.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (1 samples, 0.81%)</title><rect x="576.0" y="579.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="579.0" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpRequest.release (1 samples, 0.81%)</title><rect x="576.0" y="563.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="579.0" y="574.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (1 samples, 0.81%)</title><rect x="576.0" y="547.0" width="9.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="579.0" y="558.0"></text>
</g>
<g>
<title>io/netty/util/IllegalReferenceCountException.&lt;init&gt; (1 samples, 0.81%)</title><rect x="576.0" y="531.0" width="9.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="579.0" y="542.0"></text>
</g>
<g>
<title>io/netty/util/IllegalReferenceCountException.&lt;init&gt; (1 samples, 0.81%)</title><rect x="576.0" y="515.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="579.0" y="526.0"></text>
</g>
<g>
<title>java/lang/IllegalStateException.&lt;init&gt; (1 samples, 0.81%)</title><rect x="576.0" y="499.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="579.0" y="510.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.81%)</title><rect x="576.0" y="483.0" width="9.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="579.0" y="494.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.81%)</title><rect x="576.0" y="467.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="579.0" y="478.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.81%)</title><rect x="576.0" y="451.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="579.0" y="462.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.81%)</title><rect x="576.0" y="435.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="579.0" y="446.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.81%)</title><rect x="576.0" y="419.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="579.0" y="430.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.81%)</title><rect x="576.0" y="403.0" width="9.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="579.0" y="414.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.81%)</title><rect x="576.0" y="387.0" width="9.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="579.0" y="398.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (1 samples, 0.81%)</title><rect x="576.0" y="371.0" width="9.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="579.0" y="382.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (1 samples, 0.81%)</title><rect x="576.0" y="355.0" width="9.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="579.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 1.63%)</title><rect x="585.6" y="851.0" width="19.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 1.63%)</title><rect x="585.6" y="835.0" width="19.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.run (2 samples, 1.63%)</title><rect x="585.6" y="819.0" width="19.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="588.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201 (2 samples, 1.63%)</title><rect x="585.6" y="803.0" width="19.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="588.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2 samples, 1.63%)</title><rect x="585.6" y="787.0" width="19.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run$$$capture (2 samples, 1.63%)</title><rect x="585.6" y="771.0" width="19.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="588.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (2 samples, 1.63%)</title><rect x="585.6" y="755.0" width="19.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="588.6" y="766.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/ProcessImpl$CommandProcessTask.run (2 samples, 1.63%)</title><rect x="585.6" y="739.0" width="19.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="588.6" y="750.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl$ProcessHandler.handle (2 samples, 1.63%)</title><rect x="585.6" y="723.0" width="19.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="588.6" y="734.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl$ProcessHandler.handle (2 samples, 1.63%)</title><rect x="585.6" y="707.0" width="19.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="588.6" y="718.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.access$100 (2 samples, 1.63%)</title><rect x="585.6" y="691.0" width="19.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="588.6" y="702.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.process (2 samples, 1.63%)</title><rect x="585.6" y="675.0" width="19.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="588.6" y="686.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/command/monitor200/ProfilerCommand.process (2 samples, 1.63%)</title><rect x="585.6" y="659.0" width="19.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="588.6" y="670.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/command/monitor200/ProfilerCommand.execute (1 samples, 0.81%)</title><rect x="585.6" y="643.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.6" y="654.0"></text>
</g>
<g>
<title>one/profiler/AsyncProfiler.execute (1 samples, 0.81%)</title><rect x="585.6" y="627.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.6" y="638.0"></text>
</g>
<g>
<title>one/profiler/AsyncProfiler.execute0 (1 samples, 0.81%)</title><rect x="585.6" y="611.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="588.6" y="622.0"></text>
</g>
<g>
<title>Java_one_profiler_AsyncProfiler_execute0 (1 samples, 0.81%)</title><rect x="585.6" y="595.0" width="9.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="588.6" y="606.0"></text>
</g>
<g>
<title>jni_NewStringUTF (1 samples, 0.81%)</title><rect x="585.6" y="579.0" width="9.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="588.6" y="590.0"></text>
</g>
<g>
<title>java_lang_String::create_oop_from_str(char const*, Thread*) (1 samples, 0.81%)</title><rect x="585.6" y="563.0" width="9.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="588.6" y="574.0"></text>
</g>
<g>
<title>java_lang_String::create_from_str(char const*, Thread*) (1 samples, 0.81%)</title><rect x="585.6" y="547.0" width="9.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="588.6" y="558.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, Thread*) (1 samples, 0.81%)</title><rect x="585.6" y="531.0" width="9.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="588.6" y="542.0"></text>
</g>
<g>
<title>void oop_store&lt;unsigned int&gt;(unsigned int*, oopDesc*) (1 samples, 0.81%)</title><rect x="585.6" y="515.0" width="9.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="588.6" y="526.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/ProcessImpl$CommandProcessImpl.end (1 samples, 0.81%)</title><rect x="595.2" y="643.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.2" y="654.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/ProcessImpl$CommandProcessImpl.end (1 samples, 0.81%)</title><rect x="595.2" y="627.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.2" y="638.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/ProcessImpl$CommandProcessImpl.end (1 samples, 0.81%)</title><rect x="595.2" y="611.0" width="9.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.2" y="622.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/ProcessImpl.access$2000 (1 samples, 0.81%)</title><rect x="595.2" y="595.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="598.2" y="606.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/ProcessImpl.terminate (1 samples, 0.81%)</title><rect x="595.2" y="579.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.2" y="590.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/ProcessImpl.updateStatus (1 samples, 0.81%)</title><rect x="595.2" y="563.0" width="9.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="598.2" y="574.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/JobImpl$TerminatedHandler.handle (1 samples, 0.81%)</title><rect x="595.2" y="547.0" width="9.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="598.2" y="558.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/JobImpl$TerminatedHandler.handle (1 samples, 0.81%)</title><rect x="595.2" y="531.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="598.2" y="542.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/impl/ShellImpl$ShellJobHandler.onTerminated (1 samples, 0.81%)</title><rect x="595.2" y="515.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="598.2" y="526.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/util/FileUtils.saveCommandHistory (1 samples, 0.81%)</title><rect x="595.2" y="499.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="598.2" y="510.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.close (1 samples, 0.81%)</title><rect x="595.2" y="483.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="598.2" y="494.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.close (1 samples, 0.81%)</title><rect x="595.2" y="467.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.2" y="478.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.closeAll (1 samples, 0.81%)</title><rect x="595.2" y="451.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="598.2" y="462.0"></text>
</g>
<g>
<title>java/io/FileOutputStream$1.close (1 samples, 0.81%)</title><rect x="595.2" y="435.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.2" y="446.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.access$000 (1 samples, 0.81%)</title><rect x="595.2" y="419.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="598.2" y="430.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.close0 (1 samples, 0.81%)</title><rect x="595.2" y="403.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.2" y="414.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.81%)</title><rect x="595.2" y="387.0" width="9.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="598.2" y="398.0"></text>
</g>
<g>
<title>thread_start (61 samples, 49.59%)</title><rect x="604.8" y="867.0" width="585.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="607.8" y="878.0">thread_start</text>
</g>
<g>
<title>_pthread_start (61 samples, 49.59%)</title><rect x="604.8" y="851.0" width="585.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="607.8" y="862.0">_pthread_start</text>
</g>
<g>
<title>_pthread_body (61 samples, 49.59%)</title><rect x="604.8" y="835.0" width="585.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="607.8" y="846.0">_pthread_body</text>
</g>
<g>
<title>java_start(Thread*) (61 samples, 49.59%)</title><rect x="604.8" y="819.0" width="585.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="607.8" y="830.0">java_start(Thread*)</text>
</g>
<g>
<title>GCTaskThread::run() (44 samples, 35.77%)</title><rect x="604.8" y="803.0" width="422.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="607.8" y="814.0">GCTaskThread::run()</text>
</g>
<g>
<title>DrainStacksCompactionTask::do_it(GCTaskManager*, unsigned int) (5 samples, 4.07%)</title><rect x="604.8" y="787.0" width="48.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="607.8" y="798.0">Drai..</text>
</g>
<g>
<title>ParCompactionManager::drain_region_stacks() (5 samples, 4.07%)</title><rect x="604.8" y="771.0" width="48.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="607.8" y="782.0">ParC..</text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (5 samples, 4.07%)</title><rect x="604.8" y="755.0" width="48.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="607.8" y="766.0">PSPa..</text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (5 samples, 4.07%)</title><rect x="604.8" y="739.0" width="48.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="607.8" y="750.0">ParM..</text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (5 samples, 4.07%)</title><rect x="604.8" y="723.0" width="48.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="607.8" y="734.0">Move..</text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (2 samples, 1.63%)</title><rect x="604.8" y="707.0" width="19.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="607.8" y="718.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.81%)</title><rect x="614.4" y="691.0" width="9.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="617.4" y="702.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.81%)</title><rect x="614.4" y="675.0" width="9.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="617.4" y="686.0"></text>
</g>
<g>
<title>InstanceMirrorKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.81%)</title><rect x="624.0" y="707.0" width="9.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="627.0" y="718.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.81%)</title><rect x="624.0" y="691.0" width="9.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="627.0" y="702.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.81%)</title><rect x="624.0" y="675.0" width="9.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="627.0" y="686.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.81%)</title><rect x="633.6" y="707.0" width="9.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="636.6" y="718.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.81%)</title><rect x="633.6" y="691.0" width="9.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="636.6" y="702.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.81%)</title><rect x="633.6" y="675.0" width="9.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="636.6" y="686.0"></text>
</g>
<g>
<title>java_lang_Class::oop_size(oopDesc*) (1 samples, 0.81%)</title><rect x="643.2" y="707.0" width="9.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="646.2" y="718.0"></text>
</g>
<g>
<title>MarkFromRootsTask::do_it(GCTaskManager*, unsigned int) (2 samples, 1.63%)</title><rect x="652.8" y="787.0" width="19.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="655.8" y="798.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (2 samples, 1.63%)</title><rect x="652.8" y="771.0" width="19.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="655.8" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.81%)</title><rect x="652.8" y="755.0" width="9.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="655.8" y="766.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.81%)</title><rect x="652.8" y="739.0" width="9.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="655.8" y="750.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.81%)</title><rect x="652.8" y="723.0" width="9.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="655.8" y="734.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.81%)</title><rect x="662.4" y="755.0" width="9.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="665.4" y="766.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (1 samples, 0.81%)</title><rect x="662.4" y="739.0" width="9.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="665.4" y="750.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.81%)</title><rect x="662.4" y="723.0" width="9.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="665.4" y="734.0"></text>
</g>
<g>
<title>OldToYoungRootsTask::do_it(GCTaskManager*, unsigned int) (4 samples, 3.25%)</title><rect x="672.0" y="787.0" width="38.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="675.0" y="798.0">Old..</text>
</g>
<g>
<title>CardTableExtension::scavenge_contents_parallel(ObjectStartArray*, MutableSpace*, HeapWord*, PSPromotionManager*, unsigned int, unsigned int) (4 samples, 3.25%)</title><rect x="672.0" y="771.0" width="38.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="675.0" y="782.0">Car..</text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (4 samples, 3.25%)</title><rect x="672.0" y="755.0" width="38.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="675.0" y="766.0">PSP..</text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (3 samples, 2.44%)</title><rect x="681.5" y="739.0" width="28.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="684.5" y="750.0">PS..</text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (3 samples, 2.44%)</title><rect x="681.5" y="723.0" width="28.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="684.5" y="734.0">oo..</text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.81%)</title><rect x="691.1" y="707.0" width="9.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="694.1" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (1 samples, 0.81%)</title><rect x="700.7" y="707.0" width="9.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="703.7" y="718.0"></text>
</g>
<g>
<title>StealMarkingTask::do_it(GCTaskManager*, unsigned int) (3 samples, 2.44%)</title><rect x="710.3" y="787.0" width="28.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="713.3" y="798.0">St..</text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (3 samples, 2.44%)</title><rect x="710.3" y="771.0" width="28.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="713.3" y="782.0">Pa..</text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.81%)</title><rect x="710.3" y="755.0" width="9.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="713.3" y="766.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.81%)</title><rect x="710.3" y="739.0" width="9.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="713.3" y="750.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (1 samples, 0.81%)</title><rect x="710.3" y="723.0" width="9.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="713.3" y="734.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.81%)</title><rect x="719.9" y="755.0" width="9.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="722.9" y="766.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (1 samples, 0.81%)</title><rect x="719.9" y="739.0" width="9.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="722.9" y="750.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.81%)</title><rect x="719.9" y="723.0" width="9.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="722.9" y="734.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.81%)</title><rect x="719.9" y="707.0" width="9.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="722.9" y="718.0"></text>
</g>
<g>
<title>void specialized_oop_follow_contents&lt;unsigned int&gt;(InstanceRefKlass*, ParCompactionManager*, oopDesc*) (1 samples, 0.81%)</title><rect x="729.5" y="755.0" width="9.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="732.5" y="766.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.81%)</title><rect x="729.5" y="739.0" width="9.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="732.5" y="750.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.81%)</title><rect x="729.5" y="723.0" width="9.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="732.5" y="734.0"></text>
</g>
<g>
<title>StealRegionCompactionTask::do_it(GCTaskManager*, unsigned int) (27 samples, 21.95%)</title><rect x="739.1" y="787.0" width="259.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="742.1" y="798.0">StealRegionCompactionTask::do_it(GC..</text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (2 samples, 1.63%)</title><rect x="739.1" y="771.0" width="19.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="742.1" y="782.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (2 samples, 1.63%)</title><rect x="739.1" y="755.0" width="19.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="742.1" y="766.0"></text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (2 samples, 1.63%)</title><rect x="739.1" y="739.0" width="19.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="742.1" y="750.0"></text>
</g>
<g>
<title>InstanceRefKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.81%)</title><rect x="739.1" y="723.0" width="9.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="742.1" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.81%)</title><rect x="739.1" y="707.0" width="9.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="742.1" y="718.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.81%)</title><rect x="739.1" y="691.0" width="9.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="742.1" y="702.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.81%)</title><rect x="748.7" y="723.0" width="9.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="751.7" y="734.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.81%)</title><rect x="748.7" y="707.0" width="9.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="751.7" y="718.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.81%)</title><rect x="748.7" y="691.0" width="9.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="751.7" y="702.0"></text>
</g>
<g>
<title>ParCompactionManager::drain_region_stacks() (7 samples, 5.69%)</title><rect x="758.3" y="771.0" width="67.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="761.3" y="782.0">ParComp..</text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (7 samples, 5.69%)</title><rect x="758.3" y="755.0" width="67.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="761.3" y="766.0">PSParal..</text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (7 samples, 5.69%)</title><rect x="758.3" y="739.0" width="67.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="761.3" y="750.0">ParMark..</text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (7 samples, 5.69%)</title><rect x="758.3" y="723.0" width="67.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="761.3" y="734.0">MoveAnd..</text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (5 samples, 4.07%)</title><rect x="758.3" y="707.0" width="48.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="761.3" y="718.0">Inst..</text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (5 samples, 4.07%)</title><rect x="758.3" y="691.0" width="48.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="761.3" y="702.0">Para..</text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (3 samples, 2.44%)</title><rect x="777.5" y="675.0" width="28.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="780.5" y="686.0">Pa..</text>
</g>
<g>
<title>InstanceRefKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.81%)</title><rect x="806.3" y="707.0" width="9.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="809.3" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.81%)</title><rect x="806.3" y="691.0" width="9.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="809.3" y="702.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.81%)</title><rect x="806.3" y="675.0" width="9.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="809.3" y="686.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.81%)</title><rect x="806.3" y="659.0" width="9.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="809.3" y="670.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.81%)</title><rect x="815.9" y="707.0" width="9.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="818.9" y="718.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.81%)</title><rect x="815.9" y="691.0" width="9.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="818.9" y="702.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.81%)</title><rect x="815.9" y="675.0" width="9.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="818.9" y="686.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (15 samples, 12.20%)</title><rect x="825.4" y="771.0" width="143.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="828.4" y="782.0">ParallelTaskTermin..</text>
</g>
<g>
<title>xdrmem_ops_aligned (14 samples, 11.38%)</title><rect x="835.0" y="755.0" width="134.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="838.0" y="766.0">xdrmem_ops_aligned</text>
</g>
<g>
<title>SpinPause (3 samples, 2.44%)</title><rect x="969.3" y="771.0" width="28.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="972.3" y="782.0">Sp..</text>
</g>
<g>
<title>ThreadRootsMarkingTask::do_it(GCTaskManager*, unsigned int) (3 samples, 2.44%)</title><rect x="998.1" y="787.0" width="28.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1001.1" y="798.0">Th..</text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (3 samples, 2.44%)</title><rect x="998.1" y="771.0" width="28.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1001.1" y="782.0">Pa..</text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (2 samples, 1.63%)</title><rect x="998.1" y="755.0" width="19.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1001.1" y="766.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (2 samples, 1.63%)</title><rect x="998.1" y="739.0" width="19.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1001.1" y="750.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.81%)</title><rect x="1007.7" y="723.0" width="9.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1010.7" y="734.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.81%)</title><rect x="1017.3" y="755.0" width="9.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1020.3" y="766.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (1 samples, 0.81%)</title><rect x="1017.3" y="739.0" width="9.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1020.3" y="750.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.81%)</title><rect x="1017.3" y="723.0" width="9.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1020.3" y="734.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.81%)</title><rect x="1017.3" y="707.0" width="9.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1020.3" y="718.0"></text>
</g>
<g>
<title>JavaThread::run() (4 samples, 3.25%)</title><rect x="1026.9" y="803.0" width="38.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1029.9" y="814.0">Jav..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (4 samples, 3.25%)</title><rect x="1026.9" y="787.0" width="38.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1029.9" y="798.0">Jav..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (3 samples, 2.44%)</title><rect x="1026.9" y="771.0" width="28.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1029.9" y="782.0">Co..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (1 samples, 0.81%)</title><rect x="1026.9" y="755.0" width="9.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1029.9" y="766.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (1 samples, 0.81%)</title><rect x="1026.9" y="739.0" width="9.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1029.9" y="750.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (1 samples, 0.81%)</title><rect x="1026.9" y="723.0" width="9.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1029.9" y="734.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.81%)</title><rect x="1026.9" y="707.0" width="9.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1029.9" y="718.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.81%)</title><rect x="1026.9" y="691.0" width="9.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1029.9" y="702.0"></text>
</g>
<g>
<title>Compilation::build_hir() (1 samples, 0.81%)</title><rect x="1026.9" y="675.0" width="9.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1029.9" y="686.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.81%)</title><rect x="1026.9" y="659.0" width="9.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1029.9" y="670.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.81%)</title><rect x="1026.9" y="643.0" width="9.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1029.9" y="654.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.81%)</title><rect x="1026.9" y="627.0" width="9.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1029.9" y="638.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.81%)</title><rect x="1026.9" y="611.0" width="9.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1029.9" y="622.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.81%)</title><rect x="1026.9" y="595.0" width="9.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1029.9" y="606.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.81%)</title><rect x="1026.9" y="579.0" width="9.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1029.9" y="590.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.81%)</title><rect x="1026.9" y="563.0" width="9.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1029.9" y="574.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.81%)</title><rect x="1026.9" y="547.0" width="9.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1029.9" y="558.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.81%)</title><rect x="1026.9" y="531.0" width="9.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1029.9" y="542.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.81%)</title><rect x="1026.9" y="515.0" width="9.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1029.9" y="526.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.81%)</title><rect x="1026.9" y="499.0" width="9.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1029.9" y="510.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle, ciInstanceKlass*) (1 samples, 0.81%)</title><rect x="1026.9" y="483.0" width="9.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1029.9" y="494.0"></text>
</g>
<g>
<title>ciMethod::can_be_compiled() (1 samples, 0.81%)</title><rect x="1026.9" y="467.0" width="9.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1029.9" y="478.0"></text>
</g>
<g>
<title>ciEnv::comp_level() (1 samples, 0.81%)</title><rect x="1026.9" y="451.0" width="9.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1029.9" y="462.0"></text>
</g>
<g>
<title>CompileQueue::get() (2 samples, 1.63%)</title><rect x="1036.5" y="755.0" width="19.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1039.5" y="766.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 1.63%)</title><rect x="1036.5" y="739.0" width="19.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1039.5" y="750.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 1.63%)</title><rect x="1036.5" y="723.0" width="19.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1039.5" y="734.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 1.63%)</title><rect x="1036.5" y="707.0" width="19.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1039.5" y="718.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 1.63%)</title><rect x="1036.5" y="691.0" width="19.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1039.5" y="702.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.81%)</title><rect x="1055.7" y="771.0" width="9.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1058.7" y="782.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.81%)</title><rect x="1055.7" y="755.0" width="9.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1058.7" y="766.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.81%)</title><rect x="1055.7" y="739.0" width="9.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1058.7" y="750.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.81%)</title><rect x="1055.7" y="723.0" width="9.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1058.7" y="734.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.81%)</title><rect x="1055.7" y="707.0" width="9.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1058.7" y="718.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.81%)</title><rect x="1055.7" y="691.0" width="9.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1058.7" y="702.0"></text>
</g>
<g>
<title>VMThread::run() (9 samples, 7.32%)</title><rect x="1065.3" y="803.0" width="86.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1068.3" y="814.0">VMThread::..</text>
</g>
<g>
<title>VMThread::loop() (9 samples, 7.32%)</title><rect x="1065.3" y="787.0" width="86.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1068.3" y="798.0">VMThread::..</text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.81%)</title><rect x="1065.3" y="771.0" width="9.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1068.3" y="782.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.81%)</title><rect x="1065.3" y="755.0" width="9.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1068.3" y="766.0"></text>
</g>
<g>
<title>Threads::nmethods_do(CodeBlobClosure*) (1 samples, 0.81%)</title><rect x="1065.3" y="739.0" width="9.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1068.3" y="750.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (1 samples, 0.81%)</title><rect x="1065.3" y="723.0" width="9.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1068.3" y="734.0"></text>
</g>
<g>
<title>SetHotnessClosure::do_code_blob(CodeBlob*) (1 samples, 0.81%)</title><rect x="1065.3" y="707.0" width="9.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1068.3" y="718.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (8 samples, 6.50%)</title><rect x="1074.9" y="771.0" width="76.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1077.9" y="782.0">VMThread..</text>
</g>
<g>
<title>VM_Operation::evaluate() (8 samples, 6.50%)</title><rect x="1074.9" y="755.0" width="76.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1077.9" y="766.0">VM_Opera..</text>
</g>
<g>
<title>VM_ParallelGCFailedAllocation::doit() (8 samples, 6.50%)</title><rect x="1074.9" y="739.0" width="76.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1077.9" y="750.0">VM_Paral..</text>
</g>
<g>
<title>ParallelScavengeHeap::failed_mem_allocate(unsigned long) (8 samples, 6.50%)</title><rect x="1074.9" y="723.0" width="76.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1077.9" y="734.0">Parallel..</text>
</g>
<g>
<title>PSScavenge::invoke() (8 samples, 6.50%)</title><rect x="1074.9" y="707.0" width="76.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1077.9" y="718.0">PSScaven..</text>
</g>
<g>
<title>PSParallelCompact::invoke_no_policy(bool) (7 samples, 5.69%)</title><rect x="1074.9" y="691.0" width="67.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1077.9" y="702.0">PSParal..</text>
</g>
<g>
<title>PSParallelCompact::adjust_roots() (2 samples, 1.63%)</title><rect x="1074.9" y="675.0" width="19.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1077.9" y="686.0"></text>
</g>
<g>
<title>StringTable::buckets_oops_do(OopClosure*, int, int) (1 samples, 0.81%)</title><rect x="1074.9" y="659.0" width="9.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1077.9" y="670.0"></text>
</g>
<g>
<title>Threads::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (1 samples, 0.81%)</title><rect x="1084.5" y="659.0" width="9.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1087.5" y="670.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (1 samples, 0.81%)</title><rect x="1084.5" y="643.0" width="9.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1087.5" y="654.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, CLDClosure*, RegisterMap const*, bool) (1 samples, 0.81%)</title><rect x="1084.5" y="627.0" width="9.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1087.5" y="638.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, KlassClosure*, bool) (1 samples, 0.81%)</title><rect x="1084.5" y="611.0" width="9.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1087.5" y="622.0"></text>
</g>
<g>
<title>ClassLoaderData::ChunkedHandleList::oops_do(OopClosure*) (1 samples, 0.81%)</title><rect x="1084.5" y="595.0" width="9.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1087.5" y="606.0"></text>
</g>
<g>
<title>PSParallelCompact::AdjustPointerClosure::do_oop(oopDesc**) (1 samples, 0.81%)</title><rect x="1084.5" y="579.0" width="9.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1087.5" y="590.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.81%)</title><rect x="1084.5" y="563.0" width="9.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1087.5" y="574.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.81%)</title><rect x="1084.5" y="547.0" width="9.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1087.5" y="558.0"></text>
</g>
<g>
<title>PSParallelCompact::marking_phase(ParCompactionManager*, bool, ParallelOldTracer*) (5 samples, 4.07%)</title><rect x="1094.1" y="675.0" width="47.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1097.1" y="686.0">PSPa..</text>
</g>
<g>
<title>Klass::clean_weak_klass_links(BoolObjectClosure*, bool) (4 samples, 3.25%)</title><rect x="1094.1" y="659.0" width="38.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1097.1" y="670.0">Kla..</text>
</g>
<g>
<title>InstanceKlass::clean_weak_instanceklass_links(BoolObjectClosure*) (4 samples, 3.25%)</title><rect x="1094.1" y="643.0" width="38.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1097.1" y="654.0">Ins..</text>
</g>
<g>
<title>InstanceKlass::clean_method_data(BoolObjectClosure*) (4 samples, 3.25%)</title><rect x="1094.1" y="627.0" width="38.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1097.1" y="638.0">Ins..</text>
</g>
<g>
<title>SymbolTable::unlink(int*, int*) (1 samples, 0.81%)</title><rect x="1132.4" y="659.0" width="9.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1135.4" y="670.0"></text>
</g>
<g>
<title>SymbolTable::buckets_unlink(int, int, BasicHashtable&lt;(MemoryType)9&gt;::BucketUnlinkContext*, unsigned long*) (1 samples, 0.81%)</title><rect x="1132.4" y="643.0" width="9.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1135.4" y="654.0"></text>
</g>
<g>
<title>PSScavenge::invoke_no_policy() (1 samples, 0.81%)</title><rect x="1142.0" y="691.0" width="9.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1145.0" y="702.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_discovered_references(BoolObjectClosure*, OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*, GCTimer*, GCId) (1 samples, 0.81%)</title><rect x="1142.0" y="675.0" width="9.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1145.0" y="686.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_discovered_reflist(DiscoveredList*, ReferencePolicy*, bool, BoolObjectClosure*, OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*) (1 samples, 0.81%)</title><rect x="1142.0" y="659.0" width="9.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1145.0" y="670.0"></text>
</g>
<g>
<title>ReferenceProcessor::pp2_work(DiscoveredList&amp;, BoolObjectClosure*, OopClosure*) (1 samples, 0.81%)</title><rect x="1142.0" y="643.0" width="9.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1145.0" y="654.0"></text>
</g>
<g>
<title>PSIsAliveClosure::do_object_b(oopDesc*) (1 samples, 0.81%)</title><rect x="1142.0" y="627.0" width="9.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1145.0" y="638.0"></text>
</g>
<g>
<title>WatcherThread::run() (4 samples, 3.25%)</title><rect x="1151.6" y="803.0" width="38.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1154.6" y="814.0">Wat..</text>
</g>
<g>
<title>WatcherThread::sleep() const (4 samples, 3.25%)</title><rect x="1151.6" y="787.0" width="38.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1154.6" y="798.0">Wat..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (4 samples, 3.25%)</title><rect x="1151.6" y="771.0" width="38.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1154.6" y="782.0">Mon..</text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (4 samples, 3.25%)</title><rect x="1151.6" y="755.0" width="38.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1154.6" y="766.0">Mon..</text>
</g>
<g>
<title>os::PlatformEvent::park(long) (4 samples, 3.25%)</title><rect x="1151.6" y="739.0" width="38.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1154.6" y="750.0">os:..</text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 3.25%)</title><rect x="1151.6" y="723.0" width="38.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1154.6" y="734.0">__p..</text>
</g>
</g>
</svg>
