<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1045"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1045"> </text>
<g id="frames">
<g>
<title>all (1,498 samples, 100.00%)</title><rect x="10.0" y="1011.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="1022.0">all</text>
</g>
<g>
<title>[deoptimization] (63 samples, 4.21%)</title><rect x="10.0" y="995.0" width="49.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="1006.0">[deop..</text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info(JavaThread*) (45 samples, 3.00%)</title><rect x="10.8" y="979.0" width="35.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.8" y="990.0">Deo..</text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info_helper(JavaThread*) (44 samples, 2.94%)</title><rect x="10.8" y="963.0" width="34.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.8" y="974.0">De..</text>
</g>
<g>
<title>Bytecode_member_ref::result_type() const (1 samples, 0.07%)</title><rect x="13.2" y="947.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.2" y="958.0"></text>
</g>
<g>
<title>SignatureIterator::iterate() (1 samples, 0.07%)</title><rect x="13.2" y="931.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="16.2" y="942.0"></text>
</g>
<g>
<title>SignatureIterator::parse_type() (1 samples, 0.07%)</title><rect x="13.2" y="915.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="16.2" y="926.0"></text>
</g>
<g>
<title>Deoptimization::UnrollBlock::UnrollBlock(int, int, int, int, long*, unsigned char**, BasicType) (2 samples, 0.13%)</title><rect x="13.9" y="947.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="16.9" y="958.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.07%)</title><rect x="14.7" y="931.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="17.7" y="942.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.07%)</title><rect x="14.7" y="915.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="17.7" y="926.0"></text>
</g>
<g>
<title>malloc_zone_malloc (1 samples, 0.07%)</title><rect x="14.7" y="899.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="17.7" y="910.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (1 samples, 0.07%)</title><rect x="14.7" y="883.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="17.7" y="894.0"></text>
</g>
<g>
<title>small_malloc_should_clear (1 samples, 0.07%)</title><rect x="14.7" y="867.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="17.7" y="878.0"></text>
</g>
<g>
<title>small_malloc_from_free_list (1 samples, 0.07%)</title><rect x="14.7" y="851.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="17.7" y="862.0"></text>
</g>
<g>
<title>Deoptimization::UnrollBlock::size_of_frames() const (1 samples, 0.07%)</title><rect x="15.5" y="947.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="18.5" y="958.0"></text>
</g>
<g>
<title>Deoptimization::create_vframeArray(JavaThread*, frame, RegisterMap*, GrowableArray&lt;compiledVFrame*&gt;*, bool) (26 samples, 1.74%)</title><rect x="16.3" y="947.0" width="20.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="19.3" y="958.0"></text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (7 samples, 0.47%)</title><rect x="16.3" y="931.0" width="5.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="19.3" y="942.0"></text>
</g>
<g>
<title>StringEventLog::logv(Thread*, char const*, __va_list_tag*) (7 samples, 0.47%)</title><rect x="16.3" y="915.0" width="5.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="19.3" y="926.0"></text>
</g>
<g>
<title>jio_vsnprintf (4 samples, 0.27%)</title><rect x="16.3" y="899.0" width="3.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="19.3" y="910.0"></text>
</g>
<g>
<title>vsnprintf (4 samples, 0.27%)</title><rect x="16.3" y="883.0" width="3.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="19.3" y="894.0"></text>
</g>
<g>
<title>__v2printf (1 samples, 0.07%)</title><rect x="16.3" y="867.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="19.3" y="878.0"></text>
</g>
<g>
<title>_vsnprintf (3 samples, 0.20%)</title><rect x="17.1" y="867.0" width="2.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="20.1" y="878.0"></text>
</g>
<g>
<title>__v2printf (3 samples, 0.20%)</title><rect x="17.1" y="851.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="20.1" y="862.0"></text>
</g>
<g>
<title>__ultoa (1 samples, 0.07%)</title><rect x="17.1" y="835.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="20.1" y="846.0"></text>
</g>
<g>
<title>__vfprintf (2 samples, 0.13%)</title><rect x="17.9" y="835.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="20.9" y="846.0"></text>
</g>
<g>
<title>__sfvwrite (1 samples, 0.07%)</title><rect x="18.7" y="819.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="21.7" y="830.0"></text>
</g>
<g>
<title>os::elapsedTime() (1 samples, 0.07%)</title><rect x="19.5" y="899.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="22.5" y="910.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.07%)</title><rect x="19.5" y="883.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="22.5" y="894.0"></text>
</g>
<g>
<title>pthread_getspecific (1 samples, 0.07%)</title><rect x="20.2" y="899.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="23.2" y="910.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 0.07%)</title><rect x="21.0" y="899.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="24.0" y="910.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.13%)</title><rect x="21.8" y="931.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="24.8" y="942.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (2 samples, 0.13%)</title><rect x="21.8" y="915.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="24.8" y="926.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (2 samples, 0.13%)</title><rect x="21.8" y="899.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="24.8" y="910.0"></text>
</g>
<g>
<title>OopMapStream::OopMapStream(OopMap*, int) (1 samples, 0.07%)</title><rect x="21.8" y="883.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="24.8" y="894.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (1 samples, 0.07%)</title><rect x="22.6" y="883.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="25.6" y="894.0"></text>
</g>
<g>
<title>OopMapValue::read_from(CompressedReadStream*) (1 samples, 0.07%)</title><rect x="22.6" y="867.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="25.6" y="878.0"></text>
</g>
<g>
<title>CompressedReadStream::read_int_mb(int) (1 samples, 0.07%)</title><rect x="22.6" y="851.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="25.6" y="862.0"></text>
</g>
<g>
<title>vframeArray::allocate(JavaThread*, int, GrowableArray&lt;compiledVFrame*&gt;*, RegisterMap*, frame, frame, frame, bool) (17 samples, 1.13%)</title><rect x="23.4" y="931.0" width="13.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="26.4" y="942.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.07%)</title><rect x="23.4" y="915.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="26.4" y="926.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.07%)</title><rect x="23.4" y="899.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="26.4" y="910.0"></text>
</g>
<g>
<title>malloc_zone_malloc (1 samples, 0.07%)</title><rect x="23.4" y="883.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="26.4" y="894.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (1 samples, 0.07%)</title><rect x="23.4" y="867.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="26.4" y="878.0"></text>
</g>
<g>
<title>vframeArray::fill_in(JavaThread*, int, GrowableArray&lt;compiledVFrame*&gt;*, RegisterMap const*, bool) (16 samples, 1.07%)</title><rect x="24.2" y="915.0" width="12.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="27.2" y="926.0"></text>
</g>
<g>
<title>vframeArrayElement::fill_in(compiledVFrame*, bool) (12 samples, 0.80%)</title><rect x="27.3" y="899.0" width="9.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="30.3" y="910.0"></text>
</g>
<g>
<title>compiledVFrame::locals() const (8 samples, 0.53%)</title><rect x="28.9" y="883.0" width="6.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="31.9" y="894.0"></text>
</g>
<g>
<title>Arena::Amalloc_4(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="28.9" y="867.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="31.9" y="878.0"></text>
</g>
<g>
<title>LocationValue::is_location() const (2 samples, 0.13%)</title><rect x="29.7" y="867.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="32.7" y="878.0"></text>
</g>
<g>
<title>ScopeDesc::decode_scope_values(int) (2 samples, 0.13%)</title><rect x="31.3" y="867.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="34.3" y="878.0"></text>
</g>
<g>
<title>GrowableArray&lt;ScopeValue*&gt;::GrowableArray(int, bool, MemoryType) (1 samples, 0.07%)</title><rect x="31.3" y="851.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="34.3" y="862.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.07%)</title><rect x="31.3" y="835.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="34.3" y="846.0"></text>
</g>
<g>
<title>ScopeValue::read_from(DebugInfoReadStream*) (1 samples, 0.07%)</title><rect x="32.1" y="851.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="35.1" y="862.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="32.1" y="835.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="35.1" y="846.0"></text>
</g>
<g>
<title>StackValue::create_stack_value(frame const*, RegisterMap const*, ScopeValue*) (1 samples, 0.07%)</title><rect x="32.8" y="867.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="35.8" y="878.0"></text>
</g>
<g>
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="32.8" y="851.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="35.8" y="862.0"></text>
</g>
<g>
<title>StackValueCollection::StackValueCollection(int) (2 samples, 0.13%)</title><rect x="33.6" y="867.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="36.6" y="878.0"></text>
</g>
<g>
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="33.6" y="851.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="36.6" y="862.0"></text>
</g>
<g>
<title>GrowableArray&lt;StackValue*&gt;::GrowableArray(int, bool, MemoryType) (1 samples, 0.07%)</title><rect x="34.4" y="851.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="37.4" y="862.0"></text>
</g>
<g>
<title>compiledVFrame::monitors() const (1 samples, 0.07%)</title><rect x="35.2" y="883.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="38.2" y="894.0"></text>
</g>
<g>
<title>GrowableArray&lt;MonitorInfo*&gt;::GrowableArray(int, bool, MemoryType) (1 samples, 0.07%)</title><rect x="35.2" y="867.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="38.2" y="878.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.07%)</title><rect x="35.2" y="851.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="38.2" y="862.0"></text>
</g>
<g>
<title>pthread_getspecific (1 samples, 0.07%)</title><rect x="36.0" y="883.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="39.0" y="894.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.07%)</title><rect x="36.8" y="947.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="39.8" y="958.0"></text>
</g>
<g>
<title>compiledVFrame::sender() const (1 samples, 0.07%)</title><rect x="37.6" y="947.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="40.6" y="958.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.07%)</title><rect x="37.6" y="931.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="40.6" y="942.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.07%)</title><rect x="37.6" y="915.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="40.6" y="926.0"></text>
</g>
<g>
<title>ScopeDesc::stream_at(int) const (1 samples, 0.07%)</title><rect x="37.6" y="899.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="40.6" y="910.0"></text>
</g>
<g>
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="37.6" y="883.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="40.6" y="894.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (7 samples, 0.47%)</title><rect x="38.4" y="947.0" width="5.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="41.4" y="958.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (7 samples, 0.47%)</title><rect x="38.4" y="931.0" width="5.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="41.4" y="942.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (7 samples, 0.47%)</title><rect x="38.4" y="915.0" width="5.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="41.4" y="926.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (4 samples, 0.27%)</title><rect x="38.4" y="899.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="41.4" y="910.0"></text>
</g>
<g>
<title>CompressedReadStream::read_int() (1 samples, 0.07%)</title><rect x="38.4" y="883.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="41.4" y="894.0"></text>
</g>
<g>
<title>OopMapValue::read_from(CompressedReadStream*) (3 samples, 0.20%)</title><rect x="39.1" y="883.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="42.1" y="894.0"></text>
</g>
<g>
<title>CompressedReadStream::read_int_mb(int) (2 samples, 0.13%)</title><rect x="39.9" y="867.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="42.9" y="878.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.07%)</title><rect x="41.5" y="899.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="44.5" y="910.0"></text>
</g>
<g>
<title>frame::oopmapreg_to_location(VMRegImpl*, RegisterMap const*) const (2 samples, 0.13%)</title><rect x="42.3" y="899.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="45.3" y="910.0"></text>
</g>
<g>
<title>pthread_getspecific (1 samples, 0.07%)</title><rect x="43.9" y="947.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="46.9" y="958.0"></text>
</g>
<g>
<title>vframeArrayElement::on_stack_size(int, int, bool, int) const (1 samples, 0.07%)</title><rect x="44.7" y="947.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="47.7" y="958.0"></text>
</g>
<g>
<title>TemplateInterpreter::deopt_entry(TosState, int) (1 samples, 0.07%)</title><rect x="45.4" y="963.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="48.4" y="974.0"></text>
</g>
<g>
<title>Deoptimization::unpack_frames(JavaThread*, int) (17 samples, 1.13%)</title><rect x="46.2" y="979.0" width="13.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="49.2" y="990.0"></text>
</g>
<g>
<title>Bytecode_invoke::Bytecode_invoke(methodHandle, int) (1 samples, 0.07%)</title><rect x="46.2" y="963.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="49.2" y="974.0"></text>
</g>
<g>
<title>Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*) (1 samples, 0.07%)</title><rect x="47.0" y="963.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="50.0" y="974.0"></text>
</g>
<g>
<title>Deoptimization::UnrollBlock::~UnrollBlock() (1 samples, 0.07%)</title><rect x="47.0" y="947.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="50.0" y="958.0"></text>
</g>
<g>
<title>free (1 samples, 0.07%)</title><rect x="47.0" y="931.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="50.0" y="942.0"></text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (5 samples, 0.33%)</title><rect x="47.8" y="963.0" width="3.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="50.8" y="974.0"></text>
</g>
<g>
<title>StringEventLog::logv(Thread*, char const*, __va_list_tag*) (5 samples, 0.33%)</title><rect x="47.8" y="947.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="50.8" y="958.0"></text>
</g>
<g>
<title>jio_vsnprintf (4 samples, 0.27%)</title><rect x="47.8" y="931.0" width="3.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="50.8" y="942.0"></text>
</g>
<g>
<title>vsnprintf (4 samples, 0.27%)</title><rect x="47.8" y="915.0" width="3.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="50.8" y="926.0"></text>
</g>
<g>
<title>_vsnprintf (4 samples, 0.27%)</title><rect x="47.8" y="899.0" width="3.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="50.8" y="910.0"></text>
</g>
<g>
<title>__v2printf (3 samples, 0.20%)</title><rect x="48.6" y="883.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="51.6" y="894.0"></text>
</g>
<g>
<title>__vfprintf (3 samples, 0.20%)</title><rect x="48.6" y="867.0" width="2.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="51.6" y="878.0"></text>
</g>
<g>
<title>__sfvwrite (1 samples, 0.07%)</title><rect x="50.2" y="851.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="53.2" y="862.0"></text>
</g>
<g>
<title>os::elapsedTime() (1 samples, 0.07%)</title><rect x="51.0" y="931.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="54.0" y="942.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.07%)</title><rect x="51.0" y="915.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="54.0" y="926.0"></text>
</g>
<g>
<title>free (1 samples, 0.07%)</title><rect x="51.7" y="963.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="54.7" y="974.0"></text>
</g>
<g>
<title>vframeArray::unpack_to_stack(frame&amp;, int, int) (9 samples, 0.60%)</title><rect x="52.5" y="963.0" width="7.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="55.5" y="974.0"></text>
</g>
<g>
<title>vframeArrayElement::unpack_on_stack(int, int, int, frame*, bool, bool, int) (9 samples, 0.60%)</title><rect x="52.5" y="947.0" width="7.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="55.5" y="958.0"></text>
</g>
<g>
<title>CodeBlob::is_nmethod() const (1 samples, 0.07%)</title><rect x="53.3" y="931.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="56.3" y="942.0"></text>
</g>
<g>
<title>MethodData::bci_to_dp(int) (4 samples, 0.27%)</title><rect x="54.1" y="931.0" width="3.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="57.1" y="942.0"></text>
</g>
<g>
<title>DataLayout::data_in() (2 samples, 0.13%)</title><rect x="54.1" y="915.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="57.1" y="926.0"></text>
</g>
<g>
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.13%)</title><rect x="54.1" y="899.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="57.1" y="910.0"></text>
</g>
<g>
<title>MethodData::data_before(int) (2 samples, 0.13%)</title><rect x="55.7" y="915.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="58.7" y="926.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.07%)</title><rect x="57.3" y="931.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="60.3" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::raw_exception_handler_for_return_address(JavaThread*, unsigned char*) (1 samples, 0.07%)</title><rect x="58.1" y="931.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="61.1" y="942.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.07%)</title><rect x="58.1" y="915.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="61.1" y="926.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.07%)</title><rect x="58.1" y="899.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="61.1" y="910.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.07%)</title><rect x="58.1" y="883.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="61.1" y="894.0"></text>
</g>
<g>
<title>frame::patch_pc(Thread*, unsigned char*) (1 samples, 0.07%)</title><rect x="58.8" y="931.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="61.8" y="942.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.07%)</title><rect x="58.8" y="915.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="61.8" y="926.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.13%)</title><rect x="59.6" y="995.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="62.6" y="1006.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (2 samples, 0.13%)</title><rect x="59.6" y="979.0" width="1.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="62.6" y="990.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,117 samples, 74.57%)</title><rect x="61.2" y="995.0" width="879.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.2" y="1006.0">java/lang/Thread.run</text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultThreadFactory$DefaultRunnableDecorator.run (1,116 samples, 74.50%)</title><rect x="61.2" y="979.0" width="879.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="64.2" y="990.0">io/netty/util/concurrent/DefaultThreadFactory$DefaultRunnableDecorator.run</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor$5.run (1,116 samples, 74.50%)</title><rect x="61.2" y="963.0" width="879.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.2" y="974.0">io/netty/util/concurrent/SingleThreadEventExecutor$5.run</text>
</g>
<g>
<title>io/netty/channel/DefaultEventLoop.run (185 samples, 12.35%)</title><rect x="61.2" y="947.0" width="145.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.2" y="958.0">io/netty/channel/D..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$2.run (1 samples, 0.07%)</title><rect x="61.2" y="931.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="64.2" y="942.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$100 (1 samples, 0.07%)</title><rect x="61.2" y="915.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.2" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelUnregistered (1 samples, 0.07%)</title><rect x="61.2" y="899.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.2" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelUnregistered (1 samples, 0.07%)</title><rect x="61.2" y="883.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.2" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelUnregistered (1 samples, 0.07%)</title><rect x="61.2" y="867.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.2" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelUnregistered (1 samples, 0.07%)</title><rect x="61.2" y="851.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.2" y="862.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (1 samples, 0.07%)</title><rect x="61.2" y="835.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.2" y="846.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (1 samples, 0.07%)</title><rect x="61.2" y="819.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.2" y="830.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.offerTask (1 samples, 0.07%)</title><rect x="61.2" y="803.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.2" y="814.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscChunkedArrayQueue.offer (1 samples, 0.07%)</title><rect x="61.2" y="787.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.2" y="798.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscChunkedArrayQueue.offerSlowPath (1 samples, 0.07%)</title><rect x="61.2" y="771.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.2" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$3.run (1 samples, 0.07%)</title><rect x="62.0" y="931.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.0" y="942.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$200 (1 samples, 0.07%)</title><rect x="62.0" y="915.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.0" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (1 samples, 0.07%)</title><rect x="62.0" y="899.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.0" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelActive (1 samples, 0.07%)</title><rect x="62.0" y="883.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.0" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelActive (1 samples, 0.07%)</title><rect x="62.0" y="867.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.0" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (1 samples, 0.07%)</title><rect x="62.0" y="851.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="65.0" y="862.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (1 samples, 0.07%)</title><rect x="62.0" y="835.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.0" y="846.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (1 samples, 0.07%)</title><rect x="62.0" y="819.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.0" y="830.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (1 samples, 0.07%)</title><rect x="62.0" y="803.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (1 samples, 0.07%)</title><rect x="62.0" y="787.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.07%)</title><rect x="62.0" y="771.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.0" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$7.run (119 samples, 7.94%)</title><rect x="62.8" y="931.0" width="93.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.8" y="942.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$600 (119 samples, 7.94%)</title><rect x="62.8" y="915.0" width="93.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.8" y="926.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (119 samples, 7.94%)</title><rect x="62.8" y="899.0" width="93.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.8" y="910.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (118 samples, 7.88%)</title><rect x="62.8" y="883.0" width="92.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.8" y="894.0">io/netty/ch..</text>
</g>
<g>
<title>com/tinysakura/xhaka/server/handler/XhakaHttpServletHandler.channelRead0 (118 samples, 7.88%)</title><rect x="62.8" y="867.0" width="92.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.8" y="878.0">com/tinysak..</text>
</g>
<g>
<title>com/tinysakura/xhaka/server/handler/XhakaHttpServletHandler.channelRead0 (118 samples, 7.88%)</title><rect x="62.8" y="851.0" width="92.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.8" y="862.0">com/tinysak..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/filter/FilterChainImpl.doFilter (102 samples, 6.81%)</title><rect x="62.8" y="835.0" width="80.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.8" y="846.0">com/tinys..</text>
</g>
<g>
<title>com/tinysakura/xhaka/filter/TestFilter.doFilter (102 samples, 6.81%)</title><rect x="62.8" y="819.0" width="80.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.8" y="830.0">com/tinys..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (11 samples, 0.73%)</title><rect x="62.8" y="803.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="65.8" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (11 samples, 0.73%)</title><rect x="62.8" y="787.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.8" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (11 samples, 0.73%)</title><rect x="62.8" y="771.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.8" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (11 samples, 0.73%)</title><rect x="62.8" y="755.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.8" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (11 samples, 0.73%)</title><rect x="62.8" y="739.0" width="8.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.8" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (11 samples, 0.73%)</title><rect x="62.8" y="723.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="65.8" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (11 samples, 0.73%)</title><rect x="62.8" y="707.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.8" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (11 samples, 0.73%)</title><rect x="62.8" y="691.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.8" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (11 samples, 0.73%)</title><rect x="62.8" y="675.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.8" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.07%)</title><rect x="62.8" y="659.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.8" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.07%)</title><rect x="62.8" y="643.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="65.8" y="654.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.07%)</title><rect x="62.8" y="627.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.8" y="638.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.07%)</title><rect x="62.8" y="611.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="65.8" y="622.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.07%)</title><rect x="62.8" y="595.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="65.8" y="606.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.07%)</title><rect x="62.8" y="579.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="65.8" y="590.0"></text>
</g>
<g>
<title>java/lang/Object.toString (1 samples, 0.07%)</title><rect x="62.8" y="563.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="62.8" y="547.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.8" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="62.8" y="531.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.8" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.07%)</title><rect x="62.8" y="515.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.8" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (8 samples, 0.53%)</title><rect x="63.6" y="659.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.6" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (4 samples, 0.27%)</title><rect x="63.6" y="643.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="66.6" y="654.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (4 samples, 0.27%)</title><rect x="63.6" y="627.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.6" y="638.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (4 samples, 0.27%)</title><rect x="63.6" y="611.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.6" y="622.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (4 samples, 0.27%)</title><rect x="63.6" y="595.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.6" y="606.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (4 samples, 0.27%)</title><rect x="63.6" y="579.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.6" y="590.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (4 samples, 0.27%)</title><rect x="63.6" y="563.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.6" y="574.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (3 samples, 0.20%)</title><rect x="64.4" y="547.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="67.4" y="558.0"></text>
</g>
<g>
<title>writeBytes (2 samples, 0.13%)</title><rect x="65.1" y="531.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="68.1" y="542.0"></text>
</g>
<g>
<title>write (2 samples, 0.13%)</title><rect x="65.1" y="515.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="68.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.27%)</title><rect x="66.7" y="643.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (4 samples, 0.27%)</title><rect x="66.7" y="627.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.27%)</title><rect x="66.7" y="611.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.27%)</title><rect x="66.7" y="595.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.27%)</title><rect x="66.7" y="579.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.27%)</title><rect x="66.7" y="563.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.7" y="574.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (4 samples, 0.27%)</title><rect x="66.7" y="547.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.7" y="558.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.27%)</title><rect x="66.7" y="531.0" width="3.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="69.7" y="542.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.27%)</title><rect x="66.7" y="515.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="69.7" y="526.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.20%)</title><rect x="66.7" y="499.0" width="2.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="69.7" y="510.0"></text>
</g>
<g>
<title>_pthread_cond_wait (1 samples, 0.07%)</title><rect x="69.1" y="499.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="72.1" y="510.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.07%)</title><rect x="69.1" y="483.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="72.1" y="494.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.07%)</title><rect x="69.1" y="467.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="72.1" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.13%)</title><rect x="69.9" y="659.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.9" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.07%)</title><rect x="69.9" y="643.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.9" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.07%)</title><rect x="69.9" y="627.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="72.9" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (1 samples, 0.07%)</title><rect x="69.9" y="611.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.07%)</title><rect x="69.9" y="595.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="69.9" y="579.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.9" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="69.9" y="563.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="72.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="69.9" y="547.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.9" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (1 samples, 0.07%)</title><rect x="70.7" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.07%)</title><rect x="70.7" y="627.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.07%)</title><rect x="70.7" y="611.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.07%)</title><rect x="70.7" y="595.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (1 samples, 0.07%)</title><rect x="70.7" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.7" y="590.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/filter/FilterChainImpl.doFilter (88 samples, 5.87%)</title><rect x="71.4" y="803.0" width="69.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.4" y="814.0">com/tin..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/filter/XhakaServlet.service (88 samples, 5.87%)</title><rect x="71.4" y="787.0" width="69.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.4" y="798.0">com/tin..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (10 samples, 0.67%)</title><rect x="71.4" y="771.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="74.4" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (10 samples, 0.67%)</title><rect x="71.4" y="755.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.4" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (10 samples, 0.67%)</title><rect x="71.4" y="739.0" width="7.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.4" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (10 samples, 0.67%)</title><rect x="71.4" y="723.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.4" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (10 samples, 0.67%)</title><rect x="71.4" y="707.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="74.4" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (10 samples, 0.67%)</title><rect x="71.4" y="691.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.4" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (10 samples, 0.67%)</title><rect x="71.4" y="675.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.4" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (9 samples, 0.60%)</title><rect x="71.4" y="659.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.4" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (9 samples, 0.60%)</title><rect x="71.4" y="643.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.4" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (3 samples, 0.20%)</title><rect x="71.4" y="627.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="74.4" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (2 samples, 0.13%)</title><rect x="71.4" y="611.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.4" y="622.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.13%)</title><rect x="71.4" y="595.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.4" y="606.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.13%)</title><rect x="71.4" y="579.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="74.4" y="590.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (2 samples, 0.13%)</title><rect x="71.4" y="563.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.4" y="574.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (2 samples, 0.13%)</title><rect x="71.4" y="547.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.4" y="558.0"></text>
</g>
<g>
<title>java/lang/Long.toString (2 samples, 0.13%)</title><rect x="71.4" y="531.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.4" y="542.0"></text>
</g>
<g>
<title>java/lang/Long.toString (2 samples, 0.13%)</title><rect x="71.4" y="515.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.4" y="526.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1 samples, 0.07%)</title><rect x="72.2" y="499.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="75.2" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (1 samples, 0.07%)</title><rect x="73.0" y="611.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.0" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (1 samples, 0.07%)</title><rect x="73.0" y="595.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.0" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="73.0" y="579.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.0" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.07%)</title><rect x="73.0" y="563.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="76.0" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.07%)</title><rect x="73.0" y="547.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.0" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (4 samples, 0.27%)</title><rect x="73.8" y="627.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.8" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (2 samples, 0.13%)</title><rect x="73.8" y="611.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.8" y="622.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (2 samples, 0.13%)</title><rect x="73.8" y="595.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.8" y="606.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (2 samples, 0.13%)</title><rect x="73.8" y="579.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.8" y="590.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (2 samples, 0.13%)</title><rect x="73.8" y="563.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="76.8" y="574.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (2 samples, 0.13%)</title><rect x="73.8" y="547.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="76.8" y="558.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (2 samples, 0.13%)</title><rect x="73.8" y="531.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.8" y="542.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (2 samples, 0.13%)</title><rect x="73.8" y="515.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="76.8" y="526.0"></text>
</g>
<g>
<title>jni_GetIntField (1 samples, 0.07%)</title><rect x="73.8" y="499.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="76.8" y="510.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.07%)</title><rect x="74.6" y="499.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="77.6" y="510.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.07%)</title><rect x="74.6" y="483.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="77.6" y="494.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.07%)</title><rect x="74.6" y="467.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="77.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.13%)</title><rect x="75.4" y="611.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (2 samples, 0.13%)</title><rect x="75.4" y="595.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.13%)</title><rect x="75.4" y="579.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.07%)</title><rect x="75.4" y="563.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="75.4" y="547.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="75.4" y="531.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.4" y="542.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="75.4" y="515.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.4" y="526.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.07%)</title><rect x="75.4" y="499.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="78.4" y="510.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="75.4" y="483.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="78.4" y="494.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="75.4" y="467.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="78.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.07%)</title><rect x="76.2" y="563.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.2" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.13%)</title><rect x="77.0" y="627.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.0" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.07%)</title><rect x="77.0" y="611.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.0" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.07%)</title><rect x="77.0" y="595.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.0" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (1 samples, 0.07%)</title><rect x="77.0" y="579.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.07%)</title><rect x="77.0" y="563.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="80.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="77.0" y="547.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="77.0" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="77.0" y="515.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.0" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (1 samples, 0.07%)</title><rect x="77.7" y="611.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.07%)</title><rect x="77.7" y="595.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.07%)</title><rect x="77.7" y="579.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.07%)</title><rect x="77.7" y="563.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (1 samples, 0.07%)</title><rect x="77.7" y="547.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.7" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="78.5" y="659.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.5" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.07%)</title><rect x="78.5" y="643.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="81.5" y="654.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="78.5" y="627.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="81.5" y="638.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/context/client/GatewaySlaveChannelPool.getSlaveChannelByLoadBalanceStrategy (2 samples, 0.13%)</title><rect x="79.3" y="771.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.3" y="782.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/remote/nlb/impl/LoadBalanceStrategyRandom.selectChannel (1 samples, 0.07%)</title><rect x="80.1" y="755.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.1" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.07%)</title><rect x="80.1" y="739.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.1" y="750.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="80.1" y="723.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="83.1" y="734.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.&lt;init&gt; (1 samples, 0.07%)</title><rect x="80.9" y="771.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (1 samples, 0.07%)</title><rect x="80.9" y="755.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.07%)</title><rect x="80.9" y="739.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (1 samples, 0.07%)</title><rect x="80.9" y="723.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.9" y="734.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.get (42 samples, 2.80%)</title><rect x="81.7" y="771.0" width="33.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.7" y="782.0">co..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (8 samples, 0.53%)</title><rect x="82.5" y="755.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.5" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (8 samples, 0.53%)</title><rect x="82.5" y="739.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.5" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (8 samples, 0.53%)</title><rect x="82.5" y="723.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.5" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (8 samples, 0.53%)</title><rect x="82.5" y="707.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="85.5" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (8 samples, 0.53%)</title><rect x="82.5" y="691.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="85.5" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (8 samples, 0.53%)</title><rect x="82.5" y="675.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.5" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (8 samples, 0.53%)</title><rect x="82.5" y="659.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.5" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (7 samples, 0.47%)</title><rect x="82.5" y="643.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="85.5" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (7 samples, 0.47%)</title><rect x="82.5" y="627.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="85.5" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.07%)</title><rect x="82.5" y="611.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="85.5" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.07%)</title><rect x="82.5" y="595.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.5" y="606.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.07%)</title><rect x="82.5" y="579.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.5" y="590.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.07%)</title><rect x="82.5" y="563.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="82.5" y="547.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.5" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="82.5" y="531.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.5" y="542.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="82.5" y="515.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="85.5" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (6 samples, 0.40%)</title><rect x="83.3" y="611.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.3" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.07%)</title><rect x="83.3" y="595.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.3" y="606.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.07%)</title><rect x="83.3" y="579.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.3" y="590.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.07%)</title><rect x="83.3" y="563.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.3" y="574.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.07%)</title><rect x="83.3" y="547.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.3" y="558.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.07%)</title><rect x="83.3" y="531.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.3" y="542.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.07%)</title><rect x="83.3" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="86.3" y="526.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.07%)</title><rect x="83.3" y="499.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="86.3" y="510.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.07%)</title><rect x="83.3" y="483.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="86.3" y="494.0"></text>
</g>
<g>
<title>write (1 samples, 0.07%)</title><rect x="83.3" y="467.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="86.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.27%)</title><rect x="84.0" y="595.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (4 samples, 0.27%)</title><rect x="84.0" y="579.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.27%)</title><rect x="84.0" y="563.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.27%)</title><rect x="84.0" y="547.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.27%)</title><rect x="84.0" y="531.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.27%)</title><rect x="84.0" y="515.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="87.0" y="526.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (4 samples, 0.27%)</title><rect x="84.0" y="499.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.0" y="510.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.27%)</title><rect x="84.0" y="483.0" width="3.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="87.0" y="494.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.27%)</title><rect x="84.0" y="467.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="87.0" y="478.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 0.27%)</title><rect x="84.0" y="451.0" width="3.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="87.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="87.2" y="595.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="87.2" y="579.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="90.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="87.2" y="563.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="87.2" y="547.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.2" y="558.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="87.2" y="531.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.2" y="542.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.07%)</title><rect x="87.2" y="515.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="90.2" y="526.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.07%)</title><rect x="87.2" y="499.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="90.2" y="510.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="87.2" y="483.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="90.2" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.07%)</title><rect x="88.0" y="643.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="91.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (33 samples, 2.20%)</title><rect x="88.8" y="755.0" width="26.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.8" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (33 samples, 2.20%)</title><rect x="88.8" y="739.0" width="26.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="91.8" y="750.0">j..</text>
</g>
<g>
<title>sun/misc/Unsafe.park (33 samples, 2.20%)</title><rect x="88.8" y="723.0" width="26.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.8" y="734.0">s..</text>
</g>
<g>
<title>Unsafe_Park (33 samples, 2.20%)</title><rect x="88.8" y="707.0" width="26.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="91.8" y="718.0">U..</text>
</g>
<g>
<title>Parker::park(bool, long) (33 samples, 2.20%)</title><rect x="88.8" y="691.0" width="26.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="91.8" y="702.0">P..</text>
</g>
<g>
<title>__psynch_cvwait (30 samples, 2.00%)</title><rect x="88.8" y="675.0" width="23.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="91.8" y="686.0">_..</text>
</g>
<g>
<title>_pthread_cond_wait (3 samples, 0.20%)</title><rect x="112.4" y="675.0" width="2.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="115.4" y="686.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (3 samples, 0.20%)</title><rect x="112.4" y="659.0" width="2.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="115.4" y="670.0"></text>
</g>
<g>
<title>__psynch_mutexwait (3 samples, 0.20%)</title><rect x="112.4" y="643.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="115.4" y="654.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/remote/route/ServerDispatcher.getDispatcherServerName (4 samples, 0.27%)</title><rect x="114.8" y="771.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.8" y="782.0"></text>
</g>
<g>
<title>org/springframework/util/AntPathMatcher.extractPathWithinPattern (3 samples, 0.20%)</title><rect x="114.8" y="755.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.8" y="766.0"></text>
</g>
<g>
<title>org/springframework/util/StringUtils.tokenizeToStringArray (3 samples, 0.20%)</title><rect x="114.8" y="739.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.8" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="114.8" y="723.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.8" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (1 samples, 0.07%)</title><rect x="114.8" y="707.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="117.8" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (1 samples, 0.07%)</title><rect x="114.8" y="691.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="117.8" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="114.8" y="675.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.8" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.07%)</title><rect x="114.8" y="659.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="117.8" y="670.0"></text>
</g>
<g>
<title>java/util/StringTokenizer.hasMoreTokens (1 samples, 0.07%)</title><rect x="115.6" y="723.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="118.6" y="734.0"></text>
</g>
<g>
<title>java/util/StringTokenizer.skipDelimiters (1 samples, 0.07%)</title><rect x="115.6" y="707.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="118.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="115.6" y="691.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.6" y="702.0"></text>
</g>
<g>
<title>java/util/StringTokenizer.nextToken (1 samples, 0.07%)</title><rect x="116.3" y="723.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="119.3" y="734.0"></text>
</g>
<g>
<title>org/springframework/util/AntPathMatcher.match (1 samples, 0.07%)</title><rect x="117.1" y="755.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.1" y="766.0"></text>
</g>
<g>
<title>org/springframework/util/AntPathMatcher.doMatch (1 samples, 0.07%)</title><rect x="117.1" y="739.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="120.1" y="750.0"></text>
</g>
<g>
<title>org/springframework/util/AntPathMatcher.tokenizePath (1 samples, 0.07%)</title><rect x="117.1" y="723.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="120.1" y="734.0"></text>
</g>
<g>
<title>org/springframework/util/StringUtils.tokenizeToStringArray (1 samples, 0.07%)</title><rect x="117.1" y="707.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.1" y="718.0"></text>
</g>
<g>
<title>org/springframework/util/StringUtils.toStringArray (1 samples, 0.07%)</title><rect x="117.1" y="691.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="120.1" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.07%)</title><rect x="117.1" y="675.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="120.1" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.07%)</title><rect x="117.1" y="659.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="120.1" y="670.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.07%)</title><rect x="117.1" y="643.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="120.1" y="654.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (1 samples, 0.07%)</title><rect x="117.1" y="627.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="120.1" y="638.0"></text>
</g>
<g>
<title>JVM_NewArray (1 samples, 0.07%)</title><rect x="117.1" y="611.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="120.1" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.07%)</title><rect x="117.1" y="595.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="120.1" y="606.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/request/XhakaHttpServletRequest.getHeader (1 samples, 0.07%)</title><rect x="117.9" y="771.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.9" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.get (1 samples, 0.07%)</title><rect x="117.9" y="755.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.9" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.get (1 samples, 0.07%)</title><rect x="117.9" y="739.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="120.9" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils.getAsString (1 samples, 0.07%)</title><rect x="117.9" y="723.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="120.9" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.get (1 samples, 0.07%)</title><rect x="117.9" y="707.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="120.9" y="718.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.equals (1 samples, 0.07%)</title><rect x="117.9" y="691.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="120.9" y="702.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.equals (1 samples, 0.07%)</title><rect x="117.9" y="675.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="120.9" y="686.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString.contentEqualsIgnoreCase (1 samples, 0.07%)</title><rect x="117.9" y="659.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="120.9" y="670.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaHttpServletResponse.replaceOriginResponse (13 samples, 0.87%)</title><rect x="118.7" y="771.0" width="10.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.7" y="782.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaHttpServletResponse.addHeader (1 samples, 0.07%)</title><rect x="118.7" y="755.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.7" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.add (1 samples, 0.07%)</title><rect x="118.7" y="739.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.7" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.addObject (1 samples, 0.07%)</title><rect x="118.7" y="723.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.7" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add (1 samples, 0.07%)</title><rect x="118.7" y="707.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="121.7" y="718.0"></text>
</g>
<g>
<title>io/netty/util/internal/ObjectUtil.checkNotNull (1 samples, 0.07%)</title><rect x="118.7" y="691.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="121.7" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils$StringIterator.next (1 samples, 0.07%)</title><rect x="119.5" y="755.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="122.5" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils$StringIterator.next (1 samples, 0.07%)</title><rect x="119.5" y="739.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="122.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.toString (1 samples, 0.07%)</title><rect x="119.5" y="723.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.5" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.release (1 samples, 0.07%)</title><rect x="120.3" y="755.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="123.3" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (1 samples, 0.07%)</title><rect x="120.3" y="739.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.3" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (1 samples, 0.07%)</title><rect x="120.3" y="723.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="123.3" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.recycle (1 samples, 0.07%)</title><rect x="120.3" y="707.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.3" y="718.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$DefaultHandle.recycle (1 samples, 0.07%)</title><rect x="120.3" y="691.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.3" y="702.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (1 samples, 0.07%)</title><rect x="120.3" y="675.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="123.3" y="686.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.eq (1 samples, 0.07%)</title><rect x="120.3" y="659.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="123.3" y="670.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.07%)</title><rect x="120.3" y="643.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="123.3" y="654.0"></text>
</g>
<g>
<title>java/io/PrintWriter.&lt;init&gt; (10 samples, 0.67%)</title><rect x="121.1" y="755.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.1" y="766.0"></text>
</g>
<g>
<title>java/io/PrintWriter.&lt;init&gt; (10 samples, 0.67%)</title><rect x="121.1" y="739.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.1" y="750.0"></text>
</g>
<g>
<title>java/io/BufferedWriter.&lt;init&gt; (8 samples, 0.53%)</title><rect x="121.1" y="723.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.1" y="734.0"></text>
</g>
<g>
<title>java/io/BufferedWriter.&lt;init&gt; (8 samples, 0.53%)</title><rect x="121.1" y="707.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.1" y="718.0"></text>
</g>
<g>
<title>new_type_array Runtime1 stub (4 samples, 0.27%)</title><rect x="124.2" y="691.0" width="3.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="127.2" y="702.0"></text>
</g>
<g>
<title>java/io/OutputStreamWriter.&lt;init&gt; (1 samples, 0.07%)</title><rect x="127.4" y="723.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="130.4" y="734.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.forOutputStreamWriter (1 samples, 0.07%)</title><rect x="127.4" y="707.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="127.4" y="691.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8.newEncoder (1 samples, 0.07%)</title><rect x="127.4" y="675.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="127.4" y="659.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="130.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="127.4" y="643.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="130.4" y="654.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="127.4" y="627.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.4" y="638.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="127.4" y="611.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.4" y="622.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.replaceWith (1 samples, 0.07%)</title><rect x="127.4" y="595.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="130.4" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="127.4" y="579.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="130.4" y="590.0"></text>
</g>
<g>
<title>java/io/PrintWriter.&lt;init&gt; (1 samples, 0.07%)</title><rect x="128.2" y="723.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="131.2" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="128.2" y="707.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.2" y="718.0"></text>
</g>
<g>
<title>sun/security/action/GetPropertyAction.run (1 samples, 0.07%)</title><rect x="128.2" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.2" y="702.0"></text>
</g>
<g>
<title>sun/security/action/GetPropertyAction.run (1 samples, 0.07%)</title><rect x="128.2" y="675.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="131.2" y="686.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.07%)</title><rect x="128.2" y="659.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.2" y="670.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.07%)</title><rect x="128.2" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="131.2" y="654.0"></text>
</g>
<g>
<title>java/util/Hashtable.get (1 samples, 0.07%)</title><rect x="128.2" y="627.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.2" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.writeAndFlush (11 samples, 0.73%)</title><rect x="128.9" y="771.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.9" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.writeAndFlush (11 samples, 0.73%)</title><rect x="128.9" y="755.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.9" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (11 samples, 0.73%)</title><rect x="128.9" y="739.0" width="8.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.9" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (11 samples, 0.73%)</title><rect x="128.9" y="723.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.9" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.validatePromise (1 samples, 0.07%)</title><rect x="128.9" y="707.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.9" y="718.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.isDone (1 samples, 0.07%)</title><rect x="128.9" y="691.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.9" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (9 samples, 0.60%)</title><rect x="129.7" y="707.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.7" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteAndFlushTask.access$1600 (2 samples, 0.13%)</title><rect x="129.7" y="691.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.7" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteAndFlushTask.newInstance (2 samples, 0.13%)</title><rect x="129.7" y="675.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.7" y="686.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (2 samples, 0.13%)</title><rect x="129.7" y="659.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.7" y="670.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pop (1 samples, 0.07%)</title><rect x="129.7" y="643.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.7" y="654.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.scavenge (1 samples, 0.07%)</title><rect x="129.7" y="627.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.7" y="638.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.scavengeSome (1 samples, 0.07%)</title><rect x="129.7" y="611.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="132.7" y="622.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$WeakOrderQueue.transfer (1 samples, 0.07%)</title><rect x="129.7" y="595.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.7" y="606.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (1 samples, 0.07%)</title><rect x="130.5" y="643.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="133.5" y="654.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.get (1 samples, 0.07%)</title><rect x="130.5" y="627.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="133.5" y="638.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.fastGet (1 samples, 0.07%)</title><rect x="130.5" y="611.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="133.5" y="622.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.&lt;init&gt; (1 samples, 0.07%)</title><rect x="130.5" y="595.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.5" y="606.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.newIndexedVariableTable (1 samples, 0.07%)</title><rect x="130.5" y="579.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.5" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.safeExecute (7 samples, 0.47%)</title><rect x="131.3" y="691.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.3" y="702.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (7 samples, 0.47%)</title><rect x="131.3" y="675.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.3" y="686.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (7 samples, 0.47%)</title><rect x="131.3" y="659.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.3" y="670.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (6 samples, 0.40%)</title><rect x="131.3" y="643.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="134.3" y="654.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (6 samples, 0.40%)</title><rect x="131.3" y="627.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.3" y="638.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (6 samples, 0.40%)</title><rect x="131.3" y="611.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.3" y="622.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (6 samples, 0.40%)</title><rect x="131.3" y="595.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.3" y="606.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (6 samples, 0.40%)</title><rect x="131.3" y="579.0" width="4.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="134.3" y="590.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (6 samples, 0.40%)</title><rect x="131.3" y="563.0" width="4.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="134.3" y="574.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (6 samples, 0.40%)</title><rect x="131.3" y="547.0" width="4.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="134.3" y="558.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (6 samples, 0.40%)</title><rect x="131.3" y="531.0" width="4.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="134.3" y="542.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (3 samples, 0.20%)</title><rect x="131.3" y="515.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="134.3" y="526.0"></text>
</g>
<g>
<title>Arena::Amalloc_4(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="131.3" y="499.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="134.3" y="510.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (2 samples, 0.13%)</title><rect x="132.1" y="499.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="135.1" y="510.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(KlassHandle, int, int, Thread*) (1 samples, 0.07%)</title><rect x="132.9" y="483.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="135.9" y="494.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.07%)</title><rect x="133.7" y="515.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="136.7" y="526.0"></text>
</g>
<g>
<title>CompressedReadStream::read_int() (2 samples, 0.13%)</title><rect x="134.5" y="515.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="137.5" y="526.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.offerTask (1 samples, 0.07%)</title><rect x="136.0" y="643.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="139.0" y="654.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscChunkedArrayQueue.offer (1 samples, 0.07%)</title><rect x="136.0" y="627.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="139.0" y="638.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscChunkedArrayQueue.offerSlowPath (1 samples, 0.07%)</title><rect x="136.0" y="611.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="139.0" y="622.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (1 samples, 0.07%)</title><rect x="136.8" y="707.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="139.8" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.validatePromise (1 samples, 0.07%)</title><rect x="136.8" y="691.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="139.8" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpRequest.copy (4 samples, 0.27%)</title><rect x="137.6" y="771.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.6" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.copy (3 samples, 0.20%)</title><rect x="137.6" y="755.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.6" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.copy (3 samples, 0.20%)</title><rect x="137.6" y="739.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.6" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex (2 samples, 0.13%)</title><rect x="137.6" y="723.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.6" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex0 (2 samples, 0.13%)</title><rect x="137.6" y="707.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.6" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.capacity (2 samples, 0.13%)</title><rect x="137.6" y="691.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.6" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.size (1 samples, 0.07%)</title><rect x="138.4" y="675.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.4" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/Unpooled.buffer (1 samples, 0.07%)</title><rect x="139.2" y="723.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.2" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.heapBuffer (1 samples, 0.07%)</title><rect x="139.2" y="707.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="142.2" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.heapBuffer (1 samples, 0.07%)</title><rect x="139.2" y="691.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.2" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledByteBufAllocator.newHeapBuffer (1 samples, 0.07%)</title><rect x="139.2" y="675.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.2" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledUnsafeHeapByteBuf.&lt;init&gt; (1 samples, 0.07%)</title><rect x="139.2" y="659.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="142.2" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledHeapByteBuf.&lt;init&gt; (1 samples, 0.07%)</title><rect x="139.2" y="643.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="142.2" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledHeapByteBuf.&lt;init&gt; (1 samples, 0.07%)</title><rect x="139.2" y="627.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.07%)</title><rect x="139.2" y="611.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="142.2" y="622.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.07%)</title><rect x="139.2" y="595.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.2" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpRequest.replace (1 samples, 0.07%)</title><rect x="140.0" y="755.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.0" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.set (1 samples, 0.07%)</title><rect x="140.0" y="739.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="143.0" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.set (1 samples, 0.07%)</title><rect x="140.0" y="723.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.0" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.addImpl (1 samples, 0.07%)</title><rect x="140.0" y="707.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.0" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add0 (1 samples, 0.07%)</title><rect x="140.0" y="691.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.0" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.newHeaderEntry (1 samples, 0.07%)</title><rect x="140.0" y="675.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.0" y="686.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaHttpServletResponse.addHeader (2 samples, 0.13%)</title><rect x="140.8" y="803.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.8" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.add (2 samples, 0.13%)</title><rect x="140.8" y="787.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.8" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.addObject (2 samples, 0.13%)</title><rect x="140.8" y="771.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.8" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add (2 samples, 0.13%)</title><rect x="140.8" y="755.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="143.8" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add0 (1 samples, 0.07%)</title><rect x="140.8" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="143.8" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.newHeaderEntry (1 samples, 0.07%)</title><rect x="140.8" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.8" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders$HeaderEntry.&lt;init&gt; (1 samples, 0.07%)</title><rect x="140.8" y="707.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.8" y="718.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.hashCode (1 samples, 0.07%)</title><rect x="141.5" y="739.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.5" y="750.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.hashCode (1 samples, 0.07%)</title><rect x="141.5" y="723.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="144.5" y="734.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString.hashCode (1 samples, 0.07%)</title><rect x="141.5" y="707.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="144.5" y="718.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.hashCodeAscii (1 samples, 0.07%)</title><rect x="141.5" y="691.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="144.5" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="142.3" y="803.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.3" y="814.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaServletOutputStream.flush (14 samples, 0.93%)</title><rect x="143.1" y="835.0" width="11.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.1" y="846.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaHttpServletResponse.setResponseBasicHeader (2 samples, 0.13%)</title><rect x="143.1" y="819.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.1" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.setKeepAlive (1 samples, 0.07%)</title><rect x="143.1" y="803.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.1" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.setKeepAlive (1 samples, 0.07%)</title><rect x="143.1" y="787.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.1" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.set (1 samples, 0.07%)</title><rect x="143.1" y="771.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.1" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.setObject (1 samples, 0.07%)</title><rect x="143.1" y="755.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="146.1" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (1 samples, 0.07%)</title><rect x="143.1" y="739.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.1" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (1 samples, 0.07%)</title><rect x="143.1" y="723.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.1" y="734.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString.charAt (1 samples, 0.07%)</title><rect x="143.1" y="707.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="146.1" y="718.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString.byteAt (1 samples, 0.07%)</title><rect x="143.1" y="691.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="143.1" y="675.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="143.9" y="803.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.9" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="143.9" y="787.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.9" y="798.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.07%)</title><rect x="143.9" y="771.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.9" y="782.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (12 samples, 0.80%)</title><rect x="144.7" y="819.0" width="9.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="147.7" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.wakeup (4 samples, 0.27%)</title><rect x="144.7" y="803.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (4 samples, 0.27%)</title><rect x="144.7" y="787.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="147.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.interrupt (4 samples, 0.27%)</title><rect x="144.7" y="771.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.interrupt (4 samples, 0.27%)</title><rect x="144.7" y="755.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.7" y="766.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_KQueueArrayWrapper_interrupt (1 samples, 0.07%)</title><rect x="144.7" y="739.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="147.7" y="750.0"></text>
</g>
<g>
<title>write (3 samples, 0.20%)</title><rect x="145.5" y="739.0" width="2.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="148.5" y="750.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (8 samples, 0.53%)</title><rect x="147.9" y="803.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.9" y="814.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (8 samples, 0.53%)</title><rect x="147.9" y="787.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="150.9" y="798.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.processQueue (3 samples, 0.20%)</title><rect x="147.9" y="771.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="150.9" y="782.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.07%)</title><rect x="147.9" y="755.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="150.9" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="147.9" y="739.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="150.9" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.07%)</title><rect x="147.9" y="723.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="150.9" y="734.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.07%)</title><rect x="147.9" y="707.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="150.9" y="718.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="147.9" y="691.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="150.9" y="702.0"></text>
</g>
<g>
<title>Runtime1::monitorexit(JavaThread*, BasicObjectLock*) (1 samples, 0.07%)</title><rect x="148.6" y="755.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="151.6" y="766.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.07%)</title><rect x="148.6" y="739.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="151.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.remove (1 samples, 0.07%)</title><rect x="149.4" y="755.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.replaceNode (1 samples, 0.07%)</title><rect x="149.4" y="739.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.4" y="750.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3 samples, 0.20%)</title><rect x="150.2" y="771.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.2" y="782.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.20%)</title><rect x="150.2" y="755.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="153.2" y="766.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.20%)</title><rect x="150.2" y="739.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.2" y="750.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (3 samples, 0.20%)</title><rect x="150.2" y="723.0" width="2.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="153.2" y="734.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (3 samples, 0.20%)</title><rect x="150.2" y="707.0" width="2.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="153.2" y="718.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (3 samples, 0.20%)</title><rect x="150.2" y="691.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="153.2" y="702.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.07%)</title><rect x="150.2" y="675.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="153.2" y="686.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (2 samples, 0.13%)</title><rect x="151.0" y="675.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="154.0" y="686.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (1 samples, 0.07%)</title><rect x="151.0" y="659.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="154.0" y="670.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.07%)</title><rect x="151.0" y="643.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="154.0" y="654.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.07%)</title><rect x="151.0" y="627.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="154.0" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(KlassHandle, int, int, Thread*) (1 samples, 0.07%)</title><rect x="151.0" y="611.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="154.0" y="622.0"></text>
</g>
<g>
<title>post_allocation_notify(KlassHandle, oopDesc*, int) (1 samples, 0.07%)</title><rect x="151.0" y="595.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="154.0" y="606.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.07%)</title><rect x="151.8" y="659.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="154.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (2 samples, 0.13%)</title><rect x="152.6" y="771.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (2 samples, 0.13%)</title><rect x="152.6" y="755.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (1 samples, 0.07%)</title><rect x="153.4" y="739.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.4" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpMessage.release (2 samples, 0.13%)</title><rect x="154.2" y="835.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.2" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (2 samples, 0.13%)</title><rect x="154.2" y="819.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="157.2" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.deallocate (2 samples, 0.13%)</title><rect x="154.2" y="803.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.2" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.size (2 samples, 0.13%)</title><rect x="154.2" y="787.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="157.2" y="798.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="155.7" y="883.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="158.7" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$8.run (6 samples, 0.40%)</title><rect x="156.5" y="931.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="159.5" y="942.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$700 (6 samples, 0.40%)</title><rect x="156.5" y="915.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="159.5" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (6 samples, 0.40%)</title><rect x="156.5" y="899.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="159.5" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelReadComplete (6 samples, 0.40%)</title><rect x="156.5" y="883.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="159.5" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (6 samples, 0.40%)</title><rect x="156.5" y="867.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="159.5" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (6 samples, 0.40%)</title><rect x="156.5" y="851.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="159.5" y="862.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (6 samples, 0.40%)</title><rect x="156.5" y="835.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="159.5" y="846.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (6 samples, 0.40%)</title><rect x="156.5" y="819.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="159.5" y="830.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (6 samples, 0.40%)</title><rect x="156.5" y="803.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="159.5" y="814.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (5 samples, 0.33%)</title><rect x="156.5" y="787.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="159.5" y="798.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (5 samples, 0.33%)</title><rect x="156.5" y="771.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="159.5" y="782.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (5 samples, 0.33%)</title><rect x="156.5" y="755.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="159.5" y="766.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (5 samples, 0.33%)</title><rect x="156.5" y="739.0" width="4.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="159.5" y="750.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (5 samples, 0.33%)</title><rect x="156.5" y="723.0" width="4.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="159.5" y="734.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (5 samples, 0.33%)</title><rect x="156.5" y="707.0" width="4.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="159.5" y="718.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.07%)</title><rect x="156.5" y="691.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="159.5" y="702.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (4 samples, 0.27%)</title><rect x="157.3" y="691.0" width="3.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="160.3" y="702.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.07%)</title><rect x="158.1" y="675.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="161.1" y="686.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.13%)</title><rect x="158.9" y="675.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="161.9" y="686.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.07%)</title><rect x="158.9" y="659.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="161.9" y="670.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.07%)</title><rect x="158.9" y="643.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="161.9" y="654.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.07%)</title><rect x="158.9" y="627.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="161.9" y="638.0"></text>
</g>
<g>
<title>nmethod::get_deopt_original_pc(frame const*) (1 samples, 0.07%)</title><rect x="159.7" y="659.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="162.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (1 samples, 0.07%)</title><rect x="160.5" y="787.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="163.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.07%)</title><rect x="160.5" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="163.5" y="782.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.confirmShutdown (1 samples, 0.07%)</title><rect x="161.2" y="931.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="164.2" y="942.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.takeTask (57 samples, 3.81%)</title><rect x="162.0" y="931.0" width="44.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="165.0" y="942.0">io/n..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (57 samples, 3.81%)</title><rect x="162.0" y="915.0" width="44.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="165.0" y="926.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (56 samples, 3.74%)</title><rect x="162.0" y="899.0" width="44.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="165.0" y="910.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (56 samples, 3.74%)</title><rect x="162.0" y="883.0" width="44.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.0" y="894.0">java..</text>
</g>
<g>
<title>sun/misc/Unsafe.park (56 samples, 3.74%)</title><rect x="162.0" y="867.0" width="44.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.0" y="878.0">sun/..</text>
</g>
<g>
<title>Unsafe_Park (55 samples, 3.67%)</title><rect x="162.8" y="851.0" width="43.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="165.8" y="862.0">Unsa..</text>
</g>
<g>
<title>Parker::park(bool, long) (55 samples, 3.67%)</title><rect x="162.8" y="835.0" width="43.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="165.8" y="846.0">Park..</text>
</g>
<g>
<title>__psynch_cvwait (55 samples, 3.67%)</title><rect x="162.8" y="819.0" width="43.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="165.8" y="830.0">__ps..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.07%)</title><rect x="206.1" y="899.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="209.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.07%)</title><rect x="206.1" y="883.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="209.1" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.07%)</title><rect x="206.1" y="867.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="209.1" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.run (931 samples, 62.15%)</title><rect x="206.9" y="947.0" width="733.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.9" y="958.0">io/netty/channel/nio/NioEventLoop.run</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeys (545 samples, 36.38%)</title><rect x="206.9" y="931.0" width="429.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="209.9" y="942.0">io/netty/channel/nio/NioEventLoop.processSelectedKeys</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized (543 samples, 36.25%)</title><rect x="206.9" y="915.0" width="427.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.9" y="926.0">io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimi..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKey (543 samples, 36.25%)</title><rect x="206.9" y="899.0" width="427.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="209.9" y="910.0">io/netty/channel/nio/NioEventLoop.processSelectedKey</text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read (519 samples, 34.65%)</title><rect x="206.9" y="883.0" width="408.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="209.9" y="894.0">io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsaf..</text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (1 samples, 0.07%)</title><rect x="206.9" y="867.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="209.9" y="878.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (1 samples, 0.07%)</title><rect x="206.9" y="851.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="209.9" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (1 samples, 0.07%)</title><rect x="206.9" y="835.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="209.9" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.freeChunk (1 samples, 0.07%)</title><rect x="206.9" y="819.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="209.9" y="830.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.07%)</title><rect x="206.9" y="803.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="209.9" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="206.9" y="787.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="209.9" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.07%)</title><rect x="206.9" y="771.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="209.9" y="782.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.07%)</title><rect x="206.9" y="755.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="209.9" y="766.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="206.9" y="739.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="209.9" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (481 samples, 32.11%)</title><rect x="207.7" y="867.0" width="378.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="210.7" y="878.0">io/netty/channel/DefaultChannelPipeline.fireChannelR..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (481 samples, 32.11%)</title><rect x="207.7" y="851.0" width="378.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.7" y="862.0">io/netty/channel/AbstractChannelHandlerContext.invok..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (1 samples, 0.07%)</title><rect x="207.7" y="835.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="210.7" y="846.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="207.7" y="819.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="210.7" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (479 samples, 31.98%)</title><rect x="208.5" y="835.0" width="377.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="211.5" y="846.0">io/netty/channel/AbstractChannelHandlerContext.invo..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (479 samples, 31.98%)</title><rect x="208.5" y="819.0" width="377.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.5" y="830.0">io/netty/channel/DefaultChannelPipeline$HeadContext..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (479 samples, 31.98%)</title><rect x="208.5" y="803.0" width="377.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="211.5" y="814.0">io/netty/channel/AbstractChannelHandlerContext.fire..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (479 samples, 31.98%)</title><rect x="208.5" y="787.0" width="377.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.5" y="798.0">io/netty/channel/AbstractChannelHandlerContext.invo..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (479 samples, 31.98%)</title><rect x="208.5" y="771.0" width="377.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.5" y="782.0">io/netty/channel/AbstractChannelHandlerContext.invo..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelRead (146 samples, 9.75%)</title><rect x="208.5" y="755.0" width="115.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="211.5" y="766.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (146 samples, 9.75%)</title><rect x="208.5" y="739.0" width="115.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.5" y="750.0">io/netty/handl..</text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (5 samples, 0.33%)</title><rect x="208.5" y="723.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.5" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (5 samples, 0.33%)</title><rect x="208.5" y="707.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.5" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (5 samples, 0.33%)</title><rect x="208.5" y="691.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="211.5" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.freeChunk (5 samples, 0.33%)</title><rect x="208.5" y="675.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.5" y="686.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (3 samples, 0.20%)</title><rect x="209.3" y="659.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="212.3" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.20%)</title><rect x="209.3" y="643.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="212.3" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.07%)</title><rect x="209.3" y="627.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="212.3" y="638.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.07%)</title><rect x="209.3" y="611.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="212.3" y="622.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="209.3" y="595.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="212.3" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin_VaryDuration(Thread*) (1 samples, 0.07%)</title><rect x="210.1" y="627.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="213.1" y="638.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.07%)</title><rect x="210.9" y="627.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="213.9" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunkList.free (1 samples, 0.07%)</title><rect x="211.7" y="659.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="214.7" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.free (1 samples, 0.07%)</title><rect x="211.7" y="643.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="214.7" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.callDecode (15 samples, 1.00%)</title><rect x="212.4" y="723.0" width="11.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="215.4" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.decode (15 samples, 1.00%)</title><rect x="212.4" y="707.0" width="11.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="215.4" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecOutputList.add (1 samples, 0.07%)</title><rect x="213.2" y="691.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="216.2" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder$LineParser.parse (2 samples, 0.13%)</title><rect x="214.0" y="691.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="217.0" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder$HeaderParser.parse (2 samples, 0.13%)</title><rect x="214.0" y="675.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="217.0" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.forEachByte (2 samples, 0.13%)</title><rect x="214.0" y="659.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="217.0" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.forEachByteAsc0 (2 samples, 0.13%)</title><rect x="214.0" y="643.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="217.0" y="654.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.throwException (2 samples, 0.13%)</title><rect x="214.0" y="627.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="217.0" y="638.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.throwException (2 samples, 0.13%)</title><rect x="214.0" y="611.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="217.0" y="622.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder$HeaderParser.process (1 samples, 0.07%)</title><rect x="214.0" y="595.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="217.0" y="606.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="214.8" y="595.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="217.8" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.contentLength (1 samples, 0.07%)</title><rect x="215.6" y="691.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="218.6" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.readHeaders (8 samples, 0.53%)</title><rect x="216.4" y="691.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="219.4" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.add (5 samples, 0.33%)</title><rect x="216.4" y="675.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="219.4" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.addObject (5 samples, 0.33%)</title><rect x="216.4" y="659.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="219.4" y="670.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add (2 samples, 0.13%)</title><rect x="216.4" y="643.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="219.4" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add0 (1 samples, 0.07%)</title><rect x="216.4" y="627.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.4" y="638.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.newHeaderEntry (1 samples, 0.07%)</title><rect x="216.4" y="611.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="219.4" y="622.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.hashCode (1 samples, 0.07%)</title><rect x="217.2" y="627.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="220.2" y="638.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.hashCode (1 samples, 0.07%)</title><rect x="217.2" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.2" y="622.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString.hashCode (1 samples, 0.07%)</title><rect x="217.2" y="595.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="220.2" y="606.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.hashCodeAscii (1 samples, 0.07%)</title><rect x="217.2" y="579.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="220.2" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (3 samples, 0.20%)</title><rect x="218.0" y="643.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.0" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (3 samples, 0.20%)</title><rect x="218.0" y="627.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="221.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.13%)</title><rect x="218.7" y="611.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="221.7" y="622.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.13%)</title><rect x="218.7" y="595.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="221.7" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.contentLength (1 samples, 0.07%)</title><rect x="220.3" y="675.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.3" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.getContentLength (1 samples, 0.07%)</title><rect x="220.3" y="659.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="223.3" y="670.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.07%)</title><rect x="220.3" y="643.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="223.3" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.getWebSocketContentLength (1 samples, 0.07%)</title><rect x="220.3" y="627.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="223.3" y="638.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.isTransferEncodingChunked (2 samples, 0.13%)</title><rect x="221.1" y="675.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.1" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.contains (1 samples, 0.07%)</title><rect x="221.1" y="659.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.1" y="670.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.contains (1 samples, 0.07%)</title><rect x="221.1" y="643.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="224.1" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpMessage.headers (1 samples, 0.07%)</title><rect x="221.9" y="659.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="224.9" y="670.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.splitInitialLine (1 samples, 0.07%)</title><rect x="222.7" y="691.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="225.7" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.findWhitespace (1 samples, 0.07%)</title><rect x="222.7" y="675.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="225.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (1 samples, 0.07%)</title><rect x="222.7" y="659.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="225.7" y="670.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (1 samples, 0.07%)</title><rect x="222.7" y="643.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="225.7" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpRequestDecoder.createMessage (1 samples, 0.07%)</title><rect x="223.5" y="691.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="226.5" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpVersion.valueOf (1 samples, 0.07%)</title><rect x="223.5" y="675.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="226.5" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpVersion.version0 (1 samples, 0.07%)</title><rect x="223.5" y="659.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="226.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.07%)</title><rect x="223.5" y="643.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="226.5" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (126 samples, 8.41%)</title><rect x="224.3" y="723.0" width="99.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="227.3" y="734.0">io/netty/han..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead (126 samples, 8.41%)</title><rect x="224.3" y="707.0" width="99.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.3" y="718.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (126 samples, 8.41%)</title><rect x="224.3" y="691.0" width="99.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="227.3" y="702.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (126 samples, 8.41%)</title><rect x="224.3" y="675.0" width="99.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.3" y="686.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (126 samples, 8.41%)</title><rect x="224.3" y="659.0" width="99.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.3" y="670.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (126 samples, 8.41%)</title><rect x="224.3" y="643.0" width="99.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.3" y="654.0">io/netty/han..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (123 samples, 8.21%)</title><rect x="224.3" y="627.0" width="96.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.3" y="638.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (122 samples, 8.14%)</title><rect x="225.0" y="611.0" width="96.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="228.0" y="622.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (122 samples, 8.14%)</title><rect x="225.0" y="595.0" width="96.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="228.0" y="606.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelRead (122 samples, 8.14%)</title><rect x="225.0" y="579.0" width="96.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="228.0" y="590.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (121 samples, 8.08%)</title><rect x="225.8" y="563.0" width="95.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="228.8" y="574.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (121 samples, 8.08%)</title><rect x="225.8" y="547.0" width="95.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="228.8" y="558.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (121 samples, 8.08%)</title><rect x="225.8" y="531.0" width="95.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="228.8" y="542.0">io/netty/ch..</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (121 samples, 8.08%)</title><rect x="225.8" y="515.0" width="95.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.8" y="526.0">io/netty/ch..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/handler/FullHttpRequest2HttpServletHandler.channelRead0 (121 samples, 8.08%)</title><rect x="225.8" y="499.0" width="95.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="228.8" y="510.0">com/tinysak..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/handler/FullHttpRequest2HttpServletHandler.channelRead0 (121 samples, 8.08%)</title><rect x="225.8" y="483.0" width="95.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="228.8" y="494.0">com/tinysak..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (58 samples, 3.87%)</title><rect x="226.6" y="467.0" width="45.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="229.6" y="478.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (58 samples, 3.87%)</title><rect x="226.6" y="451.0" width="45.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.6" y="462.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (58 samples, 3.87%)</title><rect x="226.6" y="435.0" width="45.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="229.6" y="446.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (57 samples, 3.81%)</title><rect x="226.6" y="419.0" width="44.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.6" y="430.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (57 samples, 3.81%)</title><rect x="226.6" y="403.0" width="44.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="229.6" y="414.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (56 samples, 3.74%)</title><rect x="227.4" y="387.0" width="44.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.4" y="398.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (55 samples, 3.67%)</title><rect x="228.2" y="371.0" width="43.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.2" y="382.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (50 samples, 3.34%)</title><rect x="228.2" y="355.0" width="39.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.2" y="366.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (50 samples, 3.34%)</title><rect x="228.2" y="339.0" width="39.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="231.2" y="350.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (19 samples, 1.27%)</title><rect x="228.2" y="323.0" width="15.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="231.2" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (19 samples, 1.27%)</title><rect x="228.2" y="307.0" width="15.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="231.2" y="318.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (19 samples, 1.27%)</title><rect x="228.2" y="291.0" width="15.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="231.2" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (19 samples, 1.27%)</title><rect x="228.2" y="275.0" width="15.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="231.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.13%)</title><rect x="228.2" y="259.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="231.2" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.13%)</title><rect x="228.2" y="243.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="231.2" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.13%)</title><rect x="228.2" y="227.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="231.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.13%)</title><rect x="228.2" y="211.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.2" y="222.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (17 samples, 1.13%)</title><rect x="229.8" y="259.0" width="13.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="232.8" y="270.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (17 samples, 1.13%)</title><rect x="229.8" y="243.0" width="13.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="232.8" y="254.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpRequest.toString (17 samples, 1.13%)</title><rect x="229.8" y="227.0" width="13.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="232.8" y="238.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMessageUtil.appendFullRequest (15 samples, 1.00%)</title><rect x="231.3" y="211.0" width="11.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.3" y="222.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMessageUtil.appendFullCommon (6 samples, 0.40%)</title><rect x="231.3" y="195.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="234.3" y="206.0"></text>
</g>
<g>
<title>io/netty/util/internal/StringUtil.simpleClassName (1 samples, 0.07%)</title><rect x="231.3" y="179.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="234.3" y="190.0"></text>
</g>
<g>
<title>io/netty/util/internal/StringUtil.simpleClassName (1 samples, 0.07%)</title><rect x="231.3" y="163.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="234.3" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.07%)</title><rect x="231.3" y="147.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="234.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="231.3" y="131.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="234.3" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="231.3" y="115.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="234.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="231.3" y="99.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="234.3" y="110.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="231.3" y="83.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="234.3" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.33%)</title><rect x="232.1" y="179.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.1" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="232.1" y="163.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="235.1" y="174.0"></text>
</g>
<g>
<title>java/lang/String.getChars (1 samples, 0.07%)</title><rect x="232.1" y="147.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="235.1" y="158.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="232.1" y="131.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="235.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (3 samples, 0.20%)</title><rect x="232.9" y="163.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.9" y="174.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.toString (3 samples, 0.20%)</title><rect x="232.9" y="147.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.9" y="158.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.toString (2 samples, 0.13%)</title><rect x="232.9" y="131.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.9" y="142.0"></text>
</g>
<g>
<title>io/netty/util/internal/StringUtil.simpleClassName (2 samples, 0.13%)</title><rect x="232.9" y="115.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.9" y="126.0"></text>
</g>
<g>
<title>io/netty/util/internal/StringUtil.simpleClassName (1 samples, 0.07%)</title><rect x="232.9" y="99.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.9" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.07%)</title><rect x="232.9" y="83.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.9" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="232.9" y="67.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="235.9" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="232.9" y="51.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.9" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="232.9" y="35.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.9" y="46.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="233.7" y="99.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="236.7" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.07%)</title><rect x="234.5" y="131.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="234.5" y="115.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.5" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="234.5" y="99.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="234.5" y="83.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="237.5" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="235.3" y="163.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="238.3" y="174.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMessageUtil.appendHeaders (7 samples, 0.47%)</title><rect x="236.1" y="195.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="239.1" y="206.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils$StringEntry.getValue (1 samples, 0.07%)</title><rect x="236.1" y="179.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="239.1" y="190.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils$StringEntry.getValue (1 samples, 0.07%)</title><rect x="236.1" y="163.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="239.1" y="174.0"></text>
</g>
<g>
<title>java/lang/String.toString (1 samples, 0.07%)</title><rect x="236.1" y="147.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="239.1" y="158.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/EmptyHttpHeaders.iterator (1 samples, 0.07%)</title><rect x="236.9" y="179.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.9" y="190.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.20%)</title><rect x="237.7" y="179.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="240.7" y="190.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils$StringEntry.getKey (1 samples, 0.07%)</title><rect x="237.7" y="163.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.7" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.13%)</title><rect x="238.4" y="163.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.4" y="174.0"></text>
</g>
<g>
<title>java/util/Collections$EmptyIterator.hasNext (1 samples, 0.07%)</title><rect x="240.0" y="179.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="243.0" y="190.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="240.8" y="179.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="243.8" y="190.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMessageUtil.appendInitialLine (2 samples, 0.13%)</title><rect x="241.6" y="195.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="244.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.13%)</title><rect x="241.6" y="179.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="244.6" y="190.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.07%)</title><rect x="241.6" y="163.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="244.6" y="174.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMethod.toString (1 samples, 0.07%)</title><rect x="241.6" y="147.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="244.6" y="158.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="241.6" y="131.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="244.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="242.4" y="163.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="245.4" y="174.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="242.4" y="147.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="245.4" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (12 samples, 0.80%)</title><rect x="243.2" y="323.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.2" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (2 samples, 0.13%)</title><rect x="243.2" y="307.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="246.2" y="318.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (2 samples, 0.13%)</title><rect x="243.2" y="291.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="246.2" y="302.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (2 samples, 0.13%)</title><rect x="243.2" y="275.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="246.2" y="286.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (2 samples, 0.13%)</title><rect x="243.2" y="259.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="246.2" y="270.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (2 samples, 0.13%)</title><rect x="243.2" y="243.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="246.2" y="254.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (2 samples, 0.13%)</title><rect x="243.2" y="227.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="246.2" y="238.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (2 samples, 0.13%)</title><rect x="243.2" y="211.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="246.2" y="222.0"></text>
</g>
<g>
<title>writeBytes (2 samples, 0.13%)</title><rect x="243.2" y="195.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="246.2" y="206.0"></text>
</g>
<g>
<title>write (1 samples, 0.07%)</title><rect x="244.0" y="179.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="247.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (9 samples, 0.60%)</title><rect x="244.7" y="307.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (9 samples, 0.60%)</title><rect x="244.7" y="291.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="247.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.60%)</title><rect x="244.7" y="275.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (9 samples, 0.60%)</title><rect x="244.7" y="259.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="247.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (9 samples, 0.60%)</title><rect x="244.7" y="243.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.60%)</title><rect x="244.7" y="227.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="247.7" y="238.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (9 samples, 0.60%)</title><rect x="244.7" y="211.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="247.7" y="222.0"></text>
</g>
<g>
<title>Unsafe_Park (9 samples, 0.60%)</title><rect x="244.7" y="195.0" width="7.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="247.7" y="206.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (9 samples, 0.60%)</title><rect x="244.7" y="179.0" width="7.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="247.7" y="190.0"></text>
</g>
<g>
<title>MutexLockerEx::MutexLockerEx(Monitor*, bool) (1 samples, 0.07%)</title><rect x="244.7" y="163.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="247.7" y="174.0"></text>
</g>
<g>
<title>__psynch_cvwait (7 samples, 0.47%)</title><rect x="245.5" y="163.0" width="5.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="248.5" y="174.0"></text>
</g>
<g>
<title>_pthread_cond_wait (1 samples, 0.07%)</title><rect x="251.0" y="163.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="254.0" y="174.0"></text>
</g>
<g>
<title>_pthread_mutex_droplock (1 samples, 0.07%)</title><rect x="251.0" y="147.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="254.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="251.8" y="307.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="254.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="251.8" y="291.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="254.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="251.8" y="275.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="254.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="251.8" y="259.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="254.8" y="270.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="251.8" y="243.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="254.8" y="254.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.07%)</title><rect x="251.8" y="227.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="254.8" y="238.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.07%)</title><rect x="251.8" y="211.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="254.8" y="222.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="251.8" y="195.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="254.8" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (19 samples, 1.27%)</title><rect x="252.6" y="323.0" width="15.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="255.6" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (11 samples, 0.73%)</title><rect x="253.4" y="307.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="256.4" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (11 samples, 0.73%)</title><rect x="253.4" y="291.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.4" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (10 samples, 0.67%)</title><rect x="253.4" y="275.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="256.4" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/Converter.write (1 samples, 0.07%)</title><rect x="254.2" y="259.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="257.2" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (7 samples, 0.47%)</title><rect x="255.0" y="259.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.0" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (3 samples, 0.20%)</title><rect x="255.0" y="243.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.0" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (3 samples, 0.20%)</title><rect x="255.0" y="227.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="258.0" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (3 samples, 0.20%)</title><rect x="255.0" y="211.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="258.0" y="222.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.07%)</title><rect x="255.0" y="195.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="258.0" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="255.0" y="179.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="258.0" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.07%)</title><rect x="255.0" y="163.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="258.0" y="174.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.07%)</title><rect x="255.0" y="147.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="258.0" y="158.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="255.0" y="131.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="258.0" y="142.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (2 samples, 0.13%)</title><rect x="255.8" y="195.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="258.8" y="206.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (2 samples, 0.13%)</title><rect x="255.8" y="179.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.8" y="190.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (2 samples, 0.13%)</title><rect x="255.8" y="163.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="258.8" y="174.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (2 samples, 0.13%)</title><rect x="255.8" y="147.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="258.8" y="158.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (1 samples, 0.07%)</title><rect x="256.6" y="131.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.6" y="142.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.07%)</title><rect x="256.6" y="115.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="259.6" y="126.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.07%)</title><rect x="256.6" y="99.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="259.6" y="110.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.subformat (1 samples, 0.07%)</title><rect x="256.6" y="83.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="259.6" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (1 samples, 0.07%)</title><rect x="256.6" y="67.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="259.6" y="78.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="256.6" y="51.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="259.6" y="62.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.07%)</title><rect x="256.6" y="35.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.6" y="46.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.convert (1 samples, 0.07%)</title><rect x="257.3" y="243.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.3" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.convert (1 samples, 0.07%)</title><rect x="257.3" y="227.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="260.3" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/SpacePadder.rightPad (1 samples, 0.07%)</title><rect x="258.1" y="243.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="261.1" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/SpacePadder.spacePad (1 samples, 0.07%)</title><rect x="258.1" y="227.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="261.1" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="258.1" y="211.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="261.1" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.13%)</title><rect x="258.9" y="243.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="261.9" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.13%)</title><rect x="258.9" y="227.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.9" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.07%)</title><rect x="259.7" y="211.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="262.7" y="222.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.newCapacity (1 samples, 0.07%)</title><rect x="259.7" y="195.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="262.7" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.hugeCapacity (1 samples, 0.07%)</title><rect x="259.7" y="179.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="262.7" y="190.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.07%)</title><rect x="260.5" y="259.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="263.5" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="260.5" y="243.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="263.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="260.5" y="227.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="263.5" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="260.5" y="211.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="263.5" y="222.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.07%)</title><rect x="261.3" y="275.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="264.3" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (7 samples, 0.47%)</title><rect x="262.1" y="307.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="265.1" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.47%)</title><rect x="262.1" y="291.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="265.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (7 samples, 0.47%)</title><rect x="262.1" y="275.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="265.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (7 samples, 0.47%)</title><rect x="262.1" y="259.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="265.1" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (6 samples, 0.40%)</title><rect x="262.1" y="243.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="265.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encode (4 samples, 0.27%)</title><rect x="263.6" y="227.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="266.6" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="266.8" y="243.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="269.8" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.13%)</title><rect x="267.6" y="355.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="270.6" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.07%)</title><rect x="267.6" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="270.6" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.07%)</title><rect x="267.6" y="323.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="270.6" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.07%)</title><rect x="268.4" y="339.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="271.4" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (3 samples, 0.20%)</title><rect x="269.2" y="355.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="272.2" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.07%)</title><rect x="269.9" y="339.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="272.9" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$100 (1 samples, 0.07%)</title><rect x="270.7" y="339.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.7" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.07%)</title><rect x="270.7" y="323.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="273.7" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.setMarker (1 samples, 0.07%)</title><rect x="271.5" y="419.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.5" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.07%)</title><rect x="271.5" y="403.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="274.5" y="414.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/request/XhakaHttpServletRequest.getHeader (1 samples, 0.07%)</title><rect x="272.3" y="467.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="275.3" y="478.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.get (1 samples, 0.07%)</title><rect x="272.3" y="451.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="275.3" y="462.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.get (1 samples, 0.07%)</title><rect x="272.3" y="435.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="275.3" y="446.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils.getAsString (1 samples, 0.07%)</title><rect x="272.3" y="419.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="275.3" y="430.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.get (1 samples, 0.07%)</title><rect x="272.3" y="403.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="275.3" y="414.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.hashCode (1 samples, 0.07%)</title><rect x="272.3" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="275.3" y="398.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.hashCode (1 samples, 0.07%)</title><rect x="272.3" y="371.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.3" y="382.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString.hashCode (1 samples, 0.07%)</title><rect x="272.3" y="355.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="275.3" y="366.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.hashCodeAscii (1 samples, 0.07%)</title><rect x="272.3" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="275.3" y="350.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.hashCodeAsciiCompute (1 samples, 0.07%)</title><rect x="272.3" y="323.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="275.3" y="334.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.hashCodeAsciiSanitizeInt (1 samples, 0.07%)</title><rect x="272.3" y="307.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="272.3" y="291.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="275.3" y="302.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaHttpServletResponse.&lt;init&gt; (44 samples, 2.94%)</title><rect x="273.1" y="467.0" width="34.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.1" y="478.0">co..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaServletOutputStream.&lt;init&gt; (2 samples, 0.13%)</title><rect x="273.1" y="451.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.1" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufOutputStream.&lt;init&gt; (2 samples, 0.13%)</title><rect x="273.1" y="435.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.1" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (3 samples, 0.20%)</title><rect x="274.7" y="451.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="277.7" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (3 samples, 0.20%)</title><rect x="274.7" y="435.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="277.7" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (3 samples, 0.20%)</title><rect x="274.7" y="419.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="277.7" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (1 samples, 0.07%)</title><rect x="274.7" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="277.7" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (2 samples, 0.13%)</title><rect x="275.5" y="403.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.5" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (2 samples, 0.13%)</title><rect x="275.5" y="387.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="278.5" y="398.0"></text>
</g>
<g>
<title>io/netty/util/internal/chmv8/LongAdderV8.increment (1 samples, 0.07%)</title><rect x="276.2" y="371.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="279.2" y="382.0"></text>
</g>
<g>
<title>io/netty/util/internal/chmv8/LongAdderV8.add (1 samples, 0.07%)</title><rect x="276.2" y="355.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.2" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="276.2" y="339.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.2" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.07%)</title><rect x="276.2" y="323.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.2" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.07%)</title><rect x="276.2" y="307.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.2" y="318.0"></text>
</g>
<g>
<title>java/io/PrintWriter.&lt;init&gt; (39 samples, 2.60%)</title><rect x="277.0" y="451.0" width="30.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.0" y="462.0">ja..</text>
</g>
<g>
<title>java/io/PrintWriter.&lt;init&gt; (39 samples, 2.60%)</title><rect x="277.0" y="435.0" width="30.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.0" y="446.0">ja..</text>
</g>
<g>
<title>java/io/BufferedWriter.&lt;init&gt; (30 samples, 2.00%)</title><rect x="277.0" y="419.0" width="23.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.0" y="430.0">j..</text>
</g>
<g>
<title>java/io/BufferedWriter.&lt;init&gt; (30 samples, 2.00%)</title><rect x="277.0" y="403.0" width="23.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="280.0" y="414.0">j..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 0.33%)</title><rect x="295.2" y="387.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.2" y="398.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (2 samples, 0.13%)</title><rect x="295.2" y="371.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="298.2" y="382.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.07%)</title><rect x="295.2" y="355.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="298.2" y="366.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*) (1 samples, 0.07%)</title><rect x="295.9" y="355.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="298.9" y="366.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle, Handle, JavaValue*, Thread*) (1 samples, 0.07%)</title><rect x="295.9" y="339.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="298.9" y="350.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.07%)</title><rect x="295.9" y="323.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="298.9" y="334.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle, JavaCallArguments*, Thread*) (1 samples, 0.07%)</title><rect x="296.7" y="371.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="299.7" y="382.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.07%)</title><rect x="297.5" y="371.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="300.5" y="382.0"></text>
</g>
<g>
<title>sun/security/action/GetPropertyAction.run (1 samples, 0.07%)</title><rect x="298.3" y="371.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="301.3" y="382.0"></text>
</g>
<g>
<title>sun/security/action/GetPropertyAction.run (1 samples, 0.07%)</title><rect x="298.3" y="355.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="301.3" y="366.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.07%)</title><rect x="298.3" y="339.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="301.3" y="350.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.07%)</title><rect x="298.3" y="323.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="301.3" y="334.0"></text>
</g>
<g>
<title>java/util/Hashtable.get (1 samples, 0.07%)</title><rect x="298.3" y="307.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="301.3" y="318.0"></text>
</g>
<g>
<title>monitorexit_nofpu Runtime1 stub (1 samples, 0.07%)</title><rect x="298.3" y="291.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="301.3" y="302.0"></text>
</g>
<g>
<title>new_type_array Runtime1 stub (2 samples, 0.13%)</title><rect x="299.1" y="387.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="302.1" y="398.0"></text>
</g>
<g>
<title>java/io/OutputStreamWriter.&lt;init&gt; (8 samples, 0.53%)</title><rect x="300.7" y="419.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="303.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.forOutputStreamWriter (8 samples, 0.53%)</title><rect x="300.7" y="403.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="303.7" y="414.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.&lt;init&gt; (8 samples, 0.53%)</title><rect x="300.7" y="387.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="303.7" y="398.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.&lt;init&gt; (8 samples, 0.53%)</title><rect x="300.7" y="371.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="303.7" y="382.0"></text>
</g>
<g>
<title>java/io/Writer.&lt;init&gt; (4 samples, 0.27%)</title><rect x="300.7" y="355.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="303.7" y="366.0"></text>
</g>
<g>
<title>new_type_array Runtime1 stub (4 samples, 0.27%)</title><rect x="300.7" y="339.0" width="3.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="303.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.27%)</title><rect x="303.8" y="355.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="306.8" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.27%)</title><rect x="303.8" y="339.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="306.8" y="350.0"></text>
</g>
<g>
<title>java/io/PrintWriter.&lt;init&gt; (1 samples, 0.07%)</title><rect x="307.0" y="419.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="310.0" y="430.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="307.0" y="403.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="310.0" y="414.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.07%)</title><rect x="307.0" y="387.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="310.0" y="398.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.07%)</title><rect x="307.0" y="371.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="310.0" y="382.0"></text>
</g>
<g>
<title>vframeStreamCommon::next() (1 samples, 0.07%)</title><rect x="307.0" y="355.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="310.0" y="366.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (1 samples, 0.07%)</title><rect x="307.0" y="339.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="310.0" y="350.0"></text>
</g>
<g>
<title>nmethod::find_pc_desc(unsigned char*, bool) (1 samples, 0.07%)</title><rect x="307.0" y="323.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="310.0" y="334.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (17 samples, 1.13%)</title><rect x="307.8" y="467.0" width="13.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="310.8" y="478.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (17 samples, 1.13%)</title><rect x="307.8" y="451.0" width="13.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="310.8" y="462.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (17 samples, 1.13%)</title><rect x="307.8" y="435.0" width="13.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.8" y="446.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (16 samples, 1.07%)</title><rect x="307.8" y="419.0" width="12.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.8" y="430.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (16 samples, 1.07%)</title><rect x="307.8" y="403.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.8" y="414.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (15 samples, 1.00%)</title><rect x="307.8" y="387.0" width="11.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="310.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (15 samples, 1.00%)</title><rect x="307.8" y="371.0" width="11.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="310.8" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (15 samples, 1.00%)</title><rect x="307.8" y="355.0" width="11.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="310.8" y="366.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (15 samples, 1.00%)</title><rect x="307.8" y="339.0" width="11.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="310.8" y="350.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (15 samples, 1.00%)</title><rect x="307.8" y="323.0" width="11.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="310.8" y="334.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (15 samples, 1.00%)</title><rect x="307.8" y="307.0" width="11.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="310.8" y="318.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (15 samples, 1.00%)</title><rect x="307.8" y="291.0" width="11.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="310.8" y="302.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (4 samples, 0.27%)</title><rect x="309.3" y="275.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="312.3" y="286.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (4 samples, 0.27%)</title><rect x="309.3" y="259.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="312.3" y="270.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(KlassHandle, int, int, Thread*) (2 samples, 0.13%)</title><rect x="310.1" y="243.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="313.1" y="254.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.07%)</title><rect x="311.7" y="243.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="314.7" y="254.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(KlassHandle, int, int, Thread*) (1 samples, 0.07%)</title><rect x="311.7" y="227.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="314.7" y="238.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (4 samples, 0.27%)</title><rect x="312.5" y="275.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="315.5" y="286.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.07%)</title><rect x="314.8" y="259.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="317.8" y="270.0"></text>
</g>
<g>
<title>CompressedReadStream::read_int() (1 samples, 0.07%)</title><rect x="315.6" y="275.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="318.6" y="286.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.07%)</title><rect x="316.4" y="275.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="319.4" y="286.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.07%)</title><rect x="316.4" y="259.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="319.4" y="270.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.07%)</title><rect x="316.4" y="243.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="319.4" y="254.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.07%)</title><rect x="316.4" y="227.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="319.4" y="238.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.13%)</title><rect x="317.2" y="275.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="320.2" y="286.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (2 samples, 0.13%)</title><rect x="317.2" y="259.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="320.2" y="270.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.07%)</title><rect x="318.0" y="243.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="321.0" y="254.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.07%)</title><rect x="318.0" y="227.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="321.0" y="238.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.07%)</title><rect x="318.0" y="211.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="321.0" y="222.0"></text>
</g>
<g>
<title>void oop_store&lt;unsigned int&gt;(unsigned int volatile*, oopDesc*) (1 samples, 0.07%)</title><rect x="318.8" y="275.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="321.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (1 samples, 0.07%)</title><rect x="319.6" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="322.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.07%)</title><rect x="319.6" y="371.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="322.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (1 samples, 0.07%)</title><rect x="319.6" y="355.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="322.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.getProbe (1 samples, 0.07%)</title><rect x="319.6" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="322.6" y="350.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.removeTask (1 samples, 0.07%)</title><rect x="320.4" y="419.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="323.4" y="430.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="320.4" y="403.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="323.4" y="414.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageAggregator.decode (2 samples, 0.13%)</title><rect x="321.1" y="627.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="324.1" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.alloc (1 samples, 0.07%)</title><rect x="321.1" y="611.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="324.1" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.channel (1 samples, 0.07%)</title><rect x="321.1" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.1" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.isContentLengthInvalid (1 samples, 0.07%)</title><rect x="321.9" y="611.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="324.9" y="622.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.isContentLengthInvalid (1 samples, 0.07%)</title><rect x="321.9" y="595.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="324.9" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.getContentLength (1 samples, 0.07%)</title><rect x="321.9" y="579.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.9" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.getWebSocketContentLength (1 samples, 0.07%)</title><rect x="321.9" y="563.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="324.9" y="574.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.contains (1 samples, 0.07%)</title><rect x="321.9" y="547.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.9" y="558.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.contains (1 samples, 0.07%)</title><rect x="321.9" y="531.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="324.9" y="542.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (1 samples, 0.07%)</title><rect x="322.7" y="627.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="325.7" y="638.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (332 samples, 22.16%)</title><rect x="323.5" y="755.0" width="261.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="326.5" y="766.0">io/netty/handler/codec/ByteToMessag..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.callDecode (305 samples, 20.36%)</title><rect x="323.5" y="739.0" width="240.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="326.5" y="750.0">io/netty/handler/codec/ByteToMes..</text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.isReadable (1 samples, 0.07%)</title><rect x="324.3" y="723.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="327.3" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (214 samples, 14.29%)</title><rect x="325.1" y="723.0" width="168.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="328.1" y="734.0">io/netty/handler/codec..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (214 samples, 14.29%)</title><rect x="325.1" y="707.0" width="168.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="328.1" y="718.0">io/netty/handler/codec..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (214 samples, 14.29%)</title><rect x="325.1" y="691.0" width="168.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="328.1" y="702.0">io/netty/channel/Abstr..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (214 samples, 14.29%)</title><rect x="325.1" y="675.0" width="168.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.1" y="686.0">io/netty/channel/Abstr..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (213 samples, 14.22%)</title><rect x="325.1" y="659.0" width="167.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="328.1" y="670.0">io/netty/channel/Abst..</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (212 samples, 14.15%)</title><rect x="325.9" y="643.0" width="167.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="328.9" y="654.0">io/netty/channel/Simp..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (212 samples, 14.15%)</title><rect x="325.9" y="627.0" width="167.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.9" y="638.0">com/tinysakura/xhaka/..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (212 samples, 14.15%)</title><rect x="325.9" y="611.0" width="167.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="328.9" y="622.0">com/tinysakura/xhaka/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (35 samples, 2.34%)</title><rect x="325.9" y="595.0" width="27.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="328.9" y="606.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (35 samples, 2.34%)</title><rect x="325.9" y="579.0" width="27.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.9" y="590.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (35 samples, 2.34%)</title><rect x="325.9" y="563.0" width="27.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="328.9" y="574.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (34 samples, 2.27%)</title><rect x="325.9" y="547.0" width="26.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="328.9" y="558.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (34 samples, 2.27%)</title><rect x="325.9" y="531.0" width="26.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="328.9" y="542.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (34 samples, 2.27%)</title><rect x="325.9" y="515.0" width="26.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.9" y="526.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (34 samples, 2.27%)</title><rect x="325.9" y="499.0" width="26.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="328.9" y="510.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (34 samples, 2.27%)</title><rect x="325.9" y="483.0" width="26.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="328.9" y="494.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (34 samples, 2.27%)</title><rect x="325.9" y="467.0" width="26.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="328.9" y="478.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (4 samples, 0.27%)</title><rect x="325.9" y="451.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="328.9" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (4 samples, 0.27%)</title><rect x="325.9" y="435.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.9" y="446.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.27%)</title><rect x="325.9" y="419.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.9" y="430.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.27%)</title><rect x="325.9" y="403.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="328.9" y="414.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (4 samples, 0.27%)</title><rect x="325.9" y="387.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="328.9" y="398.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (4 samples, 0.27%)</title><rect x="325.9" y="371.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="328.9" y="382.0"></text>
</g>
<g>
<title>java/lang/Object.toString (4 samples, 0.27%)</title><rect x="325.9" y="355.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="328.9" y="366.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.07%)</title><rect x="325.9" y="339.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.9" y="350.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.07%)</title><rect x="325.9" y="323.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="328.9" y="334.0"></text>
</g>
<g>
<title>ReadStableMark(oopDesc*) (1 samples, 0.07%)</title><rect x="325.9" y="307.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="328.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.20%)</title><rect x="326.7" y="339.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.7" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.20%)</title><rect x="326.7" y="323.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="329.7" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.07%)</title><rect x="327.4" y="307.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.4" y="318.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="328.2" y="307.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="331.2" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (23 samples, 1.54%)</title><rect x="329.0" y="451.0" width="18.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="332.0" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.07%)</title><rect x="329.0" y="435.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="332.0" y="446.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.07%)</title><rect x="329.0" y="419.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.0" y="430.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.07%)</title><rect x="329.0" y="403.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.0" y="414.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.07%)</title><rect x="329.0" y="387.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="332.0" y="398.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.07%)</title><rect x="329.0" y="371.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="332.0" y="382.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.07%)</title><rect x="329.0" y="355.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="332.0" y="366.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.07%)</title><rect x="329.0" y="339.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="332.0" y="350.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.07%)</title><rect x="329.0" y="323.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="332.0" y="334.0"></text>
</g>
<g>
<title>write (1 samples, 0.07%)</title><rect x="329.0" y="307.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="332.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (20 samples, 1.34%)</title><rect x="329.8" y="435.0" width="15.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="332.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (20 samples, 1.34%)</title><rect x="329.8" y="419.0" width="15.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="332.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (20 samples, 1.34%)</title><rect x="329.8" y="403.0" width="15.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="332.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (20 samples, 1.34%)</title><rect x="329.8" y="387.0" width="15.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="332.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (20 samples, 1.34%)</title><rect x="329.8" y="371.0" width="15.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="332.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (20 samples, 1.34%)</title><rect x="329.8" y="355.0" width="15.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="332.8" y="366.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (20 samples, 1.34%)</title><rect x="329.8" y="339.0" width="15.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="332.8" y="350.0"></text>
</g>
<g>
<title>Unsafe_Park (19 samples, 1.27%)</title><rect x="330.6" y="323.0" width="15.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="333.6" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (19 samples, 1.27%)</title><rect x="330.6" y="307.0" width="15.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="333.6" y="318.0"></text>
</g>
<g>
<title>__psynch_cvwait (19 samples, 1.27%)</title><rect x="330.6" y="291.0" width="15.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="333.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.13%)</title><rect x="345.6" y="435.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="348.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.13%)</title><rect x="345.6" y="419.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="348.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.13%)</title><rect x="345.6" y="403.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="348.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.13%)</title><rect x="345.6" y="387.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="348.6" y="398.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (2 samples, 0.13%)</title><rect x="345.6" y="371.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="348.6" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.13%)</title><rect x="345.6" y="355.0" width="1.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="348.6" y="366.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.07%)</title><rect x="346.4" y="339.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="349.4" y="350.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (1 samples, 0.07%)</title><rect x="346.4" y="323.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="349.4" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (7 samples, 0.47%)</title><rect x="347.1" y="451.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="350.1" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (6 samples, 0.40%)</title><rect x="347.1" y="435.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="350.1" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (6 samples, 0.40%)</title><rect x="347.1" y="419.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="350.1" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (6 samples, 0.40%)</title><rect x="347.1" y="403.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="350.1" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/Converter.write (1 samples, 0.07%)</title><rect x="347.1" y="387.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="350.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="347.1" y="371.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="350.1" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="347.1" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="350.1" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (5 samples, 0.33%)</title><rect x="347.9" y="387.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="350.9" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (2 samples, 0.13%)</title><rect x="347.9" y="371.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="350.9" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (2 samples, 0.13%)</title><rect x="347.9" y="355.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="350.9" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.13%)</title><rect x="347.9" y="339.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="350.9" y="350.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.07%)</title><rect x="347.9" y="323.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="350.9" y="334.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.07%)</title><rect x="347.9" y="307.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="350.9" y="318.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.07%)</title><rect x="348.7" y="323.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="351.7" y="334.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.07%)</title><rect x="348.7" y="307.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="351.7" y="318.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.07%)</title><rect x="348.7" y="291.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="351.7" y="302.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (1 samples, 0.07%)</title><rect x="348.7" y="275.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="351.7" y="286.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (1 samples, 0.07%)</title><rect x="348.7" y="259.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="351.7" y="270.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.07%)</title><rect x="348.7" y="243.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="351.7" y="254.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.07%)</title><rect x="348.7" y="227.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="351.7" y="238.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.subformat (1 samples, 0.07%)</title><rect x="348.7" y="211.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="351.7" y="222.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.append (1 samples, 0.07%)</title><rect x="348.7" y="195.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="351.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (1 samples, 0.07%)</title><rect x="348.7" y="179.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="351.7" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (3 samples, 0.20%)</title><rect x="349.5" y="371.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="352.5" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (3 samples, 0.20%)</title><rect x="349.5" y="355.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="352.5" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.abbreviate (3 samples, 0.20%)</title><rect x="349.5" y="339.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="352.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.07%)</title><rect x="351.1" y="323.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="354.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="351.1" y="307.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="354.1" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="351.1" y="291.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="354.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="351.1" y="275.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="354.1" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (1 samples, 0.07%)</title><rect x="351.9" y="435.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="354.9" y="446.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.07%)</title><rect x="351.9" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="354.9" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.07%)</title><rect x="351.9" y="403.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="354.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.07%)</title><rect x="351.9" y="387.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="354.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (1 samples, 0.07%)</title><rect x="351.9" y="371.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="354.9" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (1 samples, 0.07%)</title><rect x="352.7" y="547.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="355.7" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.07%)</title><rect x="352.7" y="531.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="355.7" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (177 samples, 11.82%)</title><rect x="353.4" y="595.0" width="139.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="356.4" y="606.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (177 samples, 11.82%)</title><rect x="353.4" y="579.0" width="139.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="356.4" y="590.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (176 samples, 11.75%)</title><rect x="353.4" y="563.0" width="138.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.4" y="574.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (176 samples, 11.75%)</title><rect x="353.4" y="547.0" width="138.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="356.4" y="558.0">io/netty/handler/..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/Xhaka2FullHttpResponseDecoder.decode (24 samples, 1.60%)</title><rect x="354.2" y="531.0" width="18.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="357.2" y="542.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/Xhaka2FullHttpResponseDecoder.decode (24 samples, 1.60%)</title><rect x="354.2" y="515.0" width="18.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="357.2" y="526.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpResponseProtobufTypeSerialize.deserialize (24 samples, 1.60%)</title><rect x="354.2" y="499.0" width="18.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="357.2" y="510.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpResponseProtobufTypeSerialize.deserialize (24 samples, 1.60%)</title><rect x="354.2" y="483.0" width="18.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="357.2" y="494.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.toByteArray (1 samples, 0.07%)</title><rect x="354.2" y="467.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.2" y="478.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$LiteralByteString.copyToInternal (1 samples, 0.07%)</title><rect x="354.2" y="451.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="357.2" y="462.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="354.2" y="435.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="357.2" y="446.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse.parseFrom (13 samples, 0.87%)</title><rect x="355.0" y="467.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="358.0" y="478.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (13 samples, 0.87%)</title><rect x="355.0" y="451.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="358.0" y="462.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (13 samples, 0.87%)</title><rect x="355.0" y="435.0" width="10.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="358.0" y="446.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (13 samples, 0.87%)</title><rect x="355.0" y="419.0" width="10.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="358.0" y="430.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (13 samples, 0.87%)</title><rect x="355.0" y="403.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.0" y="414.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (13 samples, 0.87%)</title><rect x="355.0" y="387.0" width="10.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.0" y="398.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse$1.parsePartialFrom (13 samples, 0.87%)</title><rect x="355.0" y="371.0" width="10.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="358.0" y="382.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse$1.parsePartialFrom (13 samples, 0.87%)</title><rect x="355.0" y="355.0" width="10.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="358.0" y="366.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse.&lt;init&gt; (13 samples, 0.87%)</title><rect x="355.0" y="339.0" width="10.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.0" y="350.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse.&lt;init&gt; (13 samples, 0.87%)</title><rect x="355.0" y="323.0" width="10.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="358.0" y="334.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readBytes (1 samples, 0.07%)</title><rect x="355.8" y="307.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="358.8" y="318.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFrom (1 samples, 0.07%)</title><rect x="355.8" y="291.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.8" y="302.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString$ArraysByteArrayCopier.copyFrom (1 samples, 0.07%)</title><rect x="355.8" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="358.8" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="355.8" y="259.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="355.8" y="243.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="358.8" y="254.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="355.8" y="227.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="358.8" y="238.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (11 samples, 0.73%)</title><rect x="356.6" y="307.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="359.6" y="318.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.popLimit (2 samples, 0.13%)</title><rect x="356.6" y="291.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="359.6" y="302.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HeaderOuterClass$Header$1.parsePartialFrom (2 samples, 0.13%)</title><rect x="356.6" y="275.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="359.6" y="286.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HeaderOuterClass$Header$1.parsePartialFrom (9 samples, 0.60%)</title><rect x="358.2" y="291.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="361.2" y="302.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HeaderOuterClass$Header$1.parsePartialFrom (9 samples, 0.60%)</title><rect x="358.2" y="275.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="361.2" y="286.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HeaderOuterClass$Header.&lt;init&gt; (9 samples, 0.60%)</title><rect x="358.2" y="259.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="361.2" y="270.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HeaderOuterClass$Header.&lt;init&gt; (9 samples, 0.60%)</title><rect x="358.2" y="243.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="361.2" y="254.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readStringRequireUtf8 (9 samples, 0.60%)</title><rect x="358.2" y="227.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="361.2" y="238.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8.isValidUtf8 (2 samples, 0.13%)</title><rect x="358.2" y="211.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="361.2" y="222.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8$Processor.isValidUtf8 (2 samples, 0.13%)</title><rect x="358.2" y="195.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="361.2" y="206.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8$UnsafeProcessor.partialIsValidUtf8 (2 samples, 0.13%)</title><rect x="358.2" y="179.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="361.2" y="190.0"></text>
</g>
<g>
<title>com/google/protobuf/Utf8$UnsafeProcessor.partialIsValidUtf8 (2 samples, 0.13%)</title><rect x="358.2" y="163.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="361.2" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.47%)</title><rect x="359.7" y="211.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="362.7" y="222.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (7 samples, 0.47%)</title><rect x="359.7" y="195.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="362.1" y="179.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.1" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="362.1" y="163.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="365.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8.newDecoder (3 samples, 0.20%)</title><rect x="362.9" y="179.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="365.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Decoder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="364.5" y="163.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="367.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Decoder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="364.5" y="147.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="367.5" y="158.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="364.5" y="131.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="367.5" y="142.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="364.5" y="115.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="367.5" y="126.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.atBugLevel (1 samples, 0.07%)</title><rect x="364.5" y="99.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="367.5" y="110.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.07%)</title><rect x="364.5" y="83.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="367.5" y="94.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (1 samples, 0.07%)</title><rect x="365.3" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="368.3" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (1 samples, 0.07%)</title><rect x="365.3" y="451.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.3" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable (1 samples, 0.07%)</title><rect x="365.3" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.3" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable0 (1 samples, 0.07%)</title><rect x="365.3" y="419.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="368.3" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writableBytes (1 samples, 0.07%)</title><rect x="365.3" y="403.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="368.3" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.capacity (1 samples, 0.07%)</title><rect x="365.3" y="387.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="368.3" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.07%)</title><rect x="366.0" y="467.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="369.0" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.07%)</title><rect x="366.0" y="451.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="369.0" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1 samples, 0.07%)</title><rect x="366.0" y="435.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="369.0" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.07%)</title><rect x="366.0" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="369.0" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.07%)</title><rect x="366.0" y="403.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="369.0" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (1 samples, 0.07%)</title><rect x="366.0" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="369.0" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (1 samples, 0.07%)</title><rect x="366.0" y="371.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="369.0" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.init (1 samples, 0.07%)</title><rect x="366.0" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="369.0" y="366.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init (1 samples, 0.07%)</title><rect x="366.0" y="339.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="369.0" y="350.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.add (7 samples, 0.47%)</title><rect x="366.8" y="467.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="369.8" y="478.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.addObject (7 samples, 0.47%)</title><rect x="366.8" y="451.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="369.8" y="462.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add (3 samples, 0.20%)</title><rect x="366.8" y="435.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="369.8" y="446.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add0 (1 samples, 0.07%)</title><rect x="366.8" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="369.8" y="430.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.newHeaderEntry (1 samples, 0.07%)</title><rect x="366.8" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="369.8" y="414.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.hashCode (2 samples, 0.13%)</title><rect x="367.6" y="419.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="370.6" y="430.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.hashCode (1 samples, 0.07%)</title><rect x="367.6" y="403.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="370.6" y="414.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString.hashCode (1 samples, 0.07%)</title><rect x="367.6" y="387.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="370.6" y="398.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.hashCodeAscii (1 samples, 0.07%)</title><rect x="367.6" y="371.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="370.6" y="382.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.hashCodeAsciiSanitizeInt (1 samples, 0.07%)</title><rect x="367.6" y="355.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="370.6" y="366.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.hashCodeAscii (1 samples, 0.07%)</title><rect x="368.4" y="403.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="371.4" y="414.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (4 samples, 0.27%)</title><rect x="369.2" y="435.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="372.2" y="446.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (4 samples, 0.27%)</title><rect x="369.2" y="419.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="372.2" y="430.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.validateValueChar (1 samples, 0.07%)</title><rect x="369.2" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="372.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="369.2" y="387.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="372.2" y="398.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.07%)</title><rect x="369.2" y="371.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="372.2" y="382.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="370.0" y="403.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="373.0" y="414.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="370.8" y="403.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="373.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="371.6" y="403.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="374.6" y="414.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="371.6" y="387.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="374.6" y="398.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.next (1 samples, 0.07%)</title><rect x="372.3" y="467.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="375.3" y="478.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="372.3" y="451.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="375.3" y="462.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (150 samples, 10.01%)</title><rect x="373.1" y="531.0" width="118.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="376.1" y="542.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (150 samples, 10.01%)</title><rect x="373.1" y="515.0" width="118.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="376.1" y="526.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.executor (1 samples, 0.07%)</title><rect x="373.1" y="499.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.1" y="510.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="373.1" y="483.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="376.1" y="494.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (148 samples, 9.88%)</title><rect x="373.9" y="499.0" width="116.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.9" y="510.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (148 samples, 9.88%)</title><rect x="373.9" y="483.0" width="116.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="376.9" y="494.0">io/netty/chann..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/SlaveXhakaHttpServletResponsehHandler.channelRead0 (144 samples, 9.61%)</title><rect x="373.9" y="467.0" width="113.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="376.9" y="478.0">com/tinysakura..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/SlaveXhakaHttpServletResponsehHandler.channelRead0 (144 samples, 9.61%)</title><rect x="373.9" y="451.0" width="113.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.9" y="462.0">com/tinysakura..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (17 samples, 1.13%)</title><rect x="373.9" y="435.0" width="13.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="376.9" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (17 samples, 1.13%)</title><rect x="373.9" y="419.0" width="13.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="376.9" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (16 samples, 1.07%)</title><rect x="374.7" y="403.0" width="12.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="377.7" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (15 samples, 1.00%)</title><rect x="374.7" y="387.0" width="11.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="377.7" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (15 samples, 1.00%)</title><rect x="374.7" y="371.0" width="11.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="377.7" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (15 samples, 1.00%)</title><rect x="374.7" y="355.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="377.7" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (15 samples, 1.00%)</title><rect x="374.7" y="339.0" width="11.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="377.7" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (15 samples, 1.00%)</title><rect x="374.7" y="323.0" width="11.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="377.7" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (15 samples, 1.00%)</title><rect x="374.7" y="307.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="377.7" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (5 samples, 0.33%)</title><rect x="374.7" y="291.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="377.7" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (5 samples, 0.33%)</title><rect x="374.7" y="275.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="377.7" y="286.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (5 samples, 0.33%)</title><rect x="374.7" y="259.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="377.7" y="270.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (5 samples, 0.33%)</title><rect x="374.7" y="243.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="377.7" y="254.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.13%)</title><rect x="375.5" y="227.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="378.5" y="238.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="376.3" y="211.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="379.3" y="222.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.07%)</title><rect x="377.1" y="227.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="380.1" y="238.0"></text>
</g>
<g>
<title>java/lang/Class.isArray (1 samples, 0.07%)</title><rect x="377.1" y="211.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.1" y="222.0"></text>
</g>
<g>
<title>JVM_IsArrayClass (1 samples, 0.07%)</title><rect x="377.1" y="195.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="380.1" y="206.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.07%)</title><rect x="377.1" y="179.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="380.1" y="190.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.isEscapedDelimeter (1 samples, 0.07%)</title><rect x="377.9" y="227.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="380.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="377.9" y="211.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="380.9" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (6 samples, 0.40%)</title><rect x="378.7" y="291.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="381.7" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (2 samples, 0.13%)</title><rect x="378.7" y="275.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="381.7" y="286.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (2 samples, 0.13%)</title><rect x="378.7" y="259.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="381.7" y="270.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (2 samples, 0.13%)</title><rect x="378.7" y="243.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="381.7" y="254.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (2 samples, 0.13%)</title><rect x="378.7" y="227.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="381.7" y="238.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (2 samples, 0.13%)</title><rect x="378.7" y="211.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="381.7" y="222.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (2 samples, 0.13%)</title><rect x="378.7" y="195.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="381.7" y="206.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (2 samples, 0.13%)</title><rect x="378.7" y="179.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="381.7" y="190.0"></text>
</g>
<g>
<title>writeBytes (2 samples, 0.13%)</title><rect x="378.7" y="163.0" width="1.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="381.7" y="174.0"></text>
</g>
<g>
<title>write (2 samples, 0.13%)</title><rect x="378.7" y="147.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="381.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.27%)</title><rect x="380.2" y="275.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (4 samples, 0.27%)</title><rect x="380.2" y="259.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.27%)</title><rect x="380.2" y="243.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="383.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.27%)</title><rect x="380.2" y="227.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="383.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.27%)</title><rect x="380.2" y="211.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="383.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.27%)</title><rect x="380.2" y="195.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="383.2" y="206.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (4 samples, 0.27%)</title><rect x="380.2" y="179.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="383.2" y="190.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.27%)</title><rect x="380.2" y="163.0" width="3.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="383.2" y="174.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.27%)</title><rect x="380.2" y="147.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="383.2" y="158.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 0.27%)</title><rect x="380.2" y="131.0" width="3.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="383.2" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (4 samples, 0.27%)</title><rect x="383.4" y="291.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="386.4" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (4 samples, 0.27%)</title><rect x="383.4" y="275.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.4" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (4 samples, 0.27%)</title><rect x="383.4" y="259.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="386.4" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (4 samples, 0.27%)</title><rect x="383.4" y="243.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="386.4" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (4 samples, 0.27%)</title><rect x="383.4" y="227.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.4" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.07%)</title><rect x="383.4" y="211.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="386.4" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.07%)</title><rect x="383.4" y="195.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.4" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.07%)</title><rect x="383.4" y="179.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="386.4" y="190.0"></text>
</g>
<g>
<title>Runtime1::monitorexit(JavaThread*, BasicObjectLock*) (1 samples, 0.07%)</title><rect x="383.4" y="163.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="386.4" y="174.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.07%)</title><rect x="383.4" y="147.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="386.4" y="158.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.07%)</title><rect x="383.4" y="131.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="386.4" y="142.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (1 samples, 0.07%)</title><rect x="383.4" y="115.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="386.4" y="126.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (3 samples, 0.20%)</title><rect x="384.2" y="211.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.2" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (3 samples, 0.20%)</title><rect x="384.2" y="195.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.2" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.abbreviate (3 samples, 0.20%)</title><rect x="384.2" y="179.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="387.2" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.computeDotIndexes (1 samples, 0.07%)</title><rect x="384.2" y="163.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="387.2" y="174.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="384.2" y="147.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.07%)</title><rect x="385.0" y="163.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="388.0" y="174.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.07%)</title><rect x="385.7" y="163.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="388.7" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="385.7" y="147.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="388.7" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="385.7" y="131.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="388.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="385.7" y="115.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.7" y="126.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (1 samples, 0.07%)</title><rect x="386.5" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.5" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.extractThrowableAnRearrangeArguments (1 samples, 0.07%)</title><rect x="386.5" y="371.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="389.5" y="382.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.received (125 samples, 8.34%)</title><rect x="387.3" y="435.0" width="98.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.3" y="446.0">com/tinysaku..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.doReceived (122 samples, 8.14%)</title><rect x="387.3" y="419.0" width="96.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.3" y="430.0">com/tinysak..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (20 samples, 1.34%)</title><rect x="387.3" y="403.0" width="15.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="390.3" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (20 samples, 1.34%)</title><rect x="387.3" y="387.0" width="15.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.3" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (20 samples, 1.34%)</title><rect x="387.3" y="371.0" width="15.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.3" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (20 samples, 1.34%)</title><rect x="387.3" y="355.0" width="15.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.3" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (20 samples, 1.34%)</title><rect x="387.3" y="339.0" width="15.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.3" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (20 samples, 1.34%)</title><rect x="387.3" y="323.0" width="15.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="390.3" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (20 samples, 1.34%)</title><rect x="387.3" y="307.0" width="15.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.3" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (20 samples, 1.34%)</title><rect x="387.3" y="291.0" width="15.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="390.3" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (20 samples, 1.34%)</title><rect x="387.3" y="275.0" width="15.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="390.3" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (4 samples, 0.27%)</title><rect x="387.3" y="259.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.3" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (4 samples, 0.27%)</title><rect x="387.3" y="243.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="390.3" y="254.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.27%)</title><rect x="387.3" y="227.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.3" y="238.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.27%)</title><rect x="387.3" y="211.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.3" y="222.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.13%)</title><rect x="387.3" y="195.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="390.3" y="206.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="388.1" y="179.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="391.1" y="190.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="388.9" y="195.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="391.9" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="388.9" y="179.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.9" y="190.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.07%)</title><rect x="389.7" y="195.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="392.7" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="389.7" y="179.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="392.7" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="389.7" y="163.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="392.7" y="174.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="389.7" y="147.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="392.7" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (9 samples, 0.60%)</title><rect x="390.5" y="259.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="393.5" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (4 samples, 0.27%)</title><rect x="390.5" y="243.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="393.5" y="254.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (4 samples, 0.27%)</title><rect x="390.5" y="227.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="393.5" y="238.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (4 samples, 0.27%)</title><rect x="390.5" y="211.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="393.5" y="222.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (4 samples, 0.27%)</title><rect x="390.5" y="195.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="393.5" y="206.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (4 samples, 0.27%)</title><rect x="390.5" y="179.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="393.5" y="190.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (4 samples, 0.27%)</title><rect x="390.5" y="163.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="393.5" y="174.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (4 samples, 0.27%)</title><rect x="390.5" y="147.0" width="3.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="393.5" y="158.0"></text>
</g>
<g>
<title>writeBytes (4 samples, 0.27%)</title><rect x="390.5" y="131.0" width="3.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="393.5" y="142.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.07%)</title><rect x="390.5" y="115.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="393.5" y="126.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.07%)</title><rect x="390.5" y="99.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="393.5" y="110.0"></text>
</g>
<g>
<title>jni_GetArrayLength (1 samples, 0.07%)</title><rect x="391.3" y="115.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="394.3" y="126.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.07%)</title><rect x="391.3" y="99.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="394.3" y="110.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.07%)</title><rect x="392.0" y="115.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="395.0" y="126.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.07%)</title><rect x="392.0" y="99.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="395.0" y="110.0"></text>
</g>
<g>
<title>write (1 samples, 0.07%)</title><rect x="392.8" y="115.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="395.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.27%)</title><rect x="393.6" y="243.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="396.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (4 samples, 0.27%)</title><rect x="393.6" y="227.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="396.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.27%)</title><rect x="393.6" y="211.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="396.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.27%)</title><rect x="393.6" y="195.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.27%)</title><rect x="393.6" y="179.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.27%)</title><rect x="393.6" y="163.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="396.6" y="174.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (4 samples, 0.27%)</title><rect x="393.6" y="147.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="396.6" y="158.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.27%)</title><rect x="393.6" y="131.0" width="3.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="396.6" y="142.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.27%)</title><rect x="393.6" y="115.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="396.6" y="126.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 0.27%)</title><rect x="393.6" y="99.0" width="3.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="396.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="396.8" y="243.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="396.8" y="227.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="399.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="396.8" y="211.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="396.8" y="195.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="399.8" y="206.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="396.8" y="179.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.8" y="190.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.07%)</title><rect x="396.8" y="163.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="399.8" y="174.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.07%)</title><rect x="396.8" y="147.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="399.8" y="158.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (1 samples, 0.07%)</title><rect x="396.8" y="131.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="399.8" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (7 samples, 0.47%)</title><rect x="397.6" y="259.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="400.6" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (5 samples, 0.33%)</title><rect x="397.6" y="243.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="400.6" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (5 samples, 0.33%)</title><rect x="397.6" y="227.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="400.6" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (5 samples, 0.33%)</title><rect x="397.6" y="211.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="400.6" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (4 samples, 0.27%)</title><rect x="398.3" y="195.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="401.3" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.07%)</title><rect x="398.3" y="179.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.3" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.07%)</title><rect x="398.3" y="163.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="401.3" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.07%)</title><rect x="398.3" y="147.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="401.3" y="158.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.07%)</title><rect x="398.3" y="131.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="401.3" y="142.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.07%)</title><rect x="398.3" y="115.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="401.3" y="126.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (3 samples, 0.20%)</title><rect x="399.1" y="179.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="402.1" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (3 samples, 0.20%)</title><rect x="399.1" y="163.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.1" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.abbreviate (3 samples, 0.20%)</title><rect x="399.1" y="147.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.20%)</title><rect x="399.1" y="131.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.13%)</title><rect x="399.9" y="115.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="402.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="400.7" y="99.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="403.7" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="400.7" y="83.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="403.7" y="94.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (2 samples, 0.13%)</title><rect x="401.5" y="243.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="404.5" y="254.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.13%)</title><rect x="401.5" y="227.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="404.5" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.13%)</title><rect x="401.5" y="211.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="404.5" y="222.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.13%)</title><rect x="401.5" y="195.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="404.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (2 samples, 0.13%)</title><rect x="401.5" y="179.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="404.5" y="190.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.get (1 samples, 0.07%)</title><rect x="403.1" y="403.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="406.1" y="414.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.get (1 samples, 0.07%)</title><rect x="403.1" y="387.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="406.1" y="398.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils.getAsString (1 samples, 0.07%)</title><rect x="403.1" y="371.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="406.1" y="382.0"></text>
</g>
<g>
<title>java/lang/String.toString (1 samples, 0.07%)</title><rect x="403.1" y="355.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="406.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (101 samples, 6.74%)</title><rect x="403.9" y="403.0" width="79.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.9" y="414.0">java/util..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (1 samples, 0.07%)</title><rect x="403.9" y="387.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (100 samples, 6.68%)</title><rect x="404.6" y="387.0" width="78.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.6" y="398.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (100 samples, 6.68%)</title><rect x="404.6" y="371.0" width="78.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.6" y="382.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (100 samples, 6.68%)</title><rect x="404.6" y="355.0" width="78.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.6" y="366.0">java/util..</text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (100 samples, 6.68%)</title><rect x="404.6" y="339.0" width="78.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.6" y="350.0">sun/misc/..</text>
</g>
<g>
<title>Unsafe_Unpark (99 samples, 6.61%)</title><rect x="404.6" y="323.0" width="78.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="407.6" y="334.0">Unsafe_Un..</text>
</g>
<g>
<title>Parker::unpark() (35 samples, 2.34%)</title><rect x="405.4" y="307.0" width="27.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="408.4" y="318.0">P..</text>
</g>
<g>
<title>__psynch_cvsignal (33 samples, 2.20%)</title><rect x="405.4" y="291.0" width="26.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="408.4" y="302.0">_..</text>
</g>
<g>
<title>_pthread_cond_updateval (1 samples, 0.07%)</title><rect x="431.4" y="291.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="434.4" y="302.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.07%)</title><rect x="432.2" y="291.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="435.2" y="302.0"></text>
</g>
<g>
<title>_pthread_cond_updateval (1 samples, 0.07%)</title><rect x="432.2" y="275.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="435.2" y="286.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (63 samples, 4.21%)</title><rect x="433.0" y="307.0" width="49.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="436.0" y="318.0">_pthr..</text>
</g>
<g>
<title>__psynch_mutexdrop (63 samples, 4.21%)</title><rect x="433.0" y="291.0" width="49.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="436.0" y="302.0">__psy..</text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.07%)</title><rect x="482.6" y="323.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="485.6" y="334.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.get (1 samples, 0.07%)</title><rect x="483.4" y="419.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="486.4" y="430.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.get (1 samples, 0.07%)</title><rect x="483.4" y="403.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="486.4" y="414.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils.getAsString (1 samples, 0.07%)</title><rect x="483.4" y="387.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.4" y="398.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.get (1 samples, 0.07%)</title><rect x="483.4" y="371.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.4" y="382.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.hashCode (1 samples, 0.07%)</title><rect x="483.4" y="355.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.4" y="366.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.hashCode (1 samples, 0.07%)</title><rect x="483.4" y="339.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="486.4" y="350.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString.hashCode (1 samples, 0.07%)</title><rect x="483.4" y="323.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.4" y="334.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.hashCodeAscii (1 samples, 0.07%)</title><rect x="483.4" y="307.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.4" y="318.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.hashCodeAsciiCompute (1 samples, 0.07%)</title><rect x="483.4" y="291.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.4" y="302.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.hashCodeAsciiSanitizeInt (1 samples, 0.07%)</title><rect x="483.4" y="275.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.4" y="286.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="483.4" y="259.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="486.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.13%)</title><rect x="484.2" y="419.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.2" y="430.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.get (2 samples, 0.13%)</title><rect x="485.8" y="435.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="488.8" y="446.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.get (2 samples, 0.13%)</title><rect x="485.8" y="419.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="488.8" y="430.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils.getAsString (2 samples, 0.13%)</title><rect x="485.8" y="403.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="488.8" y="414.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.get (2 samples, 0.13%)</title><rect x="485.8" y="387.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.8" y="398.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.equals (1 samples, 0.07%)</title><rect x="485.8" y="371.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="488.8" y="382.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.hashCode (1 samples, 0.07%)</title><rect x="486.6" y="371.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="489.6" y="382.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString$1.hashCode (1 samples, 0.07%)</title><rect x="486.6" y="355.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="489.6" y="366.0"></text>
</g>
<g>
<title>io/netty/util/AsciiString.hashCode (1 samples, 0.07%)</title><rect x="486.6" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="489.6" y="350.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.hashCodeAscii (1 samples, 0.07%)</title><rect x="486.6" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="489.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.07%)</title><rect x="486.6" y="307.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="489.6" y="318.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (4 samples, 0.27%)</title><rect x="487.4" y="467.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="490.4" y="478.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.release (4 samples, 0.27%)</title><rect x="487.4" y="451.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="490.4" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (4 samples, 0.27%)</title><rect x="487.4" y="435.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.4" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (4 samples, 0.27%)</title><rect x="487.4" y="419.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.4" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (4 samples, 0.27%)</title><rect x="487.4" y="403.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.4" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.freeChunk (4 samples, 0.27%)</title><rect x="487.4" y="387.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.4" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunkList.free (4 samples, 0.27%)</title><rect x="487.4" y="371.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.4" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.free (4 samples, 0.27%)</title><rect x="487.4" y="355.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.4" y="366.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.07%)</title><rect x="487.4" y="339.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="490.4" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="487.4" y="323.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="490.4" y="334.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.runLength (3 samples, 0.20%)</title><rect x="488.1" y="339.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="491.1" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.depth (3 samples, 0.20%)</title><rect x="488.1" y="323.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="491.1" y="334.0"></text>
</g>
<g>
<title>Runtime1::monitorexit(JavaThread*, BasicObjectLock*) (3 samples, 0.20%)</title><rect x="488.1" y="307.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="491.1" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (2 samples, 0.13%)</title><rect x="488.1" y="291.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="491.1" y="302.0"></text>
</g>
<g>
<title>JfrBackend::is_event_enabled(TraceEventId) (1 samples, 0.07%)</title><rect x="488.9" y="275.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="491.9" y="286.0"></text>
</g>
<g>
<title>YieldingFlexibleGangWorker::~YieldingFlexibleGangWorker() (1 samples, 0.07%)</title><rect x="489.7" y="291.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="492.7" y="302.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="490.5" y="499.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="493.5" y="510.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (1 samples, 0.07%)</title><rect x="491.3" y="531.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="494.3" y="542.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="491.3" y="515.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="494.3" y="526.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractEventExecutor.inEventLoop (1 samples, 0.07%)</title><rect x="492.1" y="563.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="495.1" y="574.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.inEventLoop (1 samples, 0.07%)</title><rect x="492.1" y="547.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="495.1" y="558.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractEventExecutor.inEventLoop (1 samples, 0.07%)</title><rect x="492.9" y="659.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="495.9" y="670.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (1 samples, 0.07%)</title><rect x="492.9" y="643.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="495.9" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (1 samples, 0.07%)</title><rect x="492.9" y="627.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="495.9" y="638.0"></text>
</g>
<g>
<title>io/netty/handler/codec/LengthFieldBasedFrameDecoder.decode (89 samples, 5.94%)</title><rect x="493.7" y="723.0" width="70.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="496.7" y="734.0">io/netty..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/XhakaDecoder.decode (89 samples, 5.94%)</title><rect x="493.7" y="707.0" width="70.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="496.7" y="718.0">com/tiny..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (81 samples, 5.41%)</title><rect x="493.7" y="691.0" width="63.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="496.7" y="702.0">ch/qos/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (40 samples, 2.67%)</title><rect x="493.7" y="675.0" width="31.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="496.7" y="686.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (40 samples, 2.67%)</title><rect x="493.7" y="659.0" width="31.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="496.7" y="670.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (40 samples, 2.67%)</title><rect x="493.7" y="643.0" width="31.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="496.7" y="654.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (40 samples, 2.67%)</title><rect x="493.7" y="627.0" width="31.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.7" y="638.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (40 samples, 2.67%)</title><rect x="493.7" y="611.0" width="31.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="496.7" y="622.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (40 samples, 2.67%)</title><rect x="493.7" y="595.0" width="31.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="496.7" y="606.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (38 samples, 2.54%)</title><rect x="493.7" y="579.0" width="29.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="496.7" y="590.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (38 samples, 2.54%)</title><rect x="493.7" y="563.0" width="29.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="496.7" y="574.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (3 samples, 0.20%)</title><rect x="493.7" y="547.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.7" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (3 samples, 0.20%)</title><rect x="493.7" y="531.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="496.7" y="542.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (3 samples, 0.20%)</title><rect x="493.7" y="515.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="496.7" y="526.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (3 samples, 0.20%)</title><rect x="493.7" y="499.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="496.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="493.7" y="483.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="496.7" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="493.7" y="467.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="496.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="493.7" y="451.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="496.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.07%)</title><rect x="494.4" y="483.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.4" y="494.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.07%)</title><rect x="495.2" y="483.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="498.2" y="494.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.07%)</title><rect x="495.2" y="467.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="498.2" y="478.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.07%)</title><rect x="495.2" y="451.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.2" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.07%)</title><rect x="495.2" y="435.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="498.2" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (14 samples, 0.93%)</title><rect x="496.0" y="547.0" width="11.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="499.0" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (3 samples, 0.20%)</title><rect x="496.0" y="531.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="499.0" y="542.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (3 samples, 0.20%)</title><rect x="496.0" y="515.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="499.0" y="526.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (3 samples, 0.20%)</title><rect x="496.0" y="499.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="499.0" y="510.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (3 samples, 0.20%)</title><rect x="496.0" y="483.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="499.0" y="494.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (3 samples, 0.20%)</title><rect x="496.0" y="467.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="499.0" y="478.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (3 samples, 0.20%)</title><rect x="496.0" y="451.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="499.0" y="462.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (3 samples, 0.20%)</title><rect x="496.0" y="435.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="499.0" y="446.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (3 samples, 0.20%)</title><rect x="496.0" y="419.0" width="2.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="499.0" y="430.0"></text>
</g>
<g>
<title>writeBytes (3 samples, 0.20%)</title><rect x="496.0" y="403.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="499.0" y="414.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.07%)</title><rect x="496.0" y="387.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="499.0" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.07%)</title><rect x="496.0" y="371.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="499.0" y="382.0"></text>
</g>
<g>
<title>write (2 samples, 0.13%)</title><rect x="496.8" y="387.0" width="1.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="499.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.47%)</title><rect x="498.4" y="531.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="501.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (7 samples, 0.47%)</title><rect x="498.4" y="515.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="501.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.47%)</title><rect x="498.4" y="499.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="501.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (7 samples, 0.47%)</title><rect x="498.4" y="483.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="501.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6 samples, 0.40%)</title><rect x="499.2" y="467.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="502.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.40%)</title><rect x="499.2" y="451.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="502.2" y="462.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (6 samples, 0.40%)</title><rect x="499.2" y="435.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="502.2" y="446.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.40%)</title><rect x="499.2" y="419.0" width="4.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="502.2" y="430.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.40%)</title><rect x="499.2" y="403.0" width="4.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="502.2" y="414.0"></text>
</g>
<g>
<title>__psynch_cvwait (6 samples, 0.40%)</title><rect x="499.2" y="387.0" width="4.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="502.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.27%)</title><rect x="503.9" y="531.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="506.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.27%)</title><rect x="503.9" y="515.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="506.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.27%)</title><rect x="503.9" y="499.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="506.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.20%)</title><rect x="503.9" y="483.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="506.9" y="494.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (3 samples, 0.20%)</title><rect x="503.9" y="467.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.9" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.20%)</title><rect x="503.9" y="451.0" width="2.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="506.9" y="462.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (3 samples, 0.20%)</title><rect x="503.9" y="435.0" width="2.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="506.9" y="446.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (3 samples, 0.20%)</title><rect x="503.9" y="419.0" width="2.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="506.9" y="430.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="506.3" y="483.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="509.3" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (21 samples, 1.40%)</title><rect x="507.0" y="547.0" width="16.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="510.0" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (13 samples, 0.87%)</title><rect x="507.0" y="531.0" width="10.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="510.0" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (13 samples, 0.87%)</title><rect x="507.0" y="515.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="510.0" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (13 samples, 0.87%)</title><rect x="507.0" y="499.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.0" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (10 samples, 0.67%)</title><rect x="507.0" y="483.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="510.0" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.07%)</title><rect x="507.8" y="467.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.8" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.07%)</title><rect x="507.8" y="451.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.8" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.07%)</title><rect x="507.8" y="435.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="510.8" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/MessageConverter.convert (1 samples, 0.07%)</title><rect x="508.6" y="467.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="511.6" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/MessageConverter.convert (1 samples, 0.07%)</title><rect x="508.6" y="451.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="511.6" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (5 samples, 0.33%)</title><rect x="509.4" y="467.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="512.4" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (5 samples, 0.33%)</title><rect x="509.4" y="451.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="512.4" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.abbreviate (5 samples, 0.33%)</title><rect x="509.4" y="435.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="512.4" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.computeDotIndexes (1 samples, 0.07%)</title><rect x="511.0" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="511.0" y="403.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="514.0" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.07%)</title><rect x="511.8" y="419.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="511.8" y="403.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="514.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="511.8" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="514.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="511.8" y="371.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.07%)</title><rect x="512.6" y="419.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="512.6" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="512.6" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="515.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="512.6" y="371.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.13%)</title><rect x="513.4" y="467.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="516.4" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.13%)</title><rect x="513.4" y="451.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="516.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.getChars (1 samples, 0.07%)</title><rect x="514.1" y="435.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.1" y="446.0"></text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 0.07%)</title><rect x="514.1" y="419.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="517.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.13%)</title><rect x="514.9" y="483.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.9" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.13%)</title><rect x="514.9" y="467.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="517.9" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.13%)</title><rect x="514.9" y="451.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="517.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.13%)</title><rect x="514.9" y="435.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="517.9" y="446.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="516.5" y="483.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="519.5" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (8 samples, 0.53%)</title><rect x="517.3" y="531.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="520.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.53%)</title><rect x="517.3" y="515.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="520.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.53%)</title><rect x="517.3" y="499.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="520.3" y="510.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.53%)</title><rect x="517.3" y="483.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="520.3" y="494.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.07%)</title><rect x="517.3" y="467.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="520.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (7 samples, 0.47%)</title><rect x="518.1" y="467.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encode (2 samples, 0.13%)</title><rect x="522.0" y="451.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="525.0" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.13%)</title><rect x="523.6" y="579.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.6" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/FilterAttachableImpl.getFilterChainDecision (1 samples, 0.07%)</title><rect x="524.4" y="563.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="527.4" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (41 samples, 2.74%)</title><rect x="525.2" y="675.0" width="32.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.2" y="686.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (41 samples, 2.74%)</title><rect x="525.2" y="659.0" width="32.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="528.2" y="670.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (41 samples, 2.74%)</title><rect x="525.2" y="643.0" width="32.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.2" y="654.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (41 samples, 2.74%)</title><rect x="525.2" y="627.0" width="32.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.2" y="638.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (41 samples, 2.74%)</title><rect x="525.2" y="611.0" width="32.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.2" y="622.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (41 samples, 2.74%)</title><rect x="525.2" y="595.0" width="32.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.2" y="606.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (41 samples, 2.74%)</title><rect x="525.2" y="579.0" width="32.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.2" y="590.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (41 samples, 2.74%)</title><rect x="525.2" y="563.0" width="32.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="528.2" y="574.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.07%)</title><rect x="525.2" y="547.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="528.2" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.07%)</title><rect x="525.2" y="531.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="528.2" y="542.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.07%)</title><rect x="525.2" y="515.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="528.2" y="526.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.getThrowableCandidate (1 samples, 0.07%)</title><rect x="525.2" y="499.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.2" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (26 samples, 1.74%)</title><rect x="526.0" y="547.0" width="20.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="529.0" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (4 samples, 0.27%)</title><rect x="526.7" y="531.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.7" y="542.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (4 samples, 0.27%)</title><rect x="526.7" y="515.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="529.7" y="526.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (4 samples, 0.27%)</title><rect x="526.7" y="499.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="529.7" y="510.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (4 samples, 0.27%)</title><rect x="526.7" y="483.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="529.7" y="494.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (4 samples, 0.27%)</title><rect x="526.7" y="467.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="529.7" y="478.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (4 samples, 0.27%)</title><rect x="526.7" y="451.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="529.7" y="462.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (3 samples, 0.20%)</title><rect x="527.5" y="435.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="530.5" y="446.0"></text>
</g>
<g>
<title>writeBytes (3 samples, 0.20%)</title><rect x="527.5" y="419.0" width="2.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="530.5" y="430.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.07%)</title><rect x="527.5" y="403.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="530.5" y="414.0"></text>
</g>
<g>
<title>write (2 samples, 0.13%)</title><rect x="528.3" y="403.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="531.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (17 samples, 1.13%)</title><rect x="529.9" y="531.0" width="13.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (17 samples, 1.13%)</title><rect x="529.9" y="515.0" width="13.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (17 samples, 1.13%)</title><rect x="529.9" y="499.0" width="13.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="532.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (17 samples, 1.13%)</title><rect x="529.9" y="483.0" width="13.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="532.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (17 samples, 1.13%)</title><rect x="529.9" y="467.0" width="13.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="532.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (17 samples, 1.13%)</title><rect x="529.9" y="451.0" width="13.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="532.9" y="462.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (17 samples, 1.13%)</title><rect x="529.9" y="435.0" width="13.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="532.9" y="446.0"></text>
</g>
<g>
<title>Unsafe_Park (17 samples, 1.13%)</title><rect x="529.9" y="419.0" width="13.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="532.9" y="430.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (17 samples, 1.13%)</title><rect x="529.9" y="403.0" width="13.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="532.9" y="414.0"></text>
</g>
<g>
<title>__psynch_cvwait (17 samples, 1.13%)</title><rect x="529.9" y="387.0" width="13.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="532.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.27%)</title><rect x="543.3" y="531.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.27%)</title><rect x="543.3" y="515.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="546.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.27%)</title><rect x="543.3" y="499.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="546.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.27%)</title><rect x="543.3" y="483.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.3" y="494.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (4 samples, 0.27%)</title><rect x="543.3" y="467.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="546.3" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.27%)</title><rect x="543.3" y="451.0" width="3.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="546.3" y="462.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.07%)</title><rect x="543.3" y="435.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="546.3" y="446.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="543.3" y="419.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="546.3" y="430.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (3 samples, 0.20%)</title><rect x="544.1" y="435.0" width="2.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="547.1" y="446.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (3 samples, 0.20%)</title><rect x="544.1" y="419.0" width="2.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="547.1" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (14 samples, 0.93%)</title><rect x="546.4" y="547.0" width="11.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="549.4" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (10 samples, 0.67%)</title><rect x="546.4" y="531.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="549.4" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (10 samples, 0.67%)</title><rect x="546.4" y="515.0" width="7.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="549.4" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (10 samples, 0.67%)</title><rect x="546.4" y="499.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="549.4" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (6 samples, 0.40%)</title><rect x="547.2" y="483.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="550.2" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.07%)</title><rect x="547.2" y="467.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="550.2" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.07%)</title><rect x="547.2" y="451.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="550.2" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.07%)</title><rect x="547.2" y="435.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="550.2" y="446.0"></text>
</g>
<g>
<title>Runtime1::monitorexit(JavaThread*, BasicObjectLock*) (1 samples, 0.07%)</title><rect x="547.2" y="419.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="550.2" y="430.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.07%)</title><rect x="547.2" y="403.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="550.2" y="414.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.07%)</title><rect x="547.2" y="387.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="550.2" y="398.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (1 samples, 0.07%)</title><rect x="547.2" y="371.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="550.2" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (5 samples, 0.33%)</title><rect x="548.0" y="467.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="551.0" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (5 samples, 0.33%)</title><rect x="548.0" y="451.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="551.0" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.abbreviate (5 samples, 0.33%)</title><rect x="548.0" y="435.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="551.0" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.computeDotIndexes (2 samples, 0.13%)</title><rect x="548.0" y="419.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="551.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.13%)</title><rect x="548.0" y="403.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="551.0" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.13%)</title><rect x="549.6" y="419.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="550.4" y="403.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="550.4" y="387.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="553.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="550.4" y="371.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="553.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="551.2" y="419.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.2" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="551.2" y="403.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.20%)</title><rect x="551.9" y="483.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="554.9" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.20%)</title><rect x="551.9" y="467.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.9" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.13%)</title><rect x="552.7" y="451.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="555.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.13%)</title><rect x="552.7" y="435.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="555.7" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (4 samples, 0.27%)</title><rect x="554.3" y="531.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="557.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.27%)</title><rect x="554.3" y="515.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.27%)</title><rect x="554.3" y="499.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="557.3" y="510.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.27%)</title><rect x="554.3" y="483.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.3" y="494.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (3 samples, 0.20%)</title><rect x="555.1" y="467.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="558.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encode (1 samples, 0.07%)</title><rect x="556.7" y="451.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.7" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readBytes (2 samples, 0.13%)</title><rect x="557.5" y="691.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="560.5" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.readBytes (1 samples, 0.07%)</title><rect x="558.3" y="675.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="561.3" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledSlicedByteBuf.getBytes (1 samples, 0.07%)</title><rect x="558.3" y="659.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="561.3" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.getBytes (1 samples, 0.07%)</title><rect x="558.3" y="643.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.3" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/UnsafeByteBufUtil.getBytes (1 samples, 0.07%)</title><rect x="558.3" y="627.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="561.3" y="638.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.copyMemory (1 samples, 0.07%)</title><rect x="558.3" y="611.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.3" y="622.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.copyMemory (1 samples, 0.07%)</title><rect x="558.3" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="561.3" y="606.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.copyMemory (1 samples, 0.07%)</title><rect x="558.3" y="579.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="561.3" y="590.0"></text>
</g>
<g>
<title>Unsafe_CopyMemory2 (1 samples, 0.07%)</title><rect x="558.3" y="563.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="561.3" y="574.0"></text>
</g>
<g>
<title>Copy::conjoint_memory_atomic(void*, void*, unsigned long) (1 samples, 0.07%)</title><rect x="558.3" y="547.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="561.3" y="558.0"></text>
</g>
<g>
<title>io/netty/handler/codec/LengthFieldBasedFrameDecoder.decode (6 samples, 0.40%)</title><rect x="559.0" y="691.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.0" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/LengthFieldBasedFrameDecoder.extractFrame (4 samples, 0.27%)</title><rect x="559.8" y="675.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.8" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.retainedSlice (4 samples, 0.27%)</title><rect x="559.8" y="659.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.8" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledSlicedByteBuf.newInstance (4 samples, 0.27%)</title><rect x="559.8" y="643.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.8" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractPooledDerivedByteBuf.init (2 samples, 0.13%)</title><rect x="560.6" y="627.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="563.6" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.retain (2 samples, 0.13%)</title><rect x="560.6" y="611.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="562.2" y="627.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="565.2" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="562.2" y="611.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="565.2" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.07%)</title><rect x="562.2" y="595.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="565.2" y="606.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractPooledDerivedByteBuf.init (1 samples, 0.07%)</title><rect x="562.2" y="579.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.2" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/LengthFieldBasedFrameDecoder.getUnadjustedFrameLength (1 samples, 0.07%)</title><rect x="563.0" y="675.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="566.0" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.order (1 samples, 0.07%)</title><rect x="563.0" y="659.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="566.0" y="670.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (27 samples, 1.80%)</title><rect x="563.8" y="739.0" width="21.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="566.8" y="750.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (27 samples, 1.80%)</title><rect x="563.8" y="723.0" width="21.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="566.8" y="734.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (27 samples, 1.80%)</title><rect x="563.8" y="707.0" width="21.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="566.8" y="718.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (27 samples, 1.80%)</title><rect x="563.8" y="691.0" width="21.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.8" y="702.0">i..</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (27 samples, 1.80%)</title><rect x="563.8" y="675.0" width="21.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="566.8" y="686.0">i..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (27 samples, 1.80%)</title><rect x="563.8" y="659.0" width="21.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="566.8" y="670.0">c..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (27 samples, 1.80%)</title><rect x="563.8" y="643.0" width="21.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="566.8" y="654.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (7 samples, 0.47%)</title><rect x="563.8" y="627.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="566.8" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (7 samples, 0.47%)</title><rect x="563.8" y="611.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="566.8" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (7 samples, 0.47%)</title><rect x="563.8" y="595.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.8" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (6 samples, 0.40%)</title><rect x="564.6" y="579.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.6" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (6 samples, 0.40%)</title><rect x="564.6" y="563.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.6" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (6 samples, 0.40%)</title><rect x="564.6" y="547.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.6" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (6 samples, 0.40%)</title><rect x="564.6" y="531.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.6" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (6 samples, 0.40%)</title><rect x="564.6" y="515.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.6" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (6 samples, 0.40%)</title><rect x="564.6" y="499.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.6" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (4 samples, 0.27%)</title><rect x="564.6" y="483.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.6" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (4 samples, 0.27%)</title><rect x="564.6" y="467.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.6" y="478.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.27%)</title><rect x="564.6" y="451.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.6" y="462.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.27%)</title><rect x="564.6" y="435.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="564.6" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.6" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="564.6" y="403.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.6" y="414.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (3 samples, 0.20%)</title><rect x="565.3" y="419.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="568.3" y="430.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (3 samples, 0.20%)</title><rect x="565.3" y="403.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.3" y="414.0"></text>
</g>
<g>
<title>java/lang/Object.toString (3 samples, 0.20%)</title><rect x="565.3" y="387.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.20%)</title><rect x="565.3" y="371.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.3" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.20%)</title><rect x="565.3" y="355.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="568.3" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.07%)</title><rect x="566.1" y="339.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="569.1" y="350.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="566.9" y="339.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="569.9" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.07%)</title><rect x="567.7" y="483.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="570.7" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.07%)</title><rect x="567.7" y="467.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.7" y="478.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.07%)</title><rect x="567.7" y="451.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.7" y="462.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.07%)</title><rect x="567.7" y="435.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.7" y="446.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.07%)</title><rect x="567.7" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="570.7" y="430.0"></text>
</g>
<g>
<title>java/io/OutputStream.flush (1 samples, 0.07%)</title><rect x="567.7" y="403.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.7" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.07%)</title><rect x="568.5" y="483.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.5" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (1 samples, 0.07%)</title><rect x="568.5" y="467.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="571.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.07%)</title><rect x="568.5" y="451.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.07%)</title><rect x="568.5" y="435.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="571.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.07%)</title><rect x="568.5" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="571.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (1 samples, 0.07%)</title><rect x="568.5" y="403.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="571.5" y="414.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (20 samples, 1.34%)</title><rect x="569.3" y="627.0" width="15.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="572.3" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (20 samples, 1.34%)</title><rect x="569.3" y="611.0" width="15.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.3" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (20 samples, 1.34%)</title><rect x="569.3" y="595.0" width="15.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.3" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (20 samples, 1.34%)</title><rect x="569.3" y="579.0" width="15.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.3" y="590.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/Xhaka2FullHttpResponseDecoder.decode (5 samples, 0.33%)</title><rect x="569.3" y="563.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.3" y="574.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/Xhaka2FullHttpResponseDecoder.decode (5 samples, 0.33%)</title><rect x="569.3" y="547.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="572.3" y="558.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/XhakaBodySerializeFacade.findResponseSerializer (1 samples, 0.07%)</title><rect x="569.3" y="531.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="572.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.07%)</title><rect x="569.3" y="515.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.3" y="526.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="569.3" y="499.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="572.3" y="510.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpResponseProtobufTypeSerialize.deserialize (4 samples, 0.27%)</title><rect x="570.1" y="531.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="573.1" y="542.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpResponseProtobufTypeSerialize.deserialize (4 samples, 0.27%)</title><rect x="570.1" y="515.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="573.1" y="526.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse.parseFrom (2 samples, 0.13%)</title><rect x="570.1" y="499.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="573.1" y="510.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (2 samples, 0.13%)</title><rect x="570.1" y="483.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.1" y="494.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (2 samples, 0.13%)</title><rect x="570.1" y="467.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.1" y="478.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (2 samples, 0.13%)</title><rect x="570.1" y="451.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="573.1" y="462.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (2 samples, 0.13%)</title><rect x="570.1" y="435.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="573.1" y="446.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (2 samples, 0.13%)</title><rect x="570.1" y="419.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="573.1" y="430.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse$1.parsePartialFrom (2 samples, 0.13%)</title><rect x="570.1" y="403.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.1" y="414.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse$1.parsePartialFrom (2 samples, 0.13%)</title><rect x="570.1" y="387.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="573.1" y="398.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse.&lt;init&gt; (2 samples, 0.13%)</title><rect x="570.1" y="371.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.1" y="382.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse.&lt;init&gt; (2 samples, 0.13%)</title><rect x="570.1" y="355.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.1" y="366.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readMessage (2 samples, 0.13%)</title><rect x="570.1" y="339.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="573.1" y="350.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HeaderOuterClass$Header$1.parsePartialFrom (2 samples, 0.13%)</title><rect x="570.1" y="323.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="573.1" y="334.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HeaderOuterClass$Header$1.parsePartialFrom (2 samples, 0.13%)</title><rect x="570.1" y="307.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="573.1" y="318.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HeaderOuterClass$Header.&lt;init&gt; (2 samples, 0.13%)</title><rect x="570.1" y="291.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="573.1" y="302.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HeaderOuterClass$Header.&lt;init&gt; (2 samples, 0.13%)</title><rect x="570.1" y="275.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="573.1" y="286.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedInputStream$ArrayDecoder.readStringRequireUtf8 (2 samples, 0.13%)</title><rect x="570.1" y="259.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="573.1" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="570.9" y="243.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="573.9" y="254.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 0.07%)</title><rect x="570.9" y="227.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.9" y="238.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.07%)</title><rect x="571.6" y="499.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.6" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.07%)</title><rect x="571.6" y="483.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="574.6" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1 samples, 0.07%)</title><rect x="571.6" y="467.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.6" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.07%)</title><rect x="571.6" y="451.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="574.6" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.07%)</title><rect x="571.6" y="435.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.6" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (1 samples, 0.07%)</title><rect x="571.6" y="419.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.6" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (1 samples, 0.07%)</title><rect x="571.6" y="403.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="574.6" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.init (1 samples, 0.07%)</title><rect x="571.6" y="387.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.6" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init (1 samples, 0.07%)</title><rect x="571.6" y="371.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.6" y="382.0"></text>
</g>
<g>
<title>org/springframework/util/CollectionUtils.isEmpty (1 samples, 0.07%)</title><rect x="572.4" y="499.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="575.4" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.isEmpty (1 samples, 0.07%)</title><rect x="572.4" y="483.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="575.4" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.isEmpty (1 samples, 0.07%)</title><rect x="572.4" y="467.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="575.4" y="478.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (14 samples, 0.93%)</title><rect x="573.2" y="563.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="576.2" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (14 samples, 0.93%)</title><rect x="573.2" y="547.0" width="11.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="576.2" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (14 samples, 0.93%)</title><rect x="573.2" y="531.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.2" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (14 samples, 0.93%)</title><rect x="573.2" y="515.0" width="11.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.2" y="526.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/SlaveXhakaHttpServletResponsehHandler.channelRead0 (14 samples, 0.93%)</title><rect x="573.2" y="499.0" width="11.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="576.2" y="510.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/SlaveXhakaHttpServletResponsehHandler.channelRead0 (14 samples, 0.93%)</title><rect x="573.2" y="483.0" width="11.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.2" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (2 samples, 0.13%)</title><rect x="573.2" y="467.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="576.2" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (2 samples, 0.13%)</title><rect x="573.2" y="451.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.2" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (2 samples, 0.13%)</title><rect x="573.2" y="435.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="576.2" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (2 samples, 0.13%)</title><rect x="573.2" y="419.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="576.2" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (2 samples, 0.13%)</title><rect x="573.2" y="403.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.2" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (2 samples, 0.13%)</title><rect x="573.2" y="387.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="576.2" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (2 samples, 0.13%)</title><rect x="573.2" y="371.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="576.2" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (2 samples, 0.13%)</title><rect x="573.2" y="355.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="576.2" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (2 samples, 0.13%)</title><rect x="573.2" y="339.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.2" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.07%)</title><rect x="573.2" y="323.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.2" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.07%)</title><rect x="573.2" y="307.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.2" y="318.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.07%)</title><rect x="573.2" y="291.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="576.2" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.07%)</title><rect x="573.2" y="275.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="576.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="573.2" y="259.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.2" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="573.2" y="243.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="576.2" y="254.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="573.2" y="227.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="576.2" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.07%)</title><rect x="574.0" y="323.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="577.0" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.07%)</title><rect x="574.0" y="307.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="577.0" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.07%)</title><rect x="574.0" y="291.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="577.0" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (1 samples, 0.07%)</title><rect x="574.0" y="275.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.0" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (1 samples, 0.07%)</title><rect x="574.0" y="259.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.0" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (1 samples, 0.07%)</title><rect x="574.0" y="243.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.0" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (1 samples, 0.07%)</title><rect x="574.0" y="227.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="577.0" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.abbreviate (1 samples, 0.07%)</title><rect x="574.0" y="211.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.0" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.07%)</title><rect x="574.0" y="195.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="577.0" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="574.0" y="179.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="577.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="574.0" y="163.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="577.0" y="174.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="574.0" y="147.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.0" y="158.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="574.0" y="131.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="577.0" y="142.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.received (12 samples, 0.80%)</title><rect x="574.8" y="467.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.8" y="478.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.doReceived (12 samples, 0.80%)</title><rect x="574.8" y="451.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="577.8" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (3 samples, 0.20%)</title><rect x="574.8" y="435.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="577.8" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (3 samples, 0.20%)</title><rect x="574.8" y="419.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="577.8" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (3 samples, 0.20%)</title><rect x="574.8" y="403.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="577.8" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (3 samples, 0.20%)</title><rect x="574.8" y="387.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.8" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (3 samples, 0.20%)</title><rect x="574.8" y="371.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="577.8" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (3 samples, 0.20%)</title><rect x="574.8" y="355.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="577.8" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (3 samples, 0.20%)</title><rect x="574.8" y="339.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="577.8" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (3 samples, 0.20%)</title><rect x="574.8" y="323.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="577.8" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (3 samples, 0.20%)</title><rect x="574.8" y="307.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.8" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (3 samples, 0.20%)</title><rect x="574.8" y="291.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.8" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.07%)</title><rect x="574.8" y="275.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.8" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.07%)</title><rect x="574.8" y="259.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="577.8" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (1 samples, 0.07%)</title><rect x="574.8" y="243.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="577.8" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (1 samples, 0.07%)</title><rect x="574.8" y="227.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="577.8" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (1 samples, 0.07%)</title><rect x="574.8" y="211.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="577.8" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (1 samples, 0.07%)</title><rect x="574.8" y="195.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="577.8" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.abbreviate (1 samples, 0.07%)</title><rect x="574.8" y="179.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="577.8" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.07%)</title><rect x="574.8" y="163.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="577.8" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="574.8" y="147.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="577.8" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="574.8" y="131.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="577.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="574.8" y="115.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="577.8" y="126.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (2 samples, 0.13%)</title><rect x="575.6" y="275.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.6" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.13%)</title><rect x="575.6" y="259.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.6" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.13%)</title><rect x="575.6" y="243.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.6" y="254.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.13%)</title><rect x="575.6" y="227.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="578.6" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (2 samples, 0.13%)</title><rect x="575.6" y="211.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="578.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encode (1 samples, 0.07%)</title><rect x="576.4" y="195.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="579.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.60%)</title><rect x="577.2" y="435.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.60%)</title><rect x="577.2" y="419.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="580.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.60%)</title><rect x="577.2" y="403.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="580.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.60%)</title><rect x="577.2" y="387.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="580.2" y="398.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (9 samples, 0.60%)</title><rect x="577.2" y="371.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="580.2" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.60%)</title><rect x="577.2" y="355.0" width="7.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="580.2" y="366.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.07%)</title><rect x="577.2" y="339.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="580.2" y="350.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.07%)</title><rect x="577.2" y="323.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="580.2" y="334.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (8 samples, 0.53%)</title><rect x="577.9" y="339.0" width="6.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="580.9" y="350.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (8 samples, 0.53%)</title><rect x="577.9" y="323.0" width="6.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="580.9" y="334.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecOutputList.recycle (1 samples, 0.07%)</title><rect x="584.2" y="563.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="587.2" y="574.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$DefaultHandle.recycle (1 samples, 0.07%)</title><rect x="584.2" y="547.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="587.2" y="558.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="585.0" y="755.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="588.0" y="766.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractEventExecutor.inEventLoop (1 samples, 0.07%)</title><rect x="585.8" y="835.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.8" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelReadComplete (21 samples, 1.40%)</title><rect x="586.6" y="867.0" width="16.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="589.6" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (21 samples, 1.40%)</title><rect x="586.6" y="851.0" width="16.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="589.6" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (21 samples, 1.40%)</title><rect x="586.6" y="835.0" width="16.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="589.6" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelReadComplete (21 samples, 1.40%)</title><rect x="586.6" y="819.0" width="16.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.6" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (19 samples, 1.27%)</title><rect x="586.6" y="803.0" width="15.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="589.6" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (19 samples, 1.27%)</title><rect x="586.6" y="787.0" width="15.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="589.6" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (19 samples, 1.27%)</title><rect x="586.6" y="771.0" width="15.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="589.6" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelReadComplete (18 samples, 1.20%)</title><rect x="586.6" y="755.0" width="14.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="589.6" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelReadComplete (17 samples, 1.13%)</title><rect x="587.4" y="739.0" width="13.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="590.4" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelReadComplete (17 samples, 1.13%)</title><rect x="587.4" y="723.0" width="13.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="590.4" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (16 samples, 1.07%)</title><rect x="588.2" y="707.0" width="12.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="591.2" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (16 samples, 1.07%)</title><rect x="588.2" y="691.0" width="12.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="591.2" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (16 samples, 1.07%)</title><rect x="588.2" y="675.0" width="12.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.2" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelReadComplete (16 samples, 1.07%)</title><rect x="588.2" y="659.0" width="12.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="591.2" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (16 samples, 1.07%)</title><rect x="588.2" y="643.0" width="12.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="591.2" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (16 samples, 1.07%)</title><rect x="588.2" y="627.0" width="12.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="591.2" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (16 samples, 1.07%)</title><rect x="588.2" y="611.0" width="12.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.2" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelReadComplete (16 samples, 1.07%)</title><rect x="588.2" y="595.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.2" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (16 samples, 1.07%)</title><rect x="588.2" y="579.0" width="12.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.2" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (16 samples, 1.07%)</title><rect x="588.2" y="563.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.2" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (16 samples, 1.07%)</title><rect x="588.2" y="547.0" width="12.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.2" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelReadComplete (16 samples, 1.07%)</title><rect x="588.2" y="531.0" width="12.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.2" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelReadComplete (16 samples, 1.07%)</title><rect x="588.2" y="515.0" width="12.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.2" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (16 samples, 1.07%)</title><rect x="588.2" y="499.0" width="12.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="591.2" y="510.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (16 samples, 1.07%)</title><rect x="588.2" y="483.0" width="12.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="591.2" y="494.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (15 samples, 1.00%)</title><rect x="589.0" y="467.0" width="11.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.0" y="478.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (15 samples, 1.00%)</title><rect x="589.0" y="451.0" width="11.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="592.0" y="462.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage$WeakKey.&lt;init&gt; (1 samples, 0.07%)</title><rect x="589.0" y="435.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="592.0" y="446.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (1 samples, 0.07%)</title><rect x="589.0" y="419.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="592.0" y="430.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.07%)</title><rect x="589.0" y="403.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="592.0" y="414.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.07%)</title><rect x="589.0" y="387.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="592.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (12 samples, 0.80%)</title><rect x="589.8" y="435.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="592.8" y="446.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (12 samples, 0.80%)</title><rect x="589.8" y="419.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="592.8" y="430.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (12 samples, 0.80%)</title><rect x="589.8" y="403.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="592.8" y="414.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (12 samples, 0.80%)</title><rect x="589.8" y="387.0" width="9.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="592.8" y="398.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (12 samples, 0.80%)</title><rect x="589.8" y="371.0" width="9.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="592.8" y="382.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.07%)</title><rect x="589.8" y="355.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="592.8" y="366.0"></text>
</g>
<g>
<title>PreserveExceptionMark::~PreserveExceptionMark() (1 samples, 0.07%)</title><rect x="590.5" y="355.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="593.5" y="366.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (10 samples, 0.67%)</title><rect x="591.3" y="355.0" width="7.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="594.3" y="366.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.07%)</title><rect x="591.3" y="339.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="594.3" y="350.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (9 samples, 0.60%)</title><rect x="592.1" y="339.0" width="7.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="595.1" y="350.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (1 samples, 0.07%)</title><rect x="592.1" y="323.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="595.1" y="334.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.07%)</title><rect x="592.1" y="307.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="595.1" y="318.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (1 samples, 0.07%)</title><rect x="592.1" y="291.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="595.1" y="302.0"></text>
</g>
<g>
<title>arrayOopDesc::max_array_length(BasicType) (1 samples, 0.07%)</title><rect x="592.1" y="275.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="595.1" y="286.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (6 samples, 0.40%)</title><rect x="592.9" y="323.0" width="4.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="595.9" y="334.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (2 samples, 0.13%)</title><rect x="596.1" y="307.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="599.1" y="318.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.07%)</title><rect x="596.1" y="291.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="599.1" y="302.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(KlassHandle, int, int, Thread*) (1 samples, 0.07%)</title><rect x="596.1" y="275.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="599.1" y="286.0"></text>
</g>
<g>
<title>objArrayOopDesc::obj_at_put(int, oopDesc*) (1 samples, 0.07%)</title><rect x="596.8" y="291.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="599.8" y="302.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.13%)</title><rect x="597.6" y="323.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="600.6" y="334.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (2 samples, 0.13%)</title><rect x="597.6" y="307.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="600.6" y="318.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.13%)</title><rect x="597.6" y="291.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="600.6" y="302.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.07%)</title><rect x="597.6" y="275.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="600.6" y="286.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.07%)</title><rect x="598.4" y="275.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="601.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (2 samples, 0.13%)</title><rect x="599.2" y="435.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="602.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (2 samples, 0.13%)</title><rect x="599.2" y="419.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.2" y="430.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="600.8" y="755.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="603.8" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.readIfIsAutoRead (2 samples, 0.13%)</title><rect x="601.6" y="803.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="604.6" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.read (2 samples, 0.13%)</title><rect x="601.6" y="787.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.6" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.read (2 samples, 0.13%)</title><rect x="601.6" y="771.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.6" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.read (2 samples, 0.13%)</title><rect x="601.6" y="755.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.6" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeRead (2 samples, 0.13%)</title><rect x="601.6" y="739.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="604.6" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelDuplexHandler.read (2 samples, 0.13%)</title><rect x="601.6" y="723.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="604.6" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.read (1 samples, 0.07%)</title><rect x="602.4" y="707.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.4" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeRead (1 samples, 0.07%)</title><rect x="602.4" y="691.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.4" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.read (1 samples, 0.07%)</title><rect x="602.4" y="675.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="605.4" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundHandlerAdapter.read (1 samples, 0.07%)</title><rect x="602.4" y="659.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.4" y="670.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="602.4" y="643.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="605.4" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.allocate (4 samples, 0.27%)</title><rect x="603.2" y="867.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="606.2" y="878.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.ioBuffer (4 samples, 0.27%)</title><rect x="603.2" y="851.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.2" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (4 samples, 0.27%)</title><rect x="603.2" y="835.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="606.2" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (4 samples, 0.27%)</title><rect x="603.2" y="819.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.2" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (4 samples, 0.27%)</title><rect x="603.2" y="803.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.2" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (4 samples, 0.27%)</title><rect x="603.2" y="787.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.2" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (2 samples, 0.13%)</title><rect x="603.2" y="771.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.2" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (2 samples, 0.13%)</title><rect x="603.2" y="755.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="606.2" y="766.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (2 samples, 0.13%)</title><rect x="603.2" y="739.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.2" y="750.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pop (1 samples, 0.07%)</title><rect x="603.2" y="723.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="606.2" y="734.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.scavenge (1 samples, 0.07%)</title><rect x="603.2" y="707.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.2" y="718.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.scavengeSome (1 samples, 0.07%)</title><rect x="603.2" y="691.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="606.2" y="702.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$WeakOrderQueue.transfer (1 samples, 0.07%)</title><rect x="603.2" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="606.2" y="686.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (1 samples, 0.07%)</title><rect x="603.9" y="723.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.9" y="734.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.get (1 samples, 0.07%)</title><rect x="603.9" y="707.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="606.9" y="718.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.fastGet (1 samples, 0.07%)</title><rect x="603.9" y="691.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.9" y="702.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.&lt;init&gt; (1 samples, 0.07%)</title><rect x="603.9" y="675.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.9" y="686.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.newIndexedVariableTable (1 samples, 0.07%)</title><rect x="603.9" y="659.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.9" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (2 samples, 0.13%)</title><rect x="604.7" y="771.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.7" y="782.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (2 samples, 0.13%)</title><rect x="604.7" y="755.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="607.7" y="766.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.07%)</title><rect x="604.7" y="739.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="607.7" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="605.5" y="739.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="608.5" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.07%)</title><rect x="605.5" y="723.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="608.5" y="734.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.07%)</title><rect x="605.5" y="707.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="608.5" y="718.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="605.5" y="691.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="608.5" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.closeOnRead (2 samples, 0.13%)</title><rect x="606.3" y="867.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.3" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.close (2 samples, 0.13%)</title><rect x="606.3" y="851.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="609.3" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.close (2 samples, 0.13%)</title><rect x="606.3" y="835.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.3" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.fireChannelInactiveAndDeregister (2 samples, 0.13%)</title><rect x="606.3" y="819.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.3" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.deregister (2 samples, 0.13%)</title><rect x="606.3" y="803.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.3" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.invokeLater (2 samples, 0.13%)</title><rect x="606.3" y="787.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.3" y="798.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (2 samples, 0.13%)</title><rect x="606.3" y="771.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="609.3" y="782.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (2 samples, 0.13%)</title><rect x="606.3" y="755.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="609.3" y="766.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (2 samples, 0.13%)</title><rect x="606.3" y="739.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="609.3" y="750.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.13%)</title><rect x="606.3" y="723.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="609.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.13%)</title><rect x="606.3" y="707.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="609.3" y="718.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.13%)</title><rect x="606.3" y="691.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="609.3" y="702.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.13%)</title><rect x="606.3" y="675.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="609.3" y="686.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.13%)</title><rect x="606.3" y="659.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="609.3" y="670.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (2 samples, 0.13%)</title><rect x="606.3" y="643.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="609.3" y="654.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (2 samples, 0.13%)</title><rect x="606.3" y="627.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="609.3" y="638.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (2 samples, 0.13%)</title><rect x="606.3" y="611.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="609.3" y="622.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (2 samples, 0.13%)</title><rect x="606.3" y="595.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="609.3" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.13%)</title><rect x="606.3" y="579.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="609.3" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(KlassHandle, int, int, Thread*) (2 samples, 0.13%)</title><rect x="606.3" y="563.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="609.3" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doReadBytes (10 samples, 0.67%)</title><rect x="607.9" y="867.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.9" y="878.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (10 samples, 0.67%)</title><rect x="607.9" y="851.0" width="7.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.9" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.setBytes (10 samples, 0.67%)</title><rect x="607.9" y="835.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.9" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.internalNioBuffer (1 samples, 0.07%)</title><rect x="607.9" y="819.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.9" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInternalNioBuffer (1 samples, 0.07%)</title><rect x="607.9" y="803.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="610.9" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInternalNioBuffer (1 samples, 0.07%)</title><rect x="607.9" y="787.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="610.9" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.duplicate (1 samples, 0.07%)</title><rect x="607.9" y="771.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="610.9" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="607.9" y="755.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.9" y="766.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="607.9" y="739.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="607.9" y="723.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.9" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="607.9" y="707.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (9 samples, 0.60%)</title><rect x="608.7" y="819.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="611.7" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.07%)</title><rect x="608.7" y="803.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="611.7" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.07%)</title><rect x="608.7" y="787.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.47%)</title><rect x="609.5" y="803.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.5" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.isReadOnly (1 samples, 0.07%)</title><rect x="609.5" y="787.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="612.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.40%)</title><rect x="610.2" y="787.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (6 samples, 0.40%)</title><rect x="610.2" y="771.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="613.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (6 samples, 0.40%)</title><rect x="610.2" y="755.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="613.2" y="766.0"></text>
</g>
<g>
<title>read (6 samples, 0.40%)</title><rect x="610.2" y="739.0" width="4.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="613.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.ensureReadOpen (1 samples, 0.07%)</title><rect x="615.0" y="803.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="618.0" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioMessageChannel$NioMessageUnsafe.read (22 samples, 1.47%)</title><rect x="615.8" y="883.0" width="17.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.8" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (10 samples, 0.67%)</title><rect x="615.8" y="867.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="618.8" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (9 samples, 0.60%)</title><rect x="615.8" y="851.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="618.8" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (9 samples, 0.60%)</title><rect x="615.8" y="835.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="618.8" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (9 samples, 0.60%)</title><rect x="615.8" y="819.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="618.8" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (9 samples, 0.60%)</title><rect x="615.8" y="803.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="618.8" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (9 samples, 0.60%)</title><rect x="615.8" y="787.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="618.8" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (9 samples, 0.60%)</title><rect x="615.8" y="771.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.8" y="782.0"></text>
</g>
<g>
<title>io/netty/bootstrap/ServerBootstrap$ServerBootstrapAcceptor.channelRead (9 samples, 0.60%)</title><rect x="615.8" y="755.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.8" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/MultithreadEventLoopGroup.register (7 samples, 0.47%)</title><rect x="616.5" y="739.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="619.5" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/SingleThreadEventLoop.register (7 samples, 0.47%)</title><rect x="616.5" y="723.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="619.5" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/SingleThreadEventLoop.register (7 samples, 0.47%)</title><rect x="616.5" y="707.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="619.5" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.register (7 samples, 0.47%)</title><rect x="616.5" y="691.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="619.5" y="702.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (7 samples, 0.47%)</title><rect x="616.5" y="675.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="619.5" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.wakeup (3 samples, 0.20%)</title><rect x="616.5" y="659.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="619.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (3 samples, 0.20%)</title><rect x="616.5" y="643.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.interrupt (3 samples, 0.20%)</title><rect x="616.5" y="627.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.interrupt (3 samples, 0.20%)</title><rect x="616.5" y="611.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.5" y="622.0"></text>
</g>
<g>
<title>write (3 samples, 0.20%)</title><rect x="616.5" y="595.0" width="2.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="619.5" y="606.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (4 samples, 0.27%)</title><rect x="618.9" y="659.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.9" y="670.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (4 samples, 0.27%)</title><rect x="618.9" y="643.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.9" y="654.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage$WeakKey.&lt;init&gt; (1 samples, 0.07%)</title><rect x="618.9" y="627.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.9" y="638.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (1 samples, 0.07%)</title><rect x="618.9" y="611.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.9" y="622.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.07%)</title><rect x="618.9" y="595.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="621.9" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.07%)</title><rect x="618.9" y="579.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="621.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (3 samples, 0.20%)</title><rect x="619.7" y="627.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (3 samples, 0.20%)</title><rect x="619.7" y="611.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="622.7" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/socket/DefaultSocketChannelConfig.setOption (1 samples, 0.07%)</title><rect x="622.1" y="739.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="625.1" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/socket/DefaultSocketChannelConfig.setTcpNoDelay (1 samples, 0.07%)</title><rect x="622.1" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="625.1" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setTcpNoDelay (1 samples, 0.07%)</title><rect x="622.1" y="707.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setBooleanOption (1 samples, 0.07%)</title><rect x="622.1" y="691.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="625.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.setOption (1 samples, 0.07%)</title><rect x="622.1" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.1" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setSocketOption (1 samples, 0.07%)</title><rect x="622.1" y="659.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setIntOption0 (1 samples, 0.07%)</title><rect x="622.1" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.1" y="654.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_setIntOption0 (1 samples, 0.07%)</title><rect x="622.1" y="627.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="625.1" y="638.0"></text>
</g>
<g>
<title>setsockopt (1 samples, 0.07%)</title><rect x="622.1" y="611.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="625.1" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.get (1 samples, 0.07%)</title><rect x="622.8" y="851.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="625.8" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioServerSocketChannel.doReadMessages (12 samples, 0.80%)</title><rect x="623.6" y="867.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="626.6" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.&lt;init&gt; (1 samples, 0.07%)</title><rect x="623.6" y="851.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="626.6" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="624.4" y="851.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="627.4" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureCapacityInternal (1 samples, 0.07%)</title><rect x="624.4" y="835.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.4" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.ensureExplicitCapacity (1 samples, 0.07%)</title><rect x="624.4" y="819.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="627.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (10 samples, 0.67%)</title><rect x="625.2" y="851.0" width="7.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.2" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.configureBlocking (2 samples, 0.13%)</title><rect x="625.2" y="835.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.2" y="846.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_configureBlocking (1 samples, 0.07%)</title><rect x="626.0" y="819.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="629.0" y="830.0"></text>
</g>
<g>
<title>configureBlocking (1 samples, 0.07%)</title><rect x="626.0" y="803.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="629.0" y="814.0"></text>
</g>
<g>
<title>__fcntl (1 samples, 0.07%)</title><rect x="626.0" y="787.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="629.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (6 samples, 0.40%)</title><rect x="626.8" y="835.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.8" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (6 samples, 0.40%)</title><rect x="626.8" y="819.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.8" y="830.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_ServerSocketChannelImpl_accept0 (2 samples, 0.13%)</title><rect x="626.8" y="803.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="629.8" y="814.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.07%)</title><rect x="626.8" y="787.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="629.8" y="798.0"></text>
</g>
<g>
<title>jni_SetIntField (1 samples, 0.07%)</title><rect x="627.6" y="787.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="630.6" y="798.0"></text>
</g>
<g>
<title>__accept (3 samples, 0.20%)</title><rect x="628.4" y="803.0" width="2.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="631.4" y="814.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.07%)</title><rect x="630.7" y="803.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="633.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (2 samples, 0.13%)</title><rect x="631.5" y="835.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="634.5" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localAddress (2 samples, 0.13%)</title><rect x="631.5" y="819.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="634.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localInetAddress (1 samples, 0.07%)</title><rect x="631.5" y="803.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="634.5" y="814.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_localInetAddress (1 samples, 0.07%)</title><rect x="631.5" y="787.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="634.5" y="798.0"></text>
</g>
<g>
<title>NET_SockaddrToInetAddress (1 samples, 0.07%)</title><rect x="631.5" y="771.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="634.5" y="782.0"></text>
</g>
<g>
<title>jni_NewObject (1 samples, 0.07%)</title><rect x="631.5" y="755.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="634.5" y="766.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.07%)</title><rect x="631.5" y="739.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="634.5" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localPort (1 samples, 0.07%)</title><rect x="632.3" y="803.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="635.3" y="814.0"></text>
</g>
<g>
<title>__getsockname (1 samples, 0.07%)</title><rect x="632.3" y="787.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="635.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.readyOps (2 samples, 0.13%)</title><rect x="633.1" y="883.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.1" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/nio/SelectedSelectionKeySet.flip (1 samples, 0.07%)</title><rect x="634.7" y="915.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="637.7" y="926.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.07%)</title><rect x="635.4" y="915.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="638.4" y="926.0"></text>
</g>
<g>
<title>_res (1 samples, 0.07%)</title><rect x="635.4" y="899.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="638.4" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.select (147 samples, 9.81%)</title><rect x="636.2" y="931.0" width="115.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.2" y="942.0">io/netty/chann..</text>
</g>
<g>
<title>io/netty/channel/SingleThreadEventLoop.hasTasks (1 samples, 0.07%)</title><rect x="636.2" y="915.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="639.2" y="926.0"></text>
</g>
<g>
<title>io/netty/util/internal/logging/Slf4JLogger.warn (1 samples, 0.07%)</title><rect x="637.0" y="915.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.0" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (145 samples, 9.68%)</title><rect x="637.8" y="915.0" width="114.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="640.8" y="926.0">sun/nio/ch/Sel..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (145 samples, 9.68%)</title><rect x="637.8" y="899.0" width="114.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.8" y="910.0">sun/nio/ch/Sel..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (144 samples, 9.61%)</title><rect x="638.6" y="883.0" width="113.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="641.6" y="894.0">sun/nio/ch/KQu..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.07%)</title><rect x="639.4" y="867.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.4" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.07%)</title><rect x="639.4" y="851.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.4" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.07%)</title><rect x="639.4" y="835.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="642.4" y="846.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.07%)</title><rect x="639.4" y="819.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="642.4" y="830.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.07%)</title><rect x="639.4" y="803.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="642.4" y="814.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.07%)</title><rect x="639.4" y="787.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="642.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.poll (136 samples, 9.08%)</title><rect x="640.2" y="867.0" width="107.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="643.2" y="878.0">sun/nio/ch/KQ..</text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.kevent0 (136 samples, 9.08%)</title><rect x="640.2" y="851.0" width="107.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.2" y="862.0">sun/nio/ch/KQ..</text>
</g>
<g>
<title>Java_sun_nio_fs_UnixNativeDispatcher_getcwd (1 samples, 0.07%)</title><rect x="641.0" y="835.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="644.0" y="846.0"></text>
</g>
<g>
<title>kevent (134 samples, 8.95%)</title><rect x="641.7" y="835.0" width="105.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="644.7" y="846.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.updateSelectedKeys (4 samples, 0.27%)</title><rect x="747.3" y="867.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.3" y="878.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.07%)</title><rect x="748.9" y="851.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="751.9" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="748.9" y="835.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="751.9" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.07%)</title><rect x="748.9" y="819.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="751.9" y="830.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.07%)</title><rect x="748.9" y="803.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="751.9" y="814.0"></text>
</g>
<g>
<title>_pthread_cond_wait (1 samples, 0.07%)</title><rect x="748.9" y="787.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="751.9" y="798.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.07%)</title><rect x="748.9" y="771.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="751.9" y="782.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.07%)</title><rect x="748.9" y="755.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="751.9" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.07%)</title><rect x="749.7" y="851.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="752.7" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.07%)</title><rect x="749.7" y="835.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.7" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (2 samples, 0.13%)</title><rect x="750.5" y="867.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.5" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.implDereg (1 samples, 0.07%)</title><rect x="751.2" y="851.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.2" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.kill (1 samples, 0.07%)</title><rect x="751.2" y="835.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.2" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.close (1 samples, 0.07%)</title><rect x="751.2" y="819.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="754.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.close0 (1 samples, 0.07%)</title><rect x="751.2" y="803.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="754.2" y="814.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.07%)</title><rect x="751.2" y="787.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="754.2" y="798.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.runAllTasks (236 samples, 15.75%)</title><rect x="752.0" y="931.0" width="185.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="755.0" y="942.0">io/netty/util/concurrent..</text>
</g>
<g>
<title>io/netty/channel/SingleThreadEventLoop.afterRunningAllTasks (1 samples, 0.07%)</title><rect x="752.0" y="915.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.0" y="926.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.runAllTasksFrom (1 samples, 0.07%)</title><rect x="752.0" y="899.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="755.0" y="910.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.safeExecute (1 samples, 0.07%)</title><rect x="752.0" y="883.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="755.0" y="894.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscChunkedArrayQueue.poll (1 samples, 0.07%)</title><rect x="752.0" y="867.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.0" y="878.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.fetchFromScheduledTaskQueue (1 samples, 0.07%)</title><rect x="752.8" y="915.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="755.8" y="926.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.07%)</title><rect x="752.8" y="899.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="755.8" y="910.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.safeExecute (234 samples, 15.62%)</title><rect x="753.6" y="915.0" width="184.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="756.6" y="926.0">io/netty/util/concurrent..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaServletOutputStream$$Lambda$191/469290104.run (27 samples, 1.80%)</title><rect x="753.6" y="899.0" width="21.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.6" y="910.0">c..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaServletOutputStream.lambda$flush$1 (27 samples, 1.80%)</title><rect x="753.6" y="883.0" width="21.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="756.6" y="894.0">c..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.pipeline (1 samples, 0.07%)</title><rect x="753.6" y="867.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.6" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.flush (12 samples, 0.80%)</title><rect x="754.4" y="867.0" width="9.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="757.4" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundHandlerAdapter.flush (12 samples, 0.80%)</title><rect x="754.4" y="851.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="757.4" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush (12 samples, 0.80%)</title><rect x="754.4" y="835.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.4" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (12 samples, 0.80%)</title><rect x="754.4" y="819.0" width="9.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="757.4" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (12 samples, 0.80%)</title><rect x="754.4" y="803.0" width="9.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="757.4" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (12 samples, 0.80%)</title><rect x="754.4" y="787.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="757.4" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.flush (12 samples, 0.80%)</title><rect x="754.4" y="771.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.4" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush (12 samples, 0.80%)</title><rect x="754.4" y="755.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="757.4" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.flush0 (12 samples, 0.80%)</title><rect x="754.4" y="739.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="757.4" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (11 samples, 0.73%)</title><rect x="754.4" y="723.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="757.4" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doWrite (11 samples, 0.73%)</title><rect x="754.4" y="707.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="757.4" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.removeBytes (2 samples, 0.13%)</title><rect x="754.4" y="691.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="757.4" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.remove (2 samples, 0.13%)</title><rect x="754.4" y="675.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="757.4" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer$Entry.recycle (1 samples, 0.07%)</title><rect x="754.4" y="659.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="757.4" y="670.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$DefaultHandle.recycle (1 samples, 0.07%)</title><rect x="754.4" y="643.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.4" y="654.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (1 samples, 0.07%)</title><rect x="754.4" y="627.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="757.4" y="638.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.get (1 samples, 0.07%)</title><rect x="754.4" y="611.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.4" y="622.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.fastGet (1 samples, 0.07%)</title><rect x="754.4" y="595.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.4" y="606.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.&lt;init&gt; (1 samples, 0.07%)</title><rect x="754.4" y="579.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="757.4" y="590.0"></text>
</g>
<g>
<title>io/netty/util/internal/InternalThreadLocalMap.newIndexedVariableTable (1 samples, 0.07%)</title><rect x="754.4" y="563.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="757.4" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.decrementPendingOutboundBytes (1 samples, 0.07%)</title><rect x="755.2" y="659.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="758.2" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (9 samples, 0.60%)</title><rect x="756.0" y="691.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="759.0" y="702.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.07%)</title><rect x="756.0" y="675.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.0" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.07%)</title><rect x="756.0" y="659.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.0" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.07%)</title><rect x="756.0" y="643.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="759.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (7 samples, 0.47%)</title><rect x="756.8" y="675.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="759.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (7 samples, 0.47%)</title><rect x="756.8" y="659.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="759.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (7 samples, 0.47%)</title><rect x="756.8" y="643.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (7 samples, 0.47%)</title><rect x="756.8" y="627.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="759.8" y="638.0"></text>
</g>
<g>
<title>write (7 samples, 0.47%)</title><rect x="756.8" y="611.0" width="5.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="759.8" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.writerCleanup (1 samples, 0.07%)</title><rect x="762.3" y="675.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="765.3" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.isFlushPending (1 samples, 0.07%)</title><rect x="763.1" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="766.1" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (1 samples, 0.07%)</title><rect x="763.1" y="707.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="766.1" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.write (13 samples, 0.87%)</title><rect x="763.8" y="867.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.8" y="878.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (13 samples, 0.87%)</title><rect x="763.8" y="851.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.8" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.write (2 samples, 0.13%)</title><rect x="763.8" y="835.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="766.8" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (2 samples, 0.13%)</title><rect x="763.8" y="819.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="766.8" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (2 samples, 0.13%)</title><rect x="763.8" y="803.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="766.8" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (2 samples, 0.13%)</title><rect x="763.8" y="787.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="766.8" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (1 samples, 0.07%)</title><rect x="763.8" y="771.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="766.8" y="782.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="763.8" y="755.0" width="0.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="766.8" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.write (1 samples, 0.07%)</title><rect x="764.6" y="771.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="767.6" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectEncoder.encode (9 samples, 0.60%)</title><rect x="765.4" y="835.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="768.4" y="846.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectEncoder.encodeHeaders (7 samples, 0.47%)</title><rect x="765.4" y="819.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="768.4" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeadersEncoder.encoderHeader (7 samples, 0.47%)</title><rect x="765.4" y="803.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="768.4" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable (2 samples, 0.13%)</title><rect x="765.4" y="787.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="768.4" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable0 (2 samples, 0.13%)</title><rect x="765.4" y="771.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="768.4" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.capacity (2 samples, 0.13%)</title><rect x="765.4" y="755.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="768.4" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.reallocate (2 samples, 0.13%)</title><rect x="765.4" y="739.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="768.4" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (2 samples, 0.13%)</title><rect x="765.4" y="723.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="768.4" y="734.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (2 samples, 0.13%)</title><rect x="765.4" y="707.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="768.4" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.13%)</title><rect x="765.4" y="691.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="768.4" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeadersEncoder.writeAscii (4 samples, 0.27%)</title><rect x="767.0" y="787.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="770.0" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufUtil.copy (1 samples, 0.07%)</title><rect x="767.0" y="771.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.0" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeadersEncoder.writeCharSequence (3 samples, 0.20%)</title><rect x="767.8" y="771.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.8" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.setByte (1 samples, 0.07%)</title><rect x="769.4" y="755.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="772.4" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex (1 samples, 0.07%)</title><rect x="769.4" y="739.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="772.4" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.checkIndex (1 samples, 0.07%)</title><rect x="769.4" y="723.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="772.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.07%)</title><rect x="770.1" y="787.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="773.1" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpResponseEncoder.encodeInitialLine (1 samples, 0.07%)</title><rect x="770.9" y="819.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="773.9" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpResponseEncoder.encodeInitialLine (1 samples, 0.07%)</title><rect x="770.9" y="803.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="773.9" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpVersion.encode (1 samples, 0.07%)</title><rect x="770.9" y="787.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="773.9" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (1 samples, 0.07%)</title><rect x="770.9" y="771.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="773.9" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (1 samples, 0.07%)</title><rect x="770.9" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.9" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.setBytes (1 samples, 0.07%)</title><rect x="770.9" y="739.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.9" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/UnsafeByteBufUtil.setBytes (1 samples, 0.07%)</title><rect x="770.9" y="723.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="773.9" y="734.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.copyMemory (1 samples, 0.07%)</title><rect x="770.9" y="707.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="773.9" y="718.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent0.copyMemory (1 samples, 0.07%)</title><rect x="770.9" y="691.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.9" y="702.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.copyMemory (1 samples, 0.07%)</title><rect x="770.9" y="675.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="773.9" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpUtil.isTransferEncodingChunked (1 samples, 0.07%)</title><rect x="771.7" y="819.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="774.7" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.contains (1 samples, 0.07%)</title><rect x="771.7" y="803.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="774.7" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.contains (1 samples, 0.07%)</title><rect x="771.7" y="787.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="774.7" y="798.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (2 samples, 0.13%)</title><rect x="772.5" y="835.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.5" y="846.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.release (2 samples, 0.13%)</title><rect x="772.5" y="819.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="775.5" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (2 samples, 0.13%)</title><rect x="772.5" y="803.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="775.5" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (2 samples, 0.13%)</title><rect x="772.5" y="787.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="775.5" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (1 samples, 0.07%)</title><rect x="773.3" y="771.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="776.3" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.freeChunk (1 samples, 0.07%)</title><rect x="773.3" y="755.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="776.3" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunkList.free (1 samples, 0.07%)</title><rect x="773.3" y="739.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="776.3" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.free (1 samples, 0.07%)</title><rect x="773.3" y="723.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="776.3" y="734.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.07%)</title><rect x="773.3" y="707.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="776.3" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="773.3" y="691.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="776.3" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.get (1 samples, 0.07%)</title><rect x="774.1" y="867.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="777.1" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.context (1 samples, 0.07%)</title><rect x="774.1" y="851.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.1" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelHandlerContext.handler (1 samples, 0.07%)</title><rect x="774.1" y="835.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.1" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe$1.run (22 samples, 1.47%)</title><rect x="774.9" y="899.0" width="17.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="777.9" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.access$200 (22 samples, 1.47%)</title><rect x="774.9" y="883.0" width="17.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="777.9" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.register0 (22 samples, 1.47%)</title><rect x="774.9" y="867.0" width="17.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.9" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelActive (6 samples, 0.40%)</title><rect x="774.9" y="851.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="777.9" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (6 samples, 0.40%)</title><rect x="774.9" y="835.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="777.9" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (6 samples, 0.40%)</title><rect x="774.9" y="819.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.9" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelActive (6 samples, 0.40%)</title><rect x="774.9" y="803.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="777.9" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelActive (6 samples, 0.40%)</title><rect x="774.9" y="787.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="777.9" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (6 samples, 0.40%)</title><rect x="774.9" y="771.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="777.9" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (6 samples, 0.40%)</title><rect x="774.9" y="755.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="777.9" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelActive (6 samples, 0.40%)</title><rect x="774.9" y="739.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.9" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelActive (6 samples, 0.40%)</title><rect x="774.9" y="723.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.9" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive (6 samples, 0.40%)</title><rect x="774.9" y="707.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="777.9" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelActive (6 samples, 0.40%)</title><rect x="774.9" y="691.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.9" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (6 samples, 0.40%)</title><rect x="774.9" y="675.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.9" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (6 samples, 0.40%)</title><rect x="774.9" y="659.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="777.9" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelActive (6 samples, 0.40%)</title><rect x="774.9" y="643.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.9" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelActive (6 samples, 0.40%)</title><rect x="774.9" y="627.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.9" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (6 samples, 0.40%)</title><rect x="774.9" y="611.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="777.9" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (6 samples, 0.40%)</title><rect x="774.9" y="595.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="777.9" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelActive (6 samples, 0.40%)</title><rect x="774.9" y="579.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.9" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelActive (6 samples, 0.40%)</title><rect x="774.9" y="563.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.9" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (6 samples, 0.40%)</title><rect x="774.9" y="547.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="777.9" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (6 samples, 0.40%)</title><rect x="774.9" y="531.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="777.9" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelActive (6 samples, 0.40%)</title><rect x="774.9" y="515.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="777.9" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelActive (6 samples, 0.40%)</title><rect x="774.9" y="499.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="777.9" y="510.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (6 samples, 0.40%)</title><rect x="774.9" y="483.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.9" y="494.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (6 samples, 0.40%)</title><rect x="774.9" y="467.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="777.9" y="478.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (6 samples, 0.40%)</title><rect x="774.9" y="451.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="777.9" y="462.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (6 samples, 0.40%)</title><rect x="774.9" y="435.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.9" y="446.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.13%)</title><rect x="774.9" y="419.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.9" y="430.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.13%)</title><rect x="774.9" y="403.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="777.9" y="414.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.13%)</title><rect x="774.9" y="387.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="777.9" y="398.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.13%)</title><rect x="774.9" y="371.0" width="1.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="777.9" y="382.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.13%)</title><rect x="774.9" y="355.0" width="1.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="777.9" y="366.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (2 samples, 0.13%)</title><rect x="774.9" y="339.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="777.9" y="350.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (2 samples, 0.13%)</title><rect x="774.9" y="323.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="777.9" y="334.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.07%)</title><rect x="774.9" y="307.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="777.9" y="318.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.07%)</title><rect x="774.9" y="291.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="777.9" y="302.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.07%)</title><rect x="774.9" y="275.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="777.9" y="286.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(KlassHandle, int, int, Thread*) (1 samples, 0.07%)</title><rect x="774.9" y="259.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="777.9" y="270.0"></text>
</g>
<g>
<title>PcDescCache::find_pc_desc(int, bool) (1 samples, 0.07%)</title><rect x="775.7" y="307.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="778.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (4 samples, 0.27%)</title><rect x="776.4" y="419.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="779.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (4 samples, 0.27%)</title><rect x="776.4" y="403.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="779.4" y="414.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRegistered (14 samples, 0.93%)</title><rect x="779.6" y="851.0" width="11.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="782.6" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (14 samples, 0.93%)</title><rect x="779.6" y="835.0" width="11.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.6" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (14 samples, 0.93%)</title><rect x="779.6" y="819.0" width="11.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="782.6" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRegistered (14 samples, 0.93%)</title><rect x="779.6" y="803.0" width="11.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="782.6" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRegistered (14 samples, 0.93%)</title><rect x="779.6" y="787.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.6" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (14 samples, 0.93%)</title><rect x="779.6" y="771.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="782.6" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (14 samples, 0.93%)</title><rect x="779.6" y="755.0" width="11.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.6" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInitializer.channelRegistered (14 samples, 0.93%)</title><rect x="779.6" y="739.0" width="11.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.6" y="750.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/server/bootstrap/XhakaWebServer$1.initChannel (9 samples, 0.60%)</title><rect x="779.6" y="723.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="782.6" y="734.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/server/bootstrap/XhakaWebServer$1.initChannel (9 samples, 0.60%)</title><rect x="779.6" y="707.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="782.6" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.addLast (9 samples, 0.60%)</title><rect x="779.6" y="691.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.6" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.addLast (9 samples, 0.60%)</title><rect x="779.6" y="675.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="782.6" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.newContext (1 samples, 0.07%)</title><rect x="779.6" y="659.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.6" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.childExecutor (1 samples, 0.07%)</title><rect x="779.6" y="643.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="782.6" y="654.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.&lt;init&gt; (1 samples, 0.07%)</title><rect x="779.6" y="627.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="779.6" y="611.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="782.6" y="622.0"></text>
</g>
<g>
<title>java/lang/Integer.highestOneBit (1 samples, 0.07%)</title><rect x="779.6" y="595.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="782.6" y="606.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (8 samples, 0.53%)</title><rect x="780.4" y="659.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="783.4" y="670.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (8 samples, 0.53%)</title><rect x="780.4" y="643.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="783.4" y="654.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (4 samples, 0.27%)</title><rect x="780.4" y="627.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.07%)</title><rect x="780.4" y="611.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.4" y="622.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.07%)</title><rect x="780.4" y="595.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="783.4" y="606.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.07%)</title><rect x="780.4" y="579.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.4" y="590.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.07%)</title><rect x="780.4" y="563.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="783.4" y="574.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.07%)</title><rect x="780.4" y="547.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="783.4" y="558.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (1 samples, 0.07%)</title><rect x="780.4" y="531.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="783.4" y="542.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (1 samples, 0.07%)</title><rect x="780.4" y="515.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="783.4" y="526.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (1 samples, 0.07%)</title><rect x="780.4" y="499.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="783.4" y="510.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.07%)</title><rect x="780.4" y="483.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="783.4" y="494.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.07%)</title><rect x="780.4" y="467.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="783.4" y="478.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(KlassHandle, int, int, Thread*) (1 samples, 0.07%)</title><rect x="780.4" y="451.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="783.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (3 samples, 0.20%)</title><rect x="781.2" y="611.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (3 samples, 0.20%)</title><rect x="781.2" y="595.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="784.2" y="606.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.offerTask (4 samples, 0.27%)</title><rect x="783.5" y="627.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="786.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.27%)</title><rect x="783.5" y="611.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="786.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.27%)</title><rect x="783.5" y="595.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="786.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.27%)</title><rect x="783.5" y="579.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="786.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.27%)</title><rect x="783.5" y="563.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="786.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.13%)</title><rect x="785.1" y="547.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.13%)</title><rect x="785.1" y="531.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.1" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="723.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="789.7" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="707.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="789.7" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="691.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.7" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="675.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="789.7" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="659.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.7" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="643.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="789.7" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="627.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.7" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="611.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.7" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="595.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="789.7" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="579.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="789.7" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="563.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="789.7" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="547.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="789.7" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="531.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="789.7" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="515.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="789.7" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="499.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="789.7" y="510.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="483.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.7" y="494.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="467.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="789.7" y="478.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="451.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.7" y="462.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="435.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="789.7" y="446.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="419.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="789.7" y="430.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="403.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.7" y="414.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="387.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="789.7" y="398.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="371.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="789.7" y="382.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (5 samples, 0.33%)</title><rect x="786.7" y="355.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="789.7" y="366.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (5 samples, 0.33%)</title><rect x="786.7" y="339.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.7" y="350.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (4 samples, 0.27%)</title><rect x="786.7" y="323.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="789.7" y="334.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (4 samples, 0.27%)</title><rect x="786.7" y="307.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.7" y="318.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.13%)</title><rect x="786.7" y="291.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.7" y="302.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.13%)</title><rect x="786.7" y="275.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="789.7" y="286.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.13%)</title><rect x="786.7" y="259.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="789.7" y="270.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.13%)</title><rect x="786.7" y="243.0" width="1.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="789.7" y="254.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.13%)</title><rect x="786.7" y="227.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="789.7" y="238.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (2 samples, 0.13%)</title><rect x="786.7" y="211.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="789.7" y="222.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (2 samples, 0.13%)</title><rect x="786.7" y="195.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="789.7" y="206.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.07%)</title><rect x="787.5" y="179.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="790.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (2 samples, 0.13%)</title><rect x="788.3" y="291.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (2 samples, 0.13%)</title><rect x="788.3" y="275.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="791.3" y="286.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.removeTask (1 samples, 0.07%)</title><rect x="789.8" y="323.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="792.8" y="334.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="789.8" y="307.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="792.8" y="318.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.doRegister (2 samples, 0.13%)</title><rect x="790.6" y="851.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="793.6" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (2 samples, 0.13%)</title><rect x="790.6" y="835.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="793.6" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (2 samples, 0.13%)</title><rect x="790.6" y="819.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.6" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.implRegister (1 samples, 0.07%)</title><rect x="790.6" y="803.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="793.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.07%)</title><rect x="790.6" y="787.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="793.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.07%)</title><rect x="790.6" y="771.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="793.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (1 samples, 0.07%)</title><rect x="791.4" y="803.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.4" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.nioInterestOps (1 samples, 0.07%)</title><rect x="791.4" y="787.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetInterestOps (1 samples, 0.07%)</title><rect x="791.4" y="771.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="794.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.putEventOps (1 samples, 0.07%)</title><rect x="791.4" y="755.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="794.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.setInterest (1 samples, 0.07%)</title><rect x="791.4" y="739.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="794.4" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.07%)</title><rect x="791.4" y="723.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="794.4" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.07%)</title><rect x="791.4" y="707.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="794.4" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe$7.run (7 samples, 0.47%)</title><rect x="792.2" y="899.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="795.2" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelInactive (3 samples, 0.20%)</title><rect x="792.2" y="883.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.2" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelInactive (3 samples, 0.20%)</title><rect x="792.2" y="867.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="795.2" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelInactive (3 samples, 0.20%)</title><rect x="792.2" y="851.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="795.2" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelInactive (3 samples, 0.20%)</title><rect x="792.2" y="835.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="795.2" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelInactive (3 samples, 0.20%)</title><rect x="792.2" y="819.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.2" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelInactive (3 samples, 0.20%)</title><rect x="792.2" y="803.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="795.2" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelInactive (3 samples, 0.20%)</title><rect x="792.2" y="787.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="795.2" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelInactive (3 samples, 0.20%)</title><rect x="792.2" y="771.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="795.2" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelInactive (3 samples, 0.20%)</title><rect x="792.2" y="755.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.2" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelInputClosed (3 samples, 0.20%)</title><rect x="792.2" y="739.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="795.2" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelInactive (3 samples, 0.20%)</title><rect x="792.2" y="723.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.2" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelInactive (3 samples, 0.20%)</title><rect x="792.2" y="707.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="795.2" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelInactive (3 samples, 0.20%)</title><rect x="792.2" y="691.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="795.2" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelInactive (3 samples, 0.20%)</title><rect x="792.2" y="675.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.2" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageAggregator.channelInactive (3 samples, 0.20%)</title><rect x="792.2" y="659.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="795.2" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelInactive (3 samples, 0.20%)</title><rect x="792.2" y="643.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.2" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelInactive (3 samples, 0.20%)</title><rect x="792.2" y="627.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="795.2" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelInactive (3 samples, 0.20%)</title><rect x="792.2" y="611.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="795.2" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelInactive (3 samples, 0.20%)</title><rect x="792.2" y="595.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="795.2" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/stream/ChunkedWriteHandler.channelInactive (3 samples, 0.20%)</title><rect x="792.2" y="579.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="795.2" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelInactive (3 samples, 0.20%)</title><rect x="792.2" y="563.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.2" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelInactive (3 samples, 0.20%)</title><rect x="792.2" y="547.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="795.2" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelInactive (3 samples, 0.20%)</title><rect x="792.2" y="531.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="795.2" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelInactive (3 samples, 0.20%)</title><rect x="792.2" y="515.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="795.2" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelInactive (3 samples, 0.20%)</title><rect x="792.2" y="499.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="795.2" y="510.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelInactive (3 samples, 0.20%)</title><rect x="792.2" y="483.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.2" y="494.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (3 samples, 0.20%)</title><rect x="792.2" y="467.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.2" y="478.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (3 samples, 0.20%)</title><rect x="792.2" y="451.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="795.2" y="462.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (3 samples, 0.20%)</title><rect x="792.2" y="435.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="795.2" y="446.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.13%)</title><rect x="792.2" y="419.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.2" y="430.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.13%)</title><rect x="792.2" y="403.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="795.2" y="414.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.13%)</title><rect x="792.2" y="387.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="795.2" y="398.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.13%)</title><rect x="792.2" y="371.0" width="1.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="795.2" y="382.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.13%)</title><rect x="792.2" y="355.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="795.2" y="366.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (2 samples, 0.13%)</title><rect x="792.2" y="339.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="795.2" y="350.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (1 samples, 0.07%)</title><rect x="792.2" y="323.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="795.2" y="334.0"></text>
</g>
<g>
<title>nmethod::find_pc_desc(unsigned char*, bool) (1 samples, 0.07%)</title><rect x="793.0" y="323.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="796.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (1 samples, 0.07%)</title><rect x="793.8" y="419.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="796.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.07%)</title><rect x="793.8" y="403.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.8" y="414.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="883.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="797.6" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="867.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="797.6" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="851.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="797.6" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="835.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="797.6" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="819.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="797.6" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="803.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="797.6" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="787.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="797.6" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="771.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="797.6" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="755.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.6" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="739.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="797.6" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="723.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.6" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="707.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="797.6" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="691.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="797.6" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="675.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="797.6" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="659.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="797.6" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="643.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="797.6" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="627.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.6" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="611.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="797.6" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="595.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="797.6" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="579.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="797.6" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="563.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="797.6" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="547.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="797.6" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="531.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="797.6" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelUnregistered (4 samples, 0.27%)</title><rect x="794.6" y="515.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="797.6" y="526.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (4 samples, 0.27%)</title><rect x="794.6" y="499.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="797.6" y="510.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (4 samples, 0.27%)</title><rect x="794.6" y="483.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="797.6" y="494.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (4 samples, 0.27%)</title><rect x="794.6" y="467.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="797.6" y="478.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (4 samples, 0.27%)</title><rect x="794.6" y="451.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="797.6" y="462.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.27%)</title><rect x="794.6" y="435.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="797.6" y="446.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.27%)</title><rect x="794.6" y="419.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="797.6" y="430.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (4 samples, 0.27%)</title><rect x="794.6" y="403.0" width="3.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="797.6" y="414.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (4 samples, 0.27%)</title><rect x="794.6" y="387.0" width="3.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="797.6" y="398.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (4 samples, 0.27%)</title><rect x="794.6" y="371.0" width="3.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="797.6" y="382.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (4 samples, 0.27%)</title><rect x="794.6" y="355.0" width="3.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="797.6" y="366.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (1 samples, 0.07%)</title><rect x="795.4" y="339.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="798.4" y="350.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.07%)</title><rect x="795.4" y="323.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="798.4" y="334.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.07%)</title><rect x="795.4" y="307.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="798.4" y="318.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(KlassHandle, int, int, Thread*) (1 samples, 0.07%)</title><rect x="795.4" y="291.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="798.4" y="302.0"></text>
</g>
<g>
<title>nmethod::find_pc_desc(unsigned char*, bool) (1 samples, 0.07%)</title><rect x="796.1" y="339.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="799.1" y="350.0"></text>
</g>
<g>
<title>nmethod::find_pc_desc_internal(unsigned char*, bool) (1 samples, 0.07%)</title><rect x="796.9" y="339.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="799.9" y="350.0"></text>
</g>
<g>
<title>PcDescCache::find_pc_desc(int, bool) (1 samples, 0.07%)</title><rect x="796.9" y="323.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="799.9" y="334.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$AbstractWriteTask.run (178 samples, 11.88%)</title><rect x="797.7" y="899.0" width="140.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="800.7" y="910.0">io/netty/channel/A..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteAndFlushTask.write (178 samples, 11.88%)</title><rect x="797.7" y="883.0" width="140.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="800.7" y="894.0">io/netty/channel/A..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$AbstractWriteTask.write (177 samples, 11.82%)</title><rect x="797.7" y="867.0" width="139.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="800.7" y="878.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$1900 (177 samples, 11.82%)</title><rect x="797.7" y="851.0" width="139.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="800.7" y="862.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (177 samples, 11.82%)</title><rect x="797.7" y="835.0" width="139.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="800.7" y="846.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (177 samples, 11.82%)</title><rect x="797.7" y="819.0" width="139.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="800.7" y="830.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (177 samples, 11.82%)</title><rect x="797.7" y="803.0" width="139.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="800.7" y="814.0">io/netty/handler/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (175 samples, 11.68%)</title><rect x="797.7" y="787.0" width="137.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="800.7" y="798.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (175 samples, 11.68%)</title><rect x="797.7" y="771.0" width="137.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="800.7" y="782.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (174 samples, 11.62%)</title><rect x="797.7" y="755.0" width="137.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="800.7" y="766.0">io/netty/channel/..</text>
</g>
<g>
<title>Runtime1::exception_handler_for_pc(JavaThread*) (1 samples, 0.07%)</title><rect x="797.7" y="739.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="800.7" y="750.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.07%)</title><rect x="797.7" y="723.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="800.7" y="734.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.07%)</title><rect x="797.7" y="707.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="800.7" y="718.0"></text>
</g>
<g>
<title>OopMapSet::find_map_at_offset(int) const (1 samples, 0.07%)</title><rect x="797.7" y="691.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="800.7" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (173 samples, 11.55%)</title><rect x="798.5" y="739.0" width="136.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="801.5" y="750.0">io/netty/channel/..</text>
</g>
<g>
<title>InterpreterRuntime::exception_handler_for_exception(JavaThread*, oopDesc*) (1 samples, 0.07%)</title><rect x="799.3" y="723.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="802.3" y="734.0"></text>
</g>
<g>
<title>Method::fast_exception_handler_bci_for(methodHandle, KlassHandle, int, Thread*) (1 samples, 0.07%)</title><rect x="799.3" y="707.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="802.3" y="718.0"></text>
</g>
<g>
<title>ExceptionTable::ExceptionTable(Method const*) (1 samples, 0.07%)</title><rect x="799.3" y="691.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="802.3" y="702.0"></text>
</g>
<g>
<title>ConstMethod::exception_table_length() const (1 samples, 0.07%)</title><rect x="799.3" y="675.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="802.3" y="686.0"></text>
</g>
<g>
<title>ConstMethod::exception_table_length_addr() const (1 samples, 0.07%)</title><rect x="799.3" y="659.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="802.3" y="670.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (171 samples, 11.42%)</title><rect x="800.1" y="723.0" width="134.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="803.1" y="734.0">io/netty/handler/..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.07%)</title><rect x="800.9" y="707.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="803.9" y="718.0"></text>
</g>
<g>
<title>InterpreterRuntime::exception_handler_for_exception(JavaThread*, oopDesc*) (2 samples, 0.13%)</title><rect x="801.7" y="707.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="804.7" y="718.0"></text>
</g>
<g>
<title>InterpreterRuntime::method(JavaThread*) (1 samples, 0.07%)</title><rect x="801.7" y="691.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="804.7" y="702.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.07%)</title><rect x="801.7" y="675.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="804.7" y="686.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.07%)</title><rect x="801.7" y="659.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="804.7" y="670.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.07%)</title><rect x="801.7" y="643.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="804.7" y="654.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.07%)</title><rect x="801.7" y="627.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="804.7" y="638.0"></text>
</g>
<g>
<title>frame::interpreter_frame_set_bcp(unsigned char*) (1 samples, 0.07%)</title><rect x="802.4" y="691.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="805.4" y="702.0"></text>
</g>
<g>
<title>Runtime1::exception_handler_for_pc(JavaThread*) (3 samples, 0.20%)</title><rect x="803.2" y="707.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="806.2" y="718.0"></text>
</g>
<g>
<title>Deoptimization::deoptimize_frame(JavaThread*, long*) (3 samples, 0.20%)</title><rect x="803.2" y="691.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="806.2" y="702.0"></text>
</g>
<g>
<title>Deoptimization::deoptimize_frame_internal(JavaThread*, long*) (3 samples, 0.20%)</title><rect x="803.2" y="675.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="806.2" y="686.0"></text>
</g>
<g>
<title>Deoptimization::deoptimize(JavaThread*, frame, RegisterMap*) (2 samples, 0.13%)</title><rect x="804.0" y="659.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="807.0" y="670.0"></text>
</g>
<g>
<title>Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*) (2 samples, 0.13%)</title><rect x="804.0" y="643.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="807.0" y="654.0"></text>
</g>
<g>
<title>compiledVFrame::compiledVFrame(frame const*, RegisterMap const*, JavaThread*, ScopeDesc*) (1 samples, 0.07%)</title><rect x="804.0" y="627.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="807.0" y="638.0"></text>
</g>
<g>
<title>vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*) (1 samples, 0.07%)</title><rect x="804.8" y="627.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="807.8" y="638.0"></text>
</g>
<g>
<title>compiledVFrame::compiledVFrame(frame const*, RegisterMap const*, JavaThread*, nmethod*) (1 samples, 0.07%)</title><rect x="804.8" y="611.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="807.8" y="622.0"></text>
</g>
<g>
<title>nmethod::scope_desc_at(unsigned char*) (1 samples, 0.07%)</title><rect x="804.8" y="595.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="807.8" y="606.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.07%)</title><rect x="804.8" y="579.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="807.8" y="590.0"></text>
</g>
<g>
<title>DebugInfoReadStream::read_method() (1 samples, 0.07%)</title><rect x="804.8" y="563.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="807.8" y="574.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/FullHttpRequest2XhakaEncoder.encode (136 samples, 9.08%)</title><rect x="805.6" y="707.0" width="107.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="808.6" y="718.0">com/tinysakur..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/FullHttpRequest2XhakaEncoder.encode (136 samples, 9.08%)</title><rect x="805.6" y="691.0" width="107.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.6" y="702.0">com/tinysakur..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (38 samples, 2.54%)</title><rect x="806.4" y="675.0" width="29.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.4" y="686.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (38 samples, 2.54%)</title><rect x="806.4" y="659.0" width="29.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="809.4" y="670.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (38 samples, 2.54%)</title><rect x="806.4" y="643.0" width="29.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="809.4" y="654.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (38 samples, 2.54%)</title><rect x="806.4" y="627.0" width="29.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.4" y="638.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (38 samples, 2.54%)</title><rect x="806.4" y="611.0" width="29.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.4" y="622.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (37 samples, 2.47%)</title><rect x="807.2" y="595.0" width="29.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="810.2" y="606.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (37 samples, 2.47%)</title><rect x="807.2" y="579.0" width="29.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="810.2" y="590.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (37 samples, 2.47%)</title><rect x="807.2" y="563.0" width="29.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="810.2" y="574.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (37 samples, 2.47%)</title><rect x="807.2" y="547.0" width="29.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="810.2" y="558.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (11 samples, 0.73%)</title><rect x="807.2" y="531.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="810.2" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (11 samples, 0.73%)</title><rect x="807.2" y="515.0" width="8.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="810.2" y="526.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (11 samples, 0.73%)</title><rect x="807.2" y="499.0" width="8.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="810.2" y="510.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (11 samples, 0.73%)</title><rect x="807.2" y="483.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.2" y="494.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (11 samples, 0.73%)</title><rect x="807.2" y="467.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="810.2" y="478.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (11 samples, 0.73%)</title><rect x="807.2" y="451.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="810.2" y="462.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpRequest.toString (9 samples, 0.60%)</title><rect x="807.2" y="435.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="810.2" y="446.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMessageUtil.appendFullRequest (8 samples, 0.53%)</title><rect x="807.2" y="419.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="810.2" y="430.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMessageUtil.appendFullCommon (5 samples, 0.33%)</title><rect x="807.2" y="403.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="810.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.33%)</title><rect x="807.2" y="387.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="810.2" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.13%)</title><rect x="807.2" y="371.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="810.2" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.07%)</title><rect x="807.2" y="355.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="810.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getChars (1 samples, 0.07%)</title><rect x="808.0" y="355.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="811.0" y="366.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="808.0" y="339.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="811.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.13%)</title><rect x="808.7" y="371.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.7" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.toString (1 samples, 0.07%)</title><rect x="808.7" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="811.7" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="808.7" y="339.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="811.7" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="808.7" y="323.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.7" y="334.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="809.5" y="355.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="812.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="810.3" y="371.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.3" y="382.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DecoderResult.toString (1 samples, 0.07%)</title><rect x="810.3" y="355.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="813.3" y="366.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMessageUtil.appendHeaders (2 samples, 0.13%)</title><rect x="811.1" y="403.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="814.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.13%)</title><rect x="811.1" y="387.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="814.1" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.13%)</title><rect x="811.1" y="371.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="814.1" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getChars (2 samples, 0.13%)</title><rect x="811.1" y="355.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.1" y="366.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="811.9" y="339.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="814.9" y="350.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMessageUtil.appendInitialLine (1 samples, 0.07%)</title><rect x="812.7" y="403.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="815.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="812.7" y="387.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="815.7" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="812.7" y="371.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="815.7" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getChars (1 samples, 0.07%)</title><rect x="812.7" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="815.7" y="366.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="812.7" y="339.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="815.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="813.5" y="419.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.13%)</title><rect x="814.3" y="435.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="817.3" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="815.0" y="419.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="818.0" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (7 samples, 0.47%)</title><rect x="815.8" y="531.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="818.8" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (5 samples, 0.33%)</title><rect x="815.8" y="515.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="818.8" y="526.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (5 samples, 0.33%)</title><rect x="815.8" y="499.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="818.8" y="510.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (5 samples, 0.33%)</title><rect x="815.8" y="483.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="818.8" y="494.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (5 samples, 0.33%)</title><rect x="815.8" y="467.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="818.8" y="478.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (5 samples, 0.33%)</title><rect x="815.8" y="451.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.8" y="462.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (5 samples, 0.33%)</title><rect x="815.8" y="435.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="818.8" y="446.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (5 samples, 0.33%)</title><rect x="815.8" y="419.0" width="4.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="818.8" y="430.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.07%)</title><rect x="816.6" y="403.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="819.6" y="414.0"></text>
</g>
<g>
<title>writeBytes (3 samples, 0.20%)</title><rect x="817.4" y="403.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="820.4" y="414.0"></text>
</g>
<g>
<title>write (3 samples, 0.20%)</title><rect x="817.4" y="387.0" width="2.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="820.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.07%)</title><rect x="819.8" y="515.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="822.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (1 samples, 0.07%)</title><rect x="819.8" y="499.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.07%)</title><rect x="819.8" y="483.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.07%)</title><rect x="819.8" y="467.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="819.8" y="451.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="819.8" y="435.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.8" y="446.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="819.8" y="419.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.8" y="430.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.07%)</title><rect x="819.8" y="403.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="822.8" y="414.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="819.8" y="387.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="822.8" y="398.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="819.8" y="371.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="822.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="820.6" y="515.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="820.6" y="499.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.07%)</title><rect x="820.6" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.6" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (19 samples, 1.27%)</title><rect x="821.3" y="531.0" width="15.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.3" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (15 samples, 1.00%)</title><rect x="821.3" y="515.0" width="11.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.3" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (15 samples, 1.00%)</title><rect x="821.3" y="499.0" width="11.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="824.3" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (15 samples, 1.00%)</title><rect x="821.3" y="483.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="824.3" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (14 samples, 0.93%)</title><rect x="821.3" y="467.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.3" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (5 samples, 0.33%)</title><rect x="821.3" y="451.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="824.3" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (5 samples, 0.33%)</title><rect x="821.3" y="435.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="824.3" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (5 samples, 0.33%)</title><rect x="821.3" y="419.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="824.3" y="430.0"></text>
</g>
<g>
<title>Runtime1::monitorexit(JavaThread*, BasicObjectLock*) (1 samples, 0.07%)</title><rect x="821.3" y="403.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="824.3" y="414.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.07%)</title><rect x="821.3" y="387.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="824.3" y="398.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (4 samples, 0.27%)</title><rect x="822.1" y="403.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="825.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (1 samples, 0.07%)</title><rect x="822.1" y="387.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="825.1" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="822.1" y="371.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="825.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="822.1" y="355.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="825.1" y="366.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="822.1" y="339.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="825.1" y="350.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (3 samples, 0.20%)</title><rect x="822.9" y="387.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.9" y="398.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (3 samples, 0.20%)</title><rect x="822.9" y="371.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="825.9" y="382.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (1 samples, 0.07%)</title><rect x="822.9" y="355.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="825.9" y="366.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (1 samples, 0.07%)</title><rect x="822.9" y="339.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.9" y="350.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (2 samples, 0.13%)</title><rect x="823.7" y="355.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="826.7" y="366.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (2 samples, 0.13%)</title><rect x="823.7" y="339.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.7" y="350.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (2 samples, 0.13%)</title><rect x="823.7" y="323.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="826.7" y="334.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (2 samples, 0.13%)</title><rect x="823.7" y="307.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="826.7" y="318.0"></text>
</g>
<g>
<title>sun/util/calendar/Gregorian$Date.getNormalizedYear (1 samples, 0.07%)</title><rect x="823.7" y="291.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="826.7" y="302.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getOffsets (1 samples, 0.07%)</title><rect x="824.5" y="291.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="827.5" y="302.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getOffsets (1 samples, 0.07%)</title><rect x="824.5" y="275.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.5" y="286.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getTransitionIndex (1 samples, 0.07%)</title><rect x="824.5" y="259.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="827.5" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (5 samples, 0.33%)</title><rect x="825.3" y="451.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="828.3" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (4 samples, 0.27%)</title><rect x="826.1" y="435.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="829.1" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.abbreviate (4 samples, 0.27%)</title><rect x="826.1" y="419.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="829.1" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.computeDotIndexes (1 samples, 0.07%)</title><rect x="826.9" y="403.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="829.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="826.9" y="387.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.9" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.07%)</title><rect x="827.7" y="403.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="828.4" y="403.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="831.4" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="828.4" y="387.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="831.4" y="398.0"></text>
</g>
<g>
<title>java/lang/String.getChars (1 samples, 0.07%)</title><rect x="828.4" y="371.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="831.4" y="382.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="828.4" y="355.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="831.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.27%)</title><rect x="829.2" y="451.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="832.2" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.27%)</title><rect x="829.2" y="435.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.2" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.07%)</title><rect x="831.6" y="419.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="834.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.07%)</title><rect x="832.4" y="467.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="835.4" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="832.4" y="451.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.4" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="832.4" y="435.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="832.4" y="419.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="835.4" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (4 samples, 0.27%)</title><rect x="833.2" y="515.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="836.2" y="526.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.27%)</title><rect x="833.2" y="499.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="836.2" y="510.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.27%)</title><rect x="833.2" y="483.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="836.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.20%)</title><rect x="834.0" y="467.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="837.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (2 samples, 0.13%)</title><rect x="834.0" y="451.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="837.0" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="834.7" y="435.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.7" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="834.7" y="419.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="837.7" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="834.7" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="837.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.deref (1 samples, 0.07%)</title><rect x="835.5" y="451.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="838.5" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="835.5" y="435.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="838.5" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.07%)</title><rect x="835.5" y="419.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="838.5" y="430.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="835.5" y="403.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="838.5" y="414.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/XhakaBodySerializeFacade.findRequestSerializer (1 samples, 0.07%)</title><rect x="836.3" y="675.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="839.3" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.07%)</title><rect x="836.3" y="659.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="839.3" y="670.0"></text>
</g>
<g>
<title>java/lang/Byte.hashCode (1 samples, 0.07%)</title><rect x="836.3" y="643.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="839.3" y="654.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpRequestProtobufTypeSerialize.serialize (16 samples, 1.07%)</title><rect x="837.1" y="675.0" width="12.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="840.1" y="686.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpRequestProtobufTypeSerialize.serialize (16 samples, 1.07%)</title><rect x="837.1" y="659.0" width="12.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="840.1" y="670.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite.toByteArray (9 samples, 0.60%)</title><rect x="837.9" y="643.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="840.9" y="654.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpRequestOuterClass$HttpRequest.getSerializedSize (8 samples, 0.53%)</title><rect x="837.9" y="627.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.9" y="638.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.isEmpty (2 samples, 0.13%)</title><rect x="837.9" y="611.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.9" y="622.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.size (1 samples, 0.07%)</title><rect x="838.7" y="595.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="841.7" y="606.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSize (4 samples, 0.27%)</title><rect x="839.5" y="611.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="842.5" y="622.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream.computeMessageSizeNoTag (4 samples, 0.27%)</title><rect x="839.5" y="595.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="842.5" y="606.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HeaderOuterClass$Header.getSerializedSize (4 samples, 0.27%)</title><rect x="839.5" y="579.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="842.5" y="590.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HeaderOuterClass$Header.getNameBytes (3 samples, 0.20%)</title><rect x="839.5" y="563.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.5" y="574.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (3 samples, 0.20%)</title><rect x="839.5" y="547.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="842.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.20%)</title><rect x="839.5" y="531.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.13%)</title><rect x="840.3" y="515.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.3" y="526.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HeaderOuterClass$Header.getValueBytes (1 samples, 0.07%)</title><rect x="841.8" y="563.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="844.8" y="574.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (1 samples, 0.07%)</title><rect x="841.8" y="547.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="844.8" y="558.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.07%)</title><rect x="841.8" y="531.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="844.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.07%)</title><rect x="841.8" y="515.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="844.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8.newEncoder (1 samples, 0.07%)</title><rect x="841.8" y="499.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="844.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="841.8" y="483.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="841.8" y="467.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="844.8" y="478.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="841.8" y="451.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="844.8" y="462.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="841.8" y="435.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="844.8" y="446.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.replaceWith (1 samples, 0.07%)</title><rect x="841.8" y="419.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="844.8" y="430.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpRequestOuterClass$HttpRequest.getUriBytes (2 samples, 0.13%)</title><rect x="842.6" y="611.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="845.6" y="622.0"></text>
</g>
<g>
<title>com/google/protobuf/ByteString.copyFromUtf8 (2 samples, 0.13%)</title><rect x="842.6" y="595.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.13%)</title><rect x="842.6" y="579.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.13%)</title><rect x="842.6" y="563.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="845.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8.newEncoder (2 samples, 0.13%)</title><rect x="842.6" y="547.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="845.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="843.4" y="531.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="843.4" y="515.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="846.4" y="526.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="843.4" y="499.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="846.4" y="510.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="843.4" y="483.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="846.4" y="494.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.replaceWith (1 samples, 0.07%)</title><rect x="843.4" y="467.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="846.4" y="478.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpRequestOuterClass$HttpRequest.writeTo (1 samples, 0.07%)</title><rect x="844.2" y="627.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="847.2" y="638.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessage (1 samples, 0.07%)</title><rect x="844.2" y="611.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="847.2" y="622.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeMessageNoTag (1 samples, 0.07%)</title><rect x="844.2" y="595.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.2" y="606.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HeaderOuterClass$Header.writeTo (1 samples, 0.07%)</title><rect x="844.2" y="579.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="847.2" y="590.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.writeString (1 samples, 0.07%)</title><rect x="844.2" y="563.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="847.2" y="574.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeBytes (1 samples, 0.07%)</title><rect x="844.2" y="547.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="847.2" y="558.0"></text>
</g>
<g>
<title>com/google/protobuf/CodedOutputStream$ArrayEncoder.writeTag (1 samples, 0.07%)</title><rect x="844.2" y="531.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="847.2" y="542.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpRequestOuterClass$HttpRequest$Builder.addAllHeaders (3 samples, 0.20%)</title><rect x="845.0" y="643.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="848.0" y="654.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite$Builder.addAll (3 samples, 0.20%)</title><rect x="845.0" y="627.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.0" y="638.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractMessageLite$Builder.checkForNullValues (1 samples, 0.07%)</title><rect x="845.0" y="611.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="848.0" y="622.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.07%)</title><rect x="845.0" y="595.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="848.0" y="606.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.07%)</title><rect x="845.0" y="579.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="848.0" y="590.0"></text>
</g>
<g>
<title>CallInfo::~CallInfo() (1 samples, 0.07%)</title><rect x="845.0" y="563.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="848.0" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (2 samples, 0.13%)</title><rect x="845.8" y="611.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.8" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.13%)</title><rect x="845.8" y="595.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="848.8" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.13%)</title><rect x="845.8" y="579.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="848.8" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.13%)</title><rect x="845.8" y="563.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="848.8" y="574.0"></text>
</g>
<g>
<title>oop_disjoint_arraycopy (2 samples, 0.13%)</title><rect x="845.8" y="547.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="848.8" y="558.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpRequestOuterClass$HttpRequest$Builder.build (1 samples, 0.07%)</title><rect x="847.3" y="643.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="850.3" y="654.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpRequestOuterClass$HttpRequest$Builder.buildPartial (1 samples, 0.07%)</title><rect x="847.3" y="627.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.3" y="638.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils$DelegatingStringSet.iterator (1 samples, 0.07%)</title><rect x="848.1" y="643.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.1" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.names (1 samples, 0.07%)</title><rect x="848.9" y="643.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.9" y="654.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils.namesAsString (1 samples, 0.07%)</title><rect x="848.9" y="627.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="851.9" y="638.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.names (1 samples, 0.07%)</title><rect x="848.9" y="611.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="851.9" y="622.0"></text>
</g>
<g>
<title>java/util/LinkedHashSet.&lt;init&gt; (1 samples, 0.07%)</title><rect x="848.9" y="595.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="851.9" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.07%)</title><rect x="848.9" y="579.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="851.9" y="590.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.&lt;init&gt; (1 samples, 0.07%)</title><rect x="848.9" y="563.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="851.9" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (1 samples, 0.07%)</title><rect x="848.9" y="547.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="848.9" y="531.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.9" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.tableSizeFor (1 samples, 0.07%)</title><rect x="848.9" y="515.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="851.9" y="526.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/protocal/Xhaka.setXhakaId (1 samples, 0.07%)</title><rect x="849.7" y="675.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="852.7" y="686.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/util/BytesUtils.long2bytes (1 samples, 0.07%)</title><rect x="849.7" y="659.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="852.7" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.writeAndFlush (78 samples, 5.21%)</title><rect x="850.5" y="675.0" width="61.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.5" y="686.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.writeAndFlush (77 samples, 5.14%)</title><rect x="851.3" y="659.0" width="60.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="854.3" y="670.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (77 samples, 5.14%)</title><rect x="851.3" y="643.0" width="60.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="854.3" y="654.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (77 samples, 5.14%)</title><rect x="851.3" y="627.0" width="60.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="854.3" y="638.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (76 samples, 5.07%)</title><rect x="852.1" y="611.0" width="59.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="855.1" y="622.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWriteAndFlush (76 samples, 5.07%)</title><rect x="852.1" y="595.0" width="59.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.1" y="606.0">io/net..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (43 samples, 2.87%)</title><rect x="852.1" y="579.0" width="33.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="855.1" y="590.0">io..</text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundHandlerAdapter.flush (43 samples, 2.87%)</title><rect x="852.1" y="563.0" width="33.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.1" y="574.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (43 samples, 2.87%)</title><rect x="852.1" y="547.0" width="33.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.1" y="558.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (43 samples, 2.87%)</title><rect x="852.1" y="531.0" width="33.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="855.1" y="542.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (43 samples, 2.87%)</title><rect x="852.1" y="515.0" width="33.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="855.1" y="526.0">io..</text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundHandlerAdapter.flush (43 samples, 2.87%)</title><rect x="852.1" y="499.0" width="33.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.1" y="510.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (43 samples, 2.87%)</title><rect x="852.1" y="483.0" width="33.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="855.1" y="494.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (43 samples, 2.87%)</title><rect x="852.1" y="467.0" width="33.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.1" y="478.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (43 samples, 2.87%)</title><rect x="852.1" y="451.0" width="33.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.1" y="462.0">io..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.flush (42 samples, 2.80%)</title><rect x="852.1" y="435.0" width="33.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.1" y="446.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush (42 samples, 2.80%)</title><rect x="852.1" y="419.0" width="33.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.1" y="430.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.assertEventLoop (1 samples, 0.07%)</title><rect x="852.1" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.1" y="414.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.flush0 (41 samples, 2.74%)</title><rect x="852.9" y="403.0" width="32.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.9" y="414.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (41 samples, 2.74%)</title><rect x="852.9" y="387.0" width="32.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.9" y="398.0">io..</text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doWrite (41 samples, 2.74%)</title><rect x="852.9" y="371.0" width="32.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.9" y="382.0">io..</text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.nioBuffers (1 samples, 0.07%)</title><rect x="853.6" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.6" y="366.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.removeBytes (7 samples, 0.47%)</title><rect x="854.4" y="355.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="857.4" y="366.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.clearNioBuffers (1 samples, 0.07%)</title><rect x="854.4" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="857.4" y="350.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (1 samples, 0.07%)</title><rect x="854.4" y="323.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="857.4" y="334.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (1 samples, 0.07%)</title><rect x="854.4" y="307.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="857.4" y="318.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.remove (6 samples, 0.40%)</title><rect x="855.2" y="339.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="858.2" y="350.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.safeSuccess (2 samples, 0.13%)</title><rect x="855.2" y="323.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="858.2" y="334.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.trySuccess (2 samples, 0.13%)</title><rect x="855.2" y="307.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="858.2" y="318.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.trySuccess (2 samples, 0.13%)</title><rect x="855.2" y="291.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="858.2" y="302.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultPromise.notifyListeners (2 samples, 0.13%)</title><rect x="855.2" y="275.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="858.2" y="286.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPromise.executor (1 samples, 0.07%)</title><rect x="855.2" y="259.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="858.2" y="270.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="856.0" y="259.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="859.0" y="270.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.safeRelease (4 samples, 0.27%)</title><rect x="856.8" y="323.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="859.8" y="334.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (2 samples, 0.13%)</title><rect x="856.8" y="307.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="859.8" y="318.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (1 samples, 0.07%)</title><rect x="856.8" y="291.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="859.8" y="302.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (1 samples, 0.07%)</title><rect x="856.8" y="275.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="859.8" y="286.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (1 samples, 0.07%)</title><rect x="856.8" y="259.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="859.8" y="270.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.add (1 samples, 0.07%)</title><rect x="856.8" y="243.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="859.8" y="254.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cache (1 samples, 0.07%)</title><rect x="856.8" y="227.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="859.8" y="238.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.cacheForTiny (1 samples, 0.07%)</title><rect x="856.8" y="211.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="859.8" y="222.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.removeEntry (1 samples, 0.07%)</title><rect x="857.6" y="291.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="860.6" y="302.0"></text>
</g>
<g>
<title>io/netty/util/internal/logging/Slf4JLogger.warn (2 samples, 0.13%)</title><rect x="858.4" y="307.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="861.4" y="318.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.13%)</title><rect x="858.4" y="291.0" width="1.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="861.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (32 samples, 2.14%)</title><rect x="859.9" y="355.0" width="25.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="862.9" y="366.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (32 samples, 2.14%)</title><rect x="859.9" y="339.0" width="25.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="862.9" y="350.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (32 samples, 2.14%)</title><rect x="859.9" y="323.0" width="25.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="862.9" y="334.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (32 samples, 2.14%)</title><rect x="859.9" y="307.0" width="25.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="862.9" y="318.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (32 samples, 2.14%)</title><rect x="859.9" y="291.0" width="25.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="862.9" y="302.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (1 samples, 0.07%)</title><rect x="860.7" y="275.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="863.7" y="286.0"></text>
</g>
<g>
<title>jni_GetIntField (1 samples, 0.07%)</title><rect x="860.7" y="259.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="863.7" y="270.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.07%)</title><rect x="860.7" y="243.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="863.7" y="254.0"></text>
</g>
<g>
<title>write (30 samples, 2.00%)</title><rect x="861.5" y="275.0" width="23.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="864.5" y="286.0">w..</text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.flush0 (1 samples, 0.07%)</title><rect x="885.2" y="435.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="888.2" y="446.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe.isFlushPending (1 samples, 0.07%)</title><rect x="885.2" y="419.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="888.2" y="430.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (33 samples, 2.20%)</title><rect x="885.9" y="579.0" width="26.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="888.9" y="590.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (33 samples, 2.20%)</title><rect x="885.9" y="563.0" width="26.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="888.9" y="574.0">i..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/XhakaEncoder.encode (33 samples, 2.20%)</title><rect x="885.9" y="547.0" width="26.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="888.9" y="558.0">c..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/XhakaEncoder.encode (33 samples, 2.20%)</title><rect x="885.9" y="531.0" width="26.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="888.9" y="542.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (30 samples, 2.00%)</title><rect x="885.9" y="515.0" width="23.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="888.9" y="526.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (13 samples, 0.87%)</title><rect x="885.9" y="499.0" width="10.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="888.9" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (13 samples, 0.87%)</title><rect x="885.9" y="483.0" width="10.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="888.9" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (12 samples, 0.80%)</title><rect x="886.7" y="467.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="889.7" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (12 samples, 0.80%)</title><rect x="886.7" y="451.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.7" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (12 samples, 0.80%)</title><rect x="886.7" y="435.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="889.7" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (12 samples, 0.80%)</title><rect x="886.7" y="419.0" width="9.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="889.7" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (11 samples, 0.73%)</title><rect x="886.7" y="403.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="889.7" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (11 samples, 0.73%)</title><rect x="886.7" y="387.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.7" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (2 samples, 0.13%)</title><rect x="886.7" y="371.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="889.7" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (2 samples, 0.13%)</title><rect x="886.7" y="355.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="889.7" y="366.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.13%)</title><rect x="886.7" y="339.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="889.7" y="350.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.13%)</title><rect x="886.7" y="323.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="889.7" y="334.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (2 samples, 0.13%)</title><rect x="886.7" y="307.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="889.7" y="318.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (2 samples, 0.13%)</title><rect x="886.7" y="291.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="889.7" y="302.0"></text>
</g>
<g>
<title>java/lang/Object.toString (1 samples, 0.07%)</title><rect x="886.7" y="275.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="886.7" y="259.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="887.5" y="275.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.5" y="286.0"></text>
</g>
<g>
<title>java/lang/Object.toString (1 samples, 0.07%)</title><rect x="887.5" y="259.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="890.5" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (2 samples, 0.13%)</title><rect x="888.3" y="371.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="891.3" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.07%)</title><rect x="888.3" y="355.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="891.3" y="366.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.07%)</title><rect x="888.3" y="339.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="891.3" y="350.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.07%)</title><rect x="888.3" y="323.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="891.3" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.07%)</title><rect x="888.3" y="307.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="891.3" y="318.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.07%)</title><rect x="888.3" y="291.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="891.3" y="302.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.07%)</title><rect x="888.3" y="275.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="891.3" y="286.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.07%)</title><rect x="888.3" y="259.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="891.3" y="270.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.07%)</title><rect x="888.3" y="243.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="891.3" y="254.0"></text>
</g>
<g>
<title>write (1 samples, 0.07%)</title><rect x="888.3" y="227.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="891.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.07%)</title><rect x="889.1" y="355.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="892.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (1 samples, 0.07%)</title><rect x="889.1" y="339.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="892.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.07%)</title><rect x="889.1" y="323.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="892.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.07%)</title><rect x="889.1" y="307.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="892.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="889.1" y="291.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="892.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="889.1" y="275.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="892.1" y="286.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="889.1" y="259.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="892.1" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.07%)</title><rect x="889.1" y="243.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="892.1" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="889.1" y="227.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="892.1" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="889.1" y="211.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="892.1" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (7 samples, 0.47%)</title><rect x="889.9" y="371.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="892.9" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (4 samples, 0.27%)</title><rect x="889.9" y="355.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="892.9" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (4 samples, 0.27%)</title><rect x="889.9" y="339.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="892.9" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (4 samples, 0.27%)</title><rect x="889.9" y="323.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="892.9" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/Converter.write (1 samples, 0.07%)</title><rect x="890.7" y="307.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="893.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="890.7" y="291.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="893.7" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="890.7" y="275.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="893.7" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.07%)</title><rect x="890.7" y="259.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="893.7" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (2 samples, 0.13%)</title><rect x="891.5" y="307.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="894.5" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (2 samples, 0.13%)</title><rect x="891.5" y="291.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="894.5" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (2 samples, 0.13%)</title><rect x="891.5" y="275.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="894.5" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.abbreviate (2 samples, 0.13%)</title><rect x="891.5" y="259.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="894.5" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.07%)</title><rect x="891.5" y="243.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="894.5" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="891.5" y="227.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="894.5" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="891.5" y="211.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="894.5" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="891.5" y="195.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="894.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="892.2" y="243.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="895.2" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="892.2" y="227.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="895.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.getChars (1 samples, 0.07%)</title><rect x="892.2" y="211.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="895.2" y="222.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="892.2" y="195.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="895.2" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (3 samples, 0.20%)</title><rect x="893.0" y="355.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="896.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.20%)</title><rect x="893.0" y="339.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="896.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.20%)</title><rect x="893.0" y="323.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="896.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.13%)</title><rect x="893.8" y="307.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="896.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (1 samples, 0.07%)</title><rect x="893.8" y="291.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encode (1 samples, 0.07%)</title><rect x="893.8" y="275.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="896.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.deref (1 samples, 0.07%)</title><rect x="894.6" y="291.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.6" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="894.6" y="275.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="897.6" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.07%)</title><rect x="894.6" y="259.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="897.6" y="270.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="894.6" y="243.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="897.6" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="895.4" y="403.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.4" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.07%)</title><rect x="895.4" y="387.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="898.4" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.07%)</title><rect x="895.4" y="371.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.4" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.07%)</title><rect x="895.4" y="355.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.4" y="366.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.07%)</title><rect x="895.4" y="339.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="898.4" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (17 samples, 1.13%)</title><rect x="896.2" y="499.0" width="13.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.2" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (17 samples, 1.13%)</title><rect x="896.2" y="483.0" width="13.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="899.2" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (17 samples, 1.13%)</title><rect x="896.2" y="467.0" width="13.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="899.2" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (17 samples, 1.13%)</title><rect x="896.2" y="451.0" width="13.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="899.2" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (17 samples, 1.13%)</title><rect x="896.2" y="435.0" width="13.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="899.2" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (17 samples, 1.13%)</title><rect x="896.2" y="419.0" width="13.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.2" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (17 samples, 1.13%)</title><rect x="896.2" y="403.0" width="13.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="899.2" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (17 samples, 1.13%)</title><rect x="896.2" y="387.0" width="13.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.2" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (4 samples, 0.27%)</title><rect x="896.2" y="371.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="899.2" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (4 samples, 0.27%)</title><rect x="896.2" y="355.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="899.2" y="366.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.27%)</title><rect x="896.2" y="339.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="899.2" y="350.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.27%)</title><rect x="896.2" y="323.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="899.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="896.2" y="307.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="899.2" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="896.2" y="291.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="899.2" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (3 samples, 0.20%)</title><rect x="897.0" y="307.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="900.0" y="318.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (2 samples, 0.13%)</title><rect x="897.8" y="291.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="900.8" y="302.0"></text>
</g>
<g>
<title>java/lang/Long.toString (2 samples, 0.13%)</title><rect x="897.8" y="275.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="900.8" y="286.0"></text>
</g>
<g>
<title>java/lang/Long.toString (2 samples, 0.13%)</title><rect x="897.8" y="259.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="900.8" y="270.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (2 samples, 0.13%)</title><rect x="897.8" y="243.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="900.8" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (4 samples, 0.27%)</title><rect x="899.3" y="371.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="902.3" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (3 samples, 0.20%)</title><rect x="899.3" y="355.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="902.3" y="366.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (3 samples, 0.20%)</title><rect x="899.3" y="339.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="902.3" y="350.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (3 samples, 0.20%)</title><rect x="899.3" y="323.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="902.3" y="334.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (3 samples, 0.20%)</title><rect x="899.3" y="307.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.3" y="318.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (3 samples, 0.20%)</title><rect x="899.3" y="291.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="902.3" y="302.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (3 samples, 0.20%)</title><rect x="899.3" y="275.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="902.3" y="286.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (3 samples, 0.20%)</title><rect x="899.3" y="259.0" width="2.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="902.3" y="270.0"></text>
</g>
<g>
<title>writeBytes (3 samples, 0.20%)</title><rect x="899.3" y="243.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="902.3" y="254.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.07%)</title><rect x="899.3" y="227.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="902.3" y="238.0"></text>
</g>
<g>
<title>write (2 samples, 0.13%)</title><rect x="900.1" y="227.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="903.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.07%)</title><rect x="901.7" y="355.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (1 samples, 0.07%)</title><rect x="901.7" y="339.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="904.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.07%)</title><rect x="901.7" y="323.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="904.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.07%)</title><rect x="901.7" y="307.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="904.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.07%)</title><rect x="901.7" y="291.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.07%)</title><rect x="901.7" y="275.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="904.7" y="286.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.07%)</title><rect x="901.7" y="259.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="904.7" y="270.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.07%)</title><rect x="901.7" y="243.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="904.7" y="254.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="901.7" y="227.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="904.7" y="238.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="901.7" y="211.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="904.7" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (9 samples, 0.60%)</title><rect x="902.5" y="371.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.5" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (7 samples, 0.47%)</title><rect x="902.5" y="355.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.5" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (7 samples, 0.47%)</title><rect x="902.5" y="339.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="905.5" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (7 samples, 0.47%)</title><rect x="902.5" y="323.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="905.5" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (4 samples, 0.27%)</title><rect x="904.1" y="307.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.1" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.07%)</title><rect x="904.1" y="291.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="907.1" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.07%)</title><rect x="904.1" y="275.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="907.1" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.07%)</title><rect x="904.1" y="259.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.1" y="270.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.07%)</title><rect x="904.1" y="243.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="907.1" y="254.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.07%)</title><rect x="904.1" y="227.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.1" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (3 samples, 0.20%)</title><rect x="904.8" y="291.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="907.8" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (3 samples, 0.20%)</title><rect x="904.8" y="275.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="907.8" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.abbreviate (3 samples, 0.20%)</title><rect x="904.8" y="259.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="907.8" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.07%)</title><rect x="905.6" y="243.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="908.6" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="905.6" y="227.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="908.6" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="905.6" y="211.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="905.6" y="195.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="908.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="906.4" y="243.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="909.4" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="906.4" y="227.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="909.4" y="238.0"></text>
</g>
<g>
<title>java/lang/String.getChars (1 samples, 0.07%)</title><rect x="906.4" y="211.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="909.4" y="222.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="906.4" y="195.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="909.4" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.07%)</title><rect x="907.2" y="307.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="910.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="907.2" y="291.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="910.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="907.2" y="275.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="910.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="907.2" y="259.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="910.2" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (2 samples, 0.13%)</title><rect x="908.0" y="355.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="911.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.13%)</title><rect x="908.0" y="339.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="911.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.13%)</title><rect x="908.0" y="323.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="911.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.07%)</title><rect x="908.8" y="307.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="911.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (1 samples, 0.07%)</title><rect x="908.8" y="291.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="911.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encode (1 samples, 0.07%)</title><rect x="908.8" y="275.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="911.8" y="286.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (2 samples, 0.13%)</title><rect x="909.6" y="515.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="912.6" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (2 samples, 0.13%)</title><rect x="909.6" y="499.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="912.6" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (2 samples, 0.13%)</title><rect x="909.6" y="483.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="912.6" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (2 samples, 0.13%)</title><rect x="909.6" y="467.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="912.6" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.07%)</title><rect x="910.4" y="451.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="913.4" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (1 samples, 0.07%)</title><rect x="910.4" y="435.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="913.4" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolSubpage.allocate (1 samples, 0.07%)</title><rect x="910.4" y="419.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.4" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1 samples, 0.07%)</title><rect x="911.1" y="515.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.1" y="526.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.07%)</title><rect x="911.9" y="675.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="914.9" y="686.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.07%)</title><rect x="911.9" y="659.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="914.9" y="670.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.07%)</title><rect x="911.9" y="643.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="914.9" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.07%)</title><rect x="911.9" y="627.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.9" y="638.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.07%)</title><rect x="911.9" y="611.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.9" y="622.0"></text>
</g>
<g>
<title>io/netty/handler/codec/EncoderException.&lt;init&gt; (5 samples, 0.33%)</title><rect x="912.7" y="707.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="915.7" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecException.&lt;init&gt; (5 samples, 0.33%)</title><rect x="912.7" y="691.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="915.7" y="702.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (5 samples, 0.33%)</title><rect x="912.7" y="675.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (5 samples, 0.33%)</title><rect x="912.7" y="659.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.7" y="670.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (5 samples, 0.33%)</title><rect x="912.7" y="643.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="915.7" y="654.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (5 samples, 0.33%)</title><rect x="912.7" y="627.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="915.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (5 samples, 0.33%)</title><rect x="912.7" y="611.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="915.7" y="622.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (5 samples, 0.33%)</title><rect x="912.7" y="595.0" width="4.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="915.7" y="606.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (5 samples, 0.33%)</title><rect x="912.7" y="579.0" width="4.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="915.7" y="590.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (5 samples, 0.33%)</title><rect x="912.7" y="563.0" width="4.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="915.7" y="574.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.07%)</title><rect x="912.7" y="547.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="915.7" y="558.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (4 samples, 0.27%)</title><rect x="913.5" y="547.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="916.5" y="558.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (1 samples, 0.07%)</title><rect x="914.3" y="531.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="917.3" y="542.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.07%)</title><rect x="914.3" y="515.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="917.3" y="526.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(KlassHandle, int, int, Thread*) (1 samples, 0.07%)</title><rect x="914.3" y="499.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="917.3" y="510.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.13%)</title><rect x="915.1" y="531.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="918.1" y="542.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (2 samples, 0.13%)</title><rect x="915.1" y="515.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="918.1" y="526.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (2 samples, 0.13%)</title><rect x="915.1" y="499.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="918.1" y="510.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (22 samples, 1.47%)</title><rect x="916.7" y="707.0" width="17.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.7" y="718.0"></text>
</g>
<g>
<title>InterpreterRuntime::exception_handler_for_exception(JavaThread*, oopDesc*) (2 samples, 0.13%)</title><rect x="916.7" y="691.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="919.7" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpRequest.release (20 samples, 1.34%)</title><rect x="918.2" y="691.0" width="15.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="921.2" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (20 samples, 1.34%)</title><rect x="918.2" y="675.0" width="15.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="921.2" y="686.0"></text>
</g>
<g>
<title>InterpreterRuntime::exception_handler_for_exception(JavaThread*, oopDesc*) (1 samples, 0.07%)</title><rect x="918.2" y="659.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="921.2" y="670.0"></text>
</g>
<g>
<title>InterpreterRuntime::method(JavaThread*) (1 samples, 0.07%)</title><rect x="918.2" y="643.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="921.2" y="654.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.07%)</title><rect x="918.2" y="627.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="921.2" y="638.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.07%)</title><rect x="918.2" y="611.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="921.2" y="622.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.07%)</title><rect x="918.2" y="595.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="921.2" y="606.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.07%)</title><rect x="918.2" y="579.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="921.2" y="590.0"></text>
</g>
<g>
<title>io/netty/util/IllegalReferenceCountException.&lt;init&gt; (18 samples, 1.20%)</title><rect x="919.0" y="659.0" width="14.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="922.0" y="670.0"></text>
</g>
<g>
<title>io/netty/util/IllegalReferenceCountException.&lt;init&gt; (17 samples, 1.13%)</title><rect x="919.0" y="643.0" width="13.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="922.0" y="654.0"></text>
</g>
<g>
<title>java/lang/IllegalStateException.&lt;init&gt; (17 samples, 1.13%)</title><rect x="919.0" y="627.0" width="13.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="922.0" y="638.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (17 samples, 1.13%)</title><rect x="919.0" y="611.0" width="13.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="922.0" y="622.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (17 samples, 1.13%)</title><rect x="919.0" y="595.0" width="13.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.0" y="606.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (17 samples, 1.13%)</title><rect x="919.0" y="579.0" width="13.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="922.0" y="590.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (16 samples, 1.07%)</title><rect x="919.0" y="563.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="922.0" y="574.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (16 samples, 1.07%)</title><rect x="919.0" y="547.0" width="12.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="922.0" y="558.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (16 samples, 1.07%)</title><rect x="919.0" y="531.0" width="12.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="922.0" y="542.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (16 samples, 1.07%)</title><rect x="919.0" y="515.0" width="12.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="922.0" y="526.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (16 samples, 1.07%)</title><rect x="919.0" y="499.0" width="12.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="922.0" y="510.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.07%)</title><rect x="919.0" y="483.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="922.0" y="494.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (14 samples, 0.93%)</title><rect x="919.8" y="483.0" width="11.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="922.8" y="494.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (3 samples, 0.20%)</title><rect x="923.0" y="467.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="926.0" y="478.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.07%)</title><rect x="923.0" y="451.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="926.0" y="462.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(KlassHandle, int, int, Thread*) (1 samples, 0.07%)</title><rect x="923.0" y="435.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="926.0" y="446.0"></text>
</g>
<g>
<title>objArrayOopDesc::obj_at_put(int, oopDesc*) (2 samples, 0.13%)</title><rect x="923.8" y="451.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="926.8" y="462.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (2 samples, 0.13%)</title><rect x="925.3" y="467.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="928.3" y="478.0"></text>
</g>
<g>
<title>JDK_Version::is_gte_jdk14x_version() (1 samples, 0.07%)</title><rect x="926.9" y="467.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="929.9" y="478.0"></text>
</g>
<g>
<title>JDK_Version::current() (1 samples, 0.07%)</title><rect x="926.9" y="451.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="929.9" y="462.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.07%)</title><rect x="927.7" y="467.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="930.7" y="478.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.07%)</title><rect x="927.7" y="451.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="930.7" y="462.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.07%)</title><rect x="927.7" y="435.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="930.7" y="446.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.07%)</title><rect x="927.7" y="419.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="930.7" y="430.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.20%)</title><rect x="928.5" y="467.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="931.5" y="478.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (3 samples, 0.20%)</title><rect x="928.5" y="451.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="931.5" y="462.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.13%)</title><rect x="928.5" y="435.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="931.5" y="446.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.07%)</title><rect x="928.5" y="419.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="931.5" y="430.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.07%)</title><rect x="929.3" y="419.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="932.3" y="430.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.07%)</title><rect x="930.1" y="435.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="933.1" y="446.0"></text>
</g>
<g>
<title>pthread_getspecific (1 samples, 0.07%)</title><rect x="930.8" y="483.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="933.8" y="494.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="931.6" y="563.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="934.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="932.4" y="643.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="935.4" y="654.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="932.4" y="627.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="935.4" y="638.0"></text>
</g>
<g>
<title>io/netty/util/internal/UnsafeAtomicIntegerFieldUpdater.compareAndSet (1 samples, 0.07%)</title><rect x="933.2" y="659.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="936.2" y="670.0"></text>
</g>
<g>
<title>Runtime1::exception_handler_for_pc(JavaThread*) (1 samples, 0.07%)</title><rect x="933.2" y="643.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="936.2" y="654.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.07%)</title><rect x="933.2" y="627.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="936.2" y="638.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.07%)</title><rect x="933.2" y="611.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="936.2" y="622.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.07%)</title><rect x="933.2" y="595.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="936.2" y="606.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (1 samples, 0.07%)</title><rect x="933.2" y="579.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="936.2" y="590.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="934.0" y="707.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="937.0" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.touch (1 samples, 0.07%)</title><rect x="934.8" y="755.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="937.8" y="766.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.touch (1 samples, 0.07%)</title><rect x="934.8" y="739.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="937.8" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecOutputList.newInstance (1 samples, 0.07%)</title><rect x="935.6" y="787.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="938.6" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.acceptOutboundMessage (1 samples, 0.07%)</title><rect x="935.6" y="771.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="938.6" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.acceptOutboundMessage (1 samples, 0.07%)</title><rect x="936.4" y="787.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="939.4" y="798.0"></text>
</g>
<g>
<title>io/netty/util/internal/TypeParameterMatcher$ReflectiveMatcher.match (1 samples, 0.07%)</title><rect x="936.4" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="939.4" y="782.0"></text>
</g>
<g>
<title>Klass::is_subtype_of(Klass*) const (1 samples, 0.07%)</title><rect x="936.4" y="755.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="939.4" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$1500 (1 samples, 0.07%)</title><rect x="937.1" y="867.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="940.1" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (1 samples, 0.07%)</title><rect x="937.1" y="851.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="940.1" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (1 samples, 0.07%)</title><rect x="937.1" y="835.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="940.1" y="846.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.07%)</title><rect x="937.9" y="931.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="940.9" y="942.0"></text>
</g>
<g>
<title>_res (1 samples, 0.07%)</title><rect x="937.9" y="915.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="940.9" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (2 samples, 0.13%)</title><rect x="938.7" y="931.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="941.7" y="942.0"></text>
</g>
<g>
<title>monitorexit_nofpu Runtime1 stub (1 samples, 0.07%)</title><rect x="938.7" y="915.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="941.7" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.interrupt (1 samples, 0.07%)</title><rect x="939.5" y="915.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="942.5" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.interrupt (1 samples, 0.07%)</title><rect x="939.5" y="899.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="942.5" y="910.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_KQueueArrayWrapper_interrupt (1 samples, 0.07%)</title><rect x="939.5" y="883.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="942.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.07%)</title><rect x="940.3" y="979.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="943.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.07%)</title><rect x="940.3" y="963.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="943.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.run (1 samples, 0.07%)</title><rect x="940.3" y="947.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="943.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201 (1 samples, 0.07%)</title><rect x="940.3" y="931.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="943.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.07%)</title><rect x="940.3" y="915.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="943.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run$$$capture (1 samples, 0.07%)</title><rect x="940.3" y="899.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="943.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.07%)</title><rect x="940.3" y="883.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="943.3" y="894.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/ProcessImpl$CommandProcessTask.run (1 samples, 0.07%)</title><rect x="940.3" y="867.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="943.3" y="878.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl$ProcessHandler.handle (1 samples, 0.07%)</title><rect x="940.3" y="851.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="943.3" y="862.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl$ProcessHandler.handle (1 samples, 0.07%)</title><rect x="940.3" y="835.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="943.3" y="846.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.access$100 (1 samples, 0.07%)</title><rect x="940.3" y="819.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="943.3" y="830.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.process (1 samples, 0.07%)</title><rect x="940.3" y="803.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="943.3" y="814.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/command/monitor200/ProfilerCommand.process (1 samples, 0.07%)</title><rect x="940.3" y="787.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="943.3" y="798.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/command/monitor200/ProfilerCommand.execute (1 samples, 0.07%)</title><rect x="940.3" y="771.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="943.3" y="782.0"></text>
</g>
<g>
<title>one/profiler/AsyncProfiler.execute (1 samples, 0.07%)</title><rect x="940.3" y="755.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="943.3" y="766.0"></text>
</g>
<g>
<title>one/profiler/AsyncProfiler.execute0 (1 samples, 0.07%)</title><rect x="940.3" y="739.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="943.3" y="750.0"></text>
</g>
<g>
<title>Java_one_profiler_AsyncProfiler_execute0 (1 samples, 0.07%)</title><rect x="940.3" y="723.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="943.3" y="734.0"></text>
</g>
<g>
<title>Profiler::runInternal(Arguments&amp;, std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;&amp;) (1 samples, 0.07%)</title><rect x="940.3" y="707.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="943.3" y="718.0"></text>
</g>
<g>
<title>Profiler::start(Arguments&amp;, bool) (1 samples, 0.07%)</title><rect x="940.3" y="691.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="943.3" y="702.0"></text>
</g>
<g>
<title>Profiler::bindNativeLibraryLoad(JNIEnv_*, unsigned char (*)(JNIEnv_*, _jobject*, _jstring*, unsigned char)) (1 samples, 0.07%)</title><rect x="940.3" y="675.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="943.3" y="686.0"></text>
</g>
<g>
<title>_dispatch_queue_attrs (1 samples, 0.07%)</title><rect x="940.3" y="659.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="943.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="940.3" y="643.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="943.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="940.3" y="627.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="943.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="940.3" y="611.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="943.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="940.3" y="595.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="943.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="940.3" y="579.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="943.3" y="590.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer$FinalizerThread.run (2 samples, 0.13%)</title><rect x="941.1" y="995.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="944.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.access$100 (2 samples, 0.13%)</title><rect x="941.1" y="979.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="944.1" y="990.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.runFinalizer (2 samples, 0.13%)</title><rect x="941.1" y="963.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="944.1" y="974.0"></text>
</g>
<g>
<title>java/lang/System$2.invokeFinalize (2 samples, 0.13%)</title><rect x="941.1" y="947.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="944.1" y="958.0"></text>
</g>
<g>
<title>sun/security/ssl/SSLSessionImpl.finalize (2 samples, 0.13%)</title><rect x="941.1" y="931.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="944.1" y="942.0"></text>
</g>
<g>
<title>sun/security/ssl/SSLSessionImpl.getValueNames (2 samples, 0.13%)</title><rect x="941.1" y="915.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="944.1" y="926.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (2 samples, 0.13%)</title><rect x="941.1" y="899.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="944.1" y="910.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle, int, Bytecodes::Code, Thread*) (2 samples, 0.13%)</title><rect x="941.1" y="883.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="944.1" y="894.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokestatic(CallInfo&amp;, constantPoolHandle, int, Thread*) (2 samples, 0.13%)</title><rect x="941.1" y="867.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="944.1" y="878.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, KlassHandle&amp;, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (2 samples, 0.13%)</title><rect x="941.1" y="851.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="944.1" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (2 samples, 0.13%)</title><rect x="941.1" y="835.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="944.1" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (2 samples, 0.13%)</title><rect x="941.1" y="819.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="944.1" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (2 samples, 0.13%)</title><rect x="941.1" y="803.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="944.1" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (2 samples, 0.13%)</title><rect x="941.1" y="787.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="944.1" y="798.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (2 samples, 0.13%)</title><rect x="941.1" y="771.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="944.1" y="782.0"></text>
</g>
<g>
<title>cbClassPrepare (2 samples, 0.13%)</title><rect x="941.1" y="755.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="944.1" y="766.0"></text>
</g>
<g>
<title>event_callback (2 samples, 0.13%)</title><rect x="941.1" y="739.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="944.1" y="750.0"></text>
</g>
<g>
<title>classTrack_processUnloads (2 samples, 0.13%)</title><rect x="941.1" y="723.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="944.1" y="734.0"></text>
</g>
<g>
<title>isSameObject (1 samples, 0.07%)</title><rect x="941.1" y="707.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="944.1" y="718.0"></text>
</g>
<g>
<title>jni_IsSameObject (1 samples, 0.07%)</title><rect x="941.1" y="691.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="944.1" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.07%)</title><rect x="941.1" y="675.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="944.1" y="686.0"></text>
</g>
<g>
<title>jvmti_GetLoadedClasses (1 samples, 0.07%)</title><rect x="941.9" y="707.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="944.9" y="718.0"></text>
</g>
<g>
<title>JvmtiGetLoadedClasses::getLoadedClasses(JvmtiEnv*, int*, _jclass***) (1 samples, 0.07%)</title><rect x="941.9" y="691.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="944.9" y="702.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::loaded_classes_do(KlassClosure*) (1 samples, 0.07%)</title><rect x="941.9" y="675.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="944.9" y="686.0"></text>
</g>
<g>
<title>ClassLoaderData::loaded_classes_do(KlassClosure*) (1 samples, 0.07%)</title><rect x="941.9" y="659.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="944.9" y="670.0"></text>
</g>
<g>
<title>LoadedClassesClosure::do_klass(Klass*) (1 samples, 0.07%)</title><rect x="941.9" y="643.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="944.9" y="654.0"></text>
</g>
<g>
<title>Stack&lt;_jclass*, (MemoryType)7&gt;::push(_jclass*) (1 samples, 0.07%)</title><rect x="941.9" y="627.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="944.9" y="638.0"></text>
</g>
<g>
<title>java/lang/ref/Reference$ReferenceHandler.run (3 samples, 0.20%)</title><rect x="942.7" y="995.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="945.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.tryHandlePending (3 samples, 0.20%)</title><rect x="942.7" y="979.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="945.7" y="990.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.enqueue (2 samples, 0.13%)</title><rect x="942.7" y="963.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="945.7" y="974.0"></text>
</g>
<g>
<title>Runtime1::monitorexit(JavaThread*, BasicObjectLock*) (1 samples, 0.07%)</title><rect x="942.7" y="947.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="945.7" y="958.0"></text>
</g>
<g>
<title>java/lang/Object.notifyAll (1 samples, 0.07%)</title><rect x="943.4" y="947.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="946.4" y="958.0"></text>
</g>
<g>
<title>JVM_MonitorNotifyAll (1 samples, 0.07%)</title><rect x="943.4" y="931.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="946.4" y="942.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.07%)</title><rect x="943.4" y="915.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="946.4" y="926.0"></text>
</g>
<g>
<title>sun/misc/Cleaner.clean (1 samples, 0.07%)</title><rect x="944.2" y="963.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.2" y="974.0"></text>
</g>
<g>
<title>thread_start (311 samples, 20.76%)</title><rect x="945.0" y="995.0" width="245.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="948.0" y="1006.0">thread_start</text>
</g>
<g>
<title>_pthread_start (311 samples, 20.76%)</title><rect x="945.0" y="979.0" width="245.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="948.0" y="990.0">_pthread_start</text>
</g>
<g>
<title>_pthread_body (311 samples, 20.76%)</title><rect x="945.0" y="963.0" width="245.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="948.0" y="974.0">_pthread_body</text>
</g>
<g>
<title>java_start(Thread*) (311 samples, 20.76%)</title><rect x="945.0" y="947.0" width="245.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="948.0" y="958.0">java_start(Thread*)</text>
</g>
<g>
<title>GCTaskThread::run() (278 samples, 18.56%)</title><rect x="945.0" y="931.0" width="219.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="948.0" y="942.0">GCTaskThread::run()</text>
</g>
<g>
<title>GCTaskManager::get_task(unsigned int) (2 samples, 0.13%)</title><rect x="945.0" y="915.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="948.0" y="926.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.13%)</title><rect x="945.0" y="899.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="948.0" y="910.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.13%)</title><rect x="945.0" y="883.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="948.0" y="894.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (2 samples, 0.13%)</title><rect x="945.0" y="867.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="948.0" y="878.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (2 samples, 0.13%)</title><rect x="945.0" y="851.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="948.0" y="862.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.13%)</title><rect x="945.0" y="835.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="948.0" y="846.0"></text>
</g>
<g>
<title>MarkFromRootsTask::do_it(GCTaskManager*, unsigned int) (2 samples, 0.13%)</title><rect x="946.6" y="915.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="949.6" y="926.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (2 samples, 0.13%)</title><rect x="946.6" y="899.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="949.6" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (2 samples, 0.13%)</title><rect x="946.6" y="883.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="949.6" y="894.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (2 samples, 0.13%)</title><rect x="946.6" y="867.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="949.6" y="878.0"></text>
</g>
<g>
<title>ParallelCompactData::add_obj(HeapWord*, unsigned long) (1 samples, 0.07%)</title><rect x="946.6" y="851.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="949.6" y="862.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.07%)</title><rect x="947.4" y="851.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="950.4" y="862.0"></text>
</g>
<g>
<title>OldToYoungRootsTask::do_it(GCTaskManager*, unsigned int) (62 samples, 4.14%)</title><rect x="948.2" y="915.0" width="48.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="951.2" y="926.0">OldT..</text>
</g>
<g>
<title>CardTableExtension::scavenge_contents_parallel(ObjectStartArray*, MutableSpace*, HeapWord*, PSPromotionManager*, unsigned int, unsigned int) (62 samples, 4.14%)</title><rect x="948.2" y="899.0" width="48.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="951.2" y="910.0">Card..</text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (8 samples, 0.53%)</title><rect x="949.0" y="883.0" width="6.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="952.0" y="894.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (4 samples, 0.27%)</title><rect x="955.3" y="883.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="958.3" y="894.0"></text>
</g>
<g>
<title>ObjectStartArray::object_start(HeapWord*) const (13 samples, 0.87%)</title><rect x="958.4" y="883.0" width="10.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="961.4" y="894.0"></text>
</g>
<g>
<title>oopDesc::size() (13 samples, 0.87%)</title><rect x="958.4" y="867.0" width="10.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="961.4" y="878.0"></text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (36 samples, 2.40%)</title><rect x="968.7" y="883.0" width="28.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="971.7" y="894.0">PS..</text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (33 samples, 2.20%)</title><rect x="969.4" y="867.0" width="26.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="972.4" y="878.0">P..</text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (30 samples, 2.00%)</title><rect x="971.8" y="851.0" width="23.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="974.8" y="862.0">o..</text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (17 samples, 1.13%)</title><rect x="975.0" y="835.0" width="13.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="978.0" y="846.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (13 samples, 0.87%)</title><rect x="978.1" y="819.0" width="10.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="981.1" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (5 samples, 0.33%)</title><rect x="988.3" y="835.0" width="4.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="991.3" y="846.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (1 samples, 0.07%)</title><rect x="992.3" y="835.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="995.3" y="846.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.07%)</title><rect x="993.1" y="835.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="996.1" y="846.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.07%)</title><rect x="993.9" y="835.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="996.9" y="846.0"></text>
</g>
<g>
<title>void specialized_oop_push_contents&lt;unsigned int&gt;(InstanceRefKlass*, PSPromotionManager*, oopDesc*) (1 samples, 0.07%)</title><rect x="994.6" y="835.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="997.6" y="846.0"></text>
</g>
<g>
<title>void PSPromotionManager::process_array_chunk_work&lt;unsigned int&gt;(oopDesc*, int, int) (2 samples, 0.13%)</title><rect x="995.4" y="867.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="998.4" y="878.0"></text>
</g>
<g>
<title>PSParallelCompact::update_and_deadwood_in_dense_prefix(ParCompactionManager*, PSParallelCompact::SpaceId, unsigned long, unsigned long) (8 samples, 0.53%)</title><rect x="997.0" y="915.0" width="6.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1000.0" y="926.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, ParMarkBitMapClosure*, unsigned long, unsigned long, unsigned long) const (8 samples, 0.53%)</title><rect x="997.0" y="899.0" width="6.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1000.0" y="910.0"></text>
</g>
<g>
<title>FillClosure::do_addr(HeapWord*, unsigned long) (1 samples, 0.07%)</title><rect x="999.4" y="883.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1002.4" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_objects(HeapWord*, unsigned long, bool) (1 samples, 0.07%)</title><rect x="999.4" y="867.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1002.4" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_object_impl(HeapWord*, unsigned long, bool) (1 samples, 0.07%)</title><rect x="999.4" y="851.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1002.4" y="862.0"></text>
</g>
<g>
<title>UpdateOnlyClosure::do_addr(HeapWord*, unsigned long) (4 samples, 0.27%)</title><rect x="1000.2" y="883.0" width="3.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1003.2" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (2 samples, 0.13%)</title><rect x="1000.2" y="867.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1003.2" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::vtable_length() const (1 samples, 0.07%)</title><rect x="1000.2" y="851.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1003.2" y="862.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.07%)</title><rect x="1000.9" y="851.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1003.9" y="862.0"></text>
</g>
<g>
<title>InstanceRefKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (2 samples, 0.13%)</title><rect x="1001.7" y="867.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1004.7" y="878.0"></text>
</g>
<g>
<title>void specialized_oop_update_pointers&lt;unsigned int&gt;(InstanceRefKlass*, ParCompactionManager*, oopDesc*) (2 samples, 0.13%)</title><rect x="1001.7" y="851.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1004.7" y="862.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (2 samples, 0.13%)</title><rect x="1001.7" y="835.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1004.7" y="846.0"></text>
</g>
<g>
<title>PSParallelCompact::fill_blocks(unsigned long) (2 samples, 0.13%)</title><rect x="1001.7" y="819.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1004.7" y="830.0"></text>
</g>
<g>
<title>ScavengeRootsTask::do_it(GCTaskManager*, unsigned int) (2 samples, 0.13%)</title><rect x="1003.3" y="915.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1006.3" y="926.0"></text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (2 samples, 0.13%)</title><rect x="1003.3" y="899.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1006.3" y="910.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (2 samples, 0.13%)</title><rect x="1003.3" y="883.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1006.3" y="894.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (2 samples, 0.13%)</title><rect x="1003.3" y="867.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1006.3" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (2 samples, 0.13%)</title><rect x="1003.3" y="851.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1006.3" y="862.0"></text>
</g>
<g>
<title>StealMarkingTask::do_it(GCTaskManager*, unsigned int) (55 samples, 3.67%)</title><rect x="1004.9" y="915.0" width="43.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1007.9" y="926.0">Stea..</text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.07%)</title><rect x="1004.9" y="899.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1007.9" y="910.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.07%)</title><rect x="1004.9" y="883.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1007.9" y="894.0"></text>
</g>
<g>
<title>ParallelCompactData::add_obj(HeapWord*, unsigned long) (1 samples, 0.07%)</title><rect x="1004.9" y="867.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1007.9" y="878.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (43 samples, 2.87%)</title><rect x="1005.7" y="899.0" width="33.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1008.7" y="910.0">Pa..</text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (31 samples, 2.07%)</title><rect x="1007.2" y="883.0" width="24.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1010.2" y="894.0">I..</text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.07%)</title><rect x="1007.2" y="867.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1010.2" y="878.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (30 samples, 2.00%)</title><rect x="1008.0" y="867.0" width="23.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1011.0" y="878.0">v..</text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (6 samples, 0.40%)</title><rect x="1012.0" y="851.0" width="4.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1015.0" y="862.0"></text>
</g>
<g>
<title>ParallelCompactData::add_obj(HeapWord*, unsigned long) (3 samples, 0.20%)</title><rect x="1016.7" y="851.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1019.7" y="862.0"></text>
</g>
<g>
<title>oopDesc::size() (16 samples, 1.07%)</title><rect x="1019.1" y="851.0" width="12.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1022.1" y="862.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (4 samples, 0.27%)</title><rect x="1031.7" y="883.0" width="3.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1034.7" y="894.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (4 samples, 0.27%)</title><rect x="1031.7" y="867.0" width="3.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1034.7" y="878.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (4 samples, 0.27%)</title><rect x="1031.7" y="851.0" width="3.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1034.7" y="862.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (2 samples, 0.13%)</title><rect x="1032.5" y="835.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1035.5" y="846.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.07%)</title><rect x="1034.0" y="835.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1037.0" y="846.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (5 samples, 0.33%)</title><rect x="1034.8" y="883.0" width="4.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1037.8" y="894.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (5 samples, 0.33%)</title><rect x="1034.8" y="867.0" width="4.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1037.8" y="878.0"></text>
</g>
<g>
<title>oopDesc::size() (5 samples, 0.33%)</title><rect x="1034.8" y="851.0" width="4.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1037.8" y="862.0"></text>
</g>
<g>
<title>void specialized_oop_follow_contents&lt;unsigned int&gt;(InstanceRefKlass*, ParCompactionManager*, oopDesc*) (1 samples, 0.07%)</title><rect x="1038.8" y="883.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1041.8" y="894.0"></text>
</g>
<g>
<title>ReferenceProcessor::discover_reference(oopDesc*, ReferenceType) (1 samples, 0.07%)</title><rect x="1038.8" y="867.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1041.8" y="878.0"></text>
</g>
<g>
<title>oopDesc::atomic_compare_exchange_oop(oopDesc*, HeapWord volatile*, oopDesc*, bool) (1 samples, 0.07%)</title><rect x="1038.8" y="851.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1041.8" y="862.0"></text>
</g>
<g>
<title>Atomic::cmpxchg(unsigned int, unsigned int volatile*, unsigned int) (1 samples, 0.07%)</title><rect x="1038.8" y="835.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1041.8" y="846.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (6 samples, 0.40%)</title><rect x="1039.5" y="899.0" width="4.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1042.5" y="910.0"></text>
</g>
<g>
<title>xdrmem_ops_aligned (6 samples, 0.40%)</title><rect x="1039.5" y="883.0" width="4.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1042.5" y="894.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.20%)</title><rect x="1044.3" y="899.0" width="2.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1047.3" y="910.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (2 samples, 0.13%)</title><rect x="1046.6" y="899.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1049.6" y="910.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (2 samples, 0.13%)</title><rect x="1046.6" y="883.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1049.6" y="894.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.13%)</title><rect x="1046.6" y="867.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1049.6" y="878.0"></text>
</g>
<g>
<title>StealRegionCompactionTask::do_it(GCTaskManager*, unsigned int) (94 samples, 6.28%)</title><rect x="1048.2" y="915.0" width="74.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1051.2" y="926.0">StealReg..</text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (7 samples, 0.47%)</title><rect x="1048.2" y="899.0" width="5.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1051.2" y="910.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (7 samples, 0.47%)</title><rect x="1048.2" y="883.0" width="5.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1051.2" y="894.0"></text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (6 samples, 0.40%)</title><rect x="1049.0" y="867.0" width="4.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1052.0" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (4 samples, 0.27%)</title><rect x="1049.0" y="851.0" width="3.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1052.0" y="862.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (4 samples, 0.27%)</title><rect x="1049.0" y="835.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1052.0" y="846.0"></text>
</g>
<g>
<title>PSParallelCompact::fill_blocks(unsigned long) (1 samples, 0.07%)</title><rect x="1049.0" y="819.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1052.0" y="830.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (3 samples, 0.20%)</title><rect x="1049.8" y="819.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1052.8" y="830.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (2 samples, 0.13%)</title><rect x="1052.1" y="851.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1055.1" y="862.0"></text>
</g>
<g>
<title>ParCompactionManager::drain_region_stacks() (84 samples, 5.61%)</title><rect x="1053.7" y="899.0" width="66.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1056.7" y="910.0">ParComp..</text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (84 samples, 5.61%)</title><rect x="1053.7" y="883.0" width="66.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1056.7" y="894.0">PSParal..</text>
</g>
<g>
<title>MoveAndUpdateClosure::copy_partial_obj() (1 samples, 0.07%)</title><rect x="1053.7" y="867.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1056.7" y="878.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.07%)</title><rect x="1053.7" y="851.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1056.7" y="862.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (81 samples, 5.41%)</title><rect x="1054.5" y="867.0" width="63.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1057.5" y="878.0">ParMark..</text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (74 samples, 4.94%)</title><rect x="1058.5" y="851.0" width="58.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1061.5" y="862.0">MoveAn..</text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (40 samples, 2.67%)</title><rect x="1061.6" y="835.0" width="31.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1064.6" y="846.0">In..</text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (37 samples, 2.47%)</title><rect x="1064.0" y="819.0" width="29.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1067.0" y="830.0">Pa..</text>
</g>
<g>
<title>PSParallelCompact::fill_blocks(unsigned long) (2 samples, 0.13%)</title><rect x="1064.8" y="803.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1067.8" y="814.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (34 samples, 2.27%)</title><rect x="1066.3" y="803.0" width="26.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1069.3" y="814.0">P..</text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (7 samples, 0.47%)</title><rect x="1093.1" y="835.0" width="5.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1096.1" y="846.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.07%)</title><rect x="1093.1" y="819.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1096.1" y="830.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (6 samples, 0.40%)</title><rect x="1093.9" y="819.0" width="4.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1096.9" y="830.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (6 samples, 0.40%)</title><rect x="1093.9" y="803.0" width="4.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1096.9" y="814.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.07%)</title><rect x="1098.6" y="835.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1101.6" y="846.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (22 samples, 1.47%)</title><rect x="1099.4" y="835.0" width="17.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1102.4" y="846.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.07%)</title><rect x="1116.7" y="851.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1119.7" y="862.0"></text>
</g>
<g>
<title>_setcontext (1 samples, 0.07%)</title><rect x="1117.5" y="851.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1120.5" y="862.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (2 samples, 0.13%)</title><rect x="1118.3" y="867.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1121.3" y="878.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (3 samples, 0.20%)</title><rect x="1119.9" y="899.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1122.9" y="910.0"></text>
</g>
<g>
<title>xdrmem_ops_aligned (3 samples, 0.20%)</title><rect x="1119.9" y="883.0" width="2.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1122.9" y="894.0"></text>
</g>
<g>
<title>StealTask::do_it(GCTaskManager*, unsigned int) (39 samples, 2.60%)</title><rect x="1122.3" y="915.0" width="30.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1125.3" y="926.0">St..</text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (35 samples, 2.34%)</title><rect x="1122.3" y="899.0" width="27.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1125.3" y="910.0">P..</text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (32 samples, 2.14%)</title><rect x="1123.8" y="883.0" width="25.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1126.8" y="894.0">P..</text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (31 samples, 2.07%)</title><rect x="1124.6" y="867.0" width="24.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1127.6" y="878.0">o..</text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (17 samples, 1.13%)</title><rect x="1127.8" y="851.0" width="13.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1130.8" y="862.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (15 samples, 1.00%)</title><rect x="1129.3" y="835.0" width="11.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1132.3" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (6 samples, 0.40%)</title><rect x="1141.2" y="851.0" width="4.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1144.2" y="862.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (2 samples, 0.13%)</title><rect x="1145.9" y="851.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1148.9" y="862.0"></text>
</g>
<g>
<title>PSOldPromotionLAB::allocate(unsigned long) (1 samples, 0.07%)</title><rect x="1147.5" y="851.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1150.5" y="862.0"></text>
</g>
<g>
<title>void specialized_oop_push_contents&lt;unsigned int&gt;(InstanceRefKlass*, PSPromotionManager*, oopDesc*) (1 samples, 0.07%)</title><rect x="1148.3" y="851.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1151.3" y="862.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (1 samples, 0.07%)</title><rect x="1149.0" y="883.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1152.0" y="894.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (4 samples, 0.27%)</title><rect x="1149.8" y="899.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.8" y="910.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (3 samples, 0.20%)</title><rect x="1150.6" y="883.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.6" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (2 samples, 0.13%)</title><rect x="1151.4" y="867.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1154.4" y="878.0"></text>
</g>
<g>
<title>ThreadRootsMarkingTask::do_it(GCTaskManager*, unsigned int) (10 samples, 0.67%)</title><rect x="1153.0" y="915.0" width="7.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1156.0" y="926.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (1 samples, 0.07%)</title><rect x="1153.0" y="899.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1156.0" y="910.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, CLDClosure*, RegisterMap const*, bool) (1 samples, 0.07%)</title><rect x="1153.0" y="883.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.0" y="894.0"></text>
</g>
<g>
<title>ClassLoaderData::classes_do(KlassClosure*) (1 samples, 0.07%)</title><rect x="1153.0" y="867.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.0" y="878.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;oopDesc*&gt;(ParCompactionManager*, oopDesc**) (1 samples, 0.07%)</title><rect x="1153.0" y="851.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1156.0" y="862.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (9 samples, 0.60%)</title><rect x="1153.8" y="899.0" width="7.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.8" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (5 samples, 0.33%)</title><rect x="1153.8" y="883.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.8" y="894.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (4 samples, 0.27%)</title><rect x="1154.6" y="867.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.6" y="878.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (1 samples, 0.07%)</title><rect x="1155.3" y="851.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1158.3" y="862.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.13%)</title><rect x="1156.1" y="851.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.1" y="862.0"></text>
</g>
<g>
<title>InstanceMirrorKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.07%)</title><rect x="1157.7" y="883.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1160.7" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.07%)</title><rect x="1157.7" y="867.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1160.7" y="878.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.07%)</title><rect x="1157.7" y="851.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1160.7" y="862.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.07%)</title><rect x="1157.7" y="835.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1160.7" y="846.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (3 samples, 0.20%)</title><rect x="1158.5" y="883.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1161.5" y="894.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (3 samples, 0.20%)</title><rect x="1158.5" y="867.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1161.5" y="878.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (3 samples, 0.20%)</title><rect x="1158.5" y="851.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.5" y="862.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.07%)</title><rect x="1160.1" y="835.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.1" y="846.0"></text>
</g>
<g>
<title>ThreadRootsTask::do_it(GCTaskManager*, unsigned int) (4 samples, 0.27%)</title><rect x="1160.9" y="915.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.9" y="926.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (1 samples, 0.07%)</title><rect x="1160.9" y="899.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.9" y="910.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, CLDClosure*, RegisterMap const*, bool) (1 samples, 0.07%)</title><rect x="1160.9" y="883.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.9" y="894.0"></text>
</g>
<g>
<title>Method::mask_for(int, InterpreterOopMap*) (1 samples, 0.07%)</title><rect x="1160.9" y="867.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1163.9" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::mask_for(methodHandle, int, InterpreterOopMap*) (1 samples, 0.07%)</title><rect x="1160.9" y="851.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1163.9" y="862.0"></text>
</g>
<g>
<title>OopMapCache::lookup(methodHandle, int, InterpreterOopMap*) const (1 samples, 0.07%)</title><rect x="1160.9" y="835.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.9" y="846.0"></text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (3 samples, 0.20%)</title><rect x="1161.6" y="899.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1164.6" y="910.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (3 samples, 0.20%)</title><rect x="1161.6" y="883.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1164.6" y="894.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (3 samples, 0.20%)</title><rect x="1161.6" y="867.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1164.6" y="878.0"></text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (3 samples, 0.20%)</title><rect x="1161.6" y="851.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1164.6" y="862.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (3 samples, 0.20%)</title><rect x="1161.6" y="835.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1164.6" y="846.0"></text>
</g>
<g>
<title>JavaThread::run() (2 samples, 0.13%)</title><rect x="1164.0" y="931.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1167.0" y="942.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2 samples, 0.13%)</title><rect x="1164.0" y="915.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1167.0" y="926.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2 samples, 0.13%)</title><rect x="1164.0" y="899.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1167.0" y="910.0"></text>
</g>
<g>
<title>CompileQueue::get() (2 samples, 0.13%)</title><rect x="1164.0" y="883.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1167.0" y="894.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (2 samples, 0.13%)</title><rect x="1164.0" y="867.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1167.0" y="878.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (2 samples, 0.13%)</title><rect x="1164.0" y="851.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1167.0" y="862.0"></text>
</g>
<g>
<title>NMethodSweeper::process_nmethod(nmethod*) (2 samples, 0.13%)</title><rect x="1164.0" y="835.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1167.0" y="846.0"></text>
</g>
<g>
<title>nmethod::cleanup_inline_caches() (2 samples, 0.13%)</title><rect x="1164.0" y="819.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.0" y="830.0"></text>
</g>
<g>
<title>CompiledIC::ic_destination() const (1 samples, 0.07%)</title><rect x="1164.0" y="803.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1167.0" y="814.0"></text>
</g>
<g>
<title>NativeCall::destination() const (1 samples, 0.07%)</title><rect x="1164.0" y="787.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1167.0" y="798.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 0.07%)</title><rect x="1164.8" y="803.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1167.8" y="814.0"></text>
</g>
<g>
<title>VMThread::run() (14 samples, 0.93%)</title><rect x="1165.6" y="931.0" width="11.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.6" y="942.0"></text>
</g>
<g>
<title>VMThread::loop() (14 samples, 0.93%)</title><rect x="1165.6" y="915.0" width="11.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1168.6" y="926.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.07%)</title><rect x="1165.6" y="899.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.6" y="910.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.07%)</title><rect x="1165.6" y="883.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.6" y="894.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.07%)</title><rect x="1165.6" y="867.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1168.6" y="878.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.07%)</title><rect x="1165.6" y="851.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1168.6" y="862.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (13 samples, 0.87%)</title><rect x="1166.4" y="899.0" width="10.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.4" y="910.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (13 samples, 0.87%)</title><rect x="1166.4" y="883.0" width="10.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1169.4" y="894.0"></text>
</g>
<g>
<title>VM_ParallelGCFailedAllocation::doit() (13 samples, 0.87%)</title><rect x="1166.4" y="867.0" width="10.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.4" y="878.0"></text>
</g>
<g>
<title>ParallelScavengeHeap::failed_mem_allocate(unsigned long) (13 samples, 0.87%)</title><rect x="1166.4" y="851.0" width="10.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1169.4" y="862.0"></text>
</g>
<g>
<title>PSScavenge::invoke() (13 samples, 0.87%)</title><rect x="1166.4" y="835.0" width="10.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1169.4" y="846.0"></text>
</g>
<g>
<title>PSParallelCompact::invoke_no_policy(bool) (5 samples, 0.33%)</title><rect x="1166.4" y="819.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1169.4" y="830.0"></text>
</g>
<g>
<title>PSParallelCompact::adjust_roots() (1 samples, 0.07%)</title><rect x="1166.4" y="803.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1169.4" y="814.0"></text>
</g>
<g>
<title>Threads::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (1 samples, 0.07%)</title><rect x="1166.4" y="787.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.4" y="798.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (1 samples, 0.07%)</title><rect x="1166.4" y="771.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.4" y="782.0"></text>
</g>
<g>
<title>frame::oops_code_blob_do(OopClosure*, CodeBlobClosure*, RegisterMap const*) (1 samples, 0.07%)</title><rect x="1166.4" y="755.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1169.4" y="766.0"></text>
</g>
<g>
<title>OopMapSet::all_do(frame const*, RegisterMap const*, OopClosure*, void (*)(oopDesc**, oopDesc**), OopClosure*) (1 samples, 0.07%)</title><rect x="1166.4" y="739.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.4" y="750.0"></text>
</g>
<g>
<title>PSParallelCompact::compact() (1 samples, 0.07%)</title><rect x="1167.2" y="803.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1170.2" y="814.0"></text>
</g>
<g>
<title>PSParallelCompact::update_deferred_objects(ParCompactionManager*, PSParallelCompact::SpaceId) (1 samples, 0.07%)</title><rect x="1167.2" y="787.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1170.2" y="798.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.07%)</title><rect x="1167.2" y="771.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1170.2" y="782.0"></text>
</g>
<g>
<title>PSParallelCompact::marking_phase(ParCompactionManager*, bool, ParallelOldTracer*) (3 samples, 0.20%)</title><rect x="1167.9" y="803.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1170.9" y="814.0"></text>
</g>
<g>
<title>Klass::clean_weak_klass_links(BoolObjectClosure*, bool) (1 samples, 0.07%)</title><rect x="1167.9" y="787.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1170.9" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::clean_weak_instanceklass_links(BoolObjectClosure*) (1 samples, 0.07%)</title><rect x="1167.9" y="771.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1170.9" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::clean_method_data(BoolObjectClosure*) (1 samples, 0.07%)</title><rect x="1167.9" y="755.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.9" y="766.0"></text>
</g>
<g>
<title>MethodData::clean_method_data(BoolObjectClosure*) (1 samples, 0.07%)</title><rect x="1167.9" y="739.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1170.9" y="750.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_discovered_references(BoolObjectClosure*, OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*, GCTimer*, GCId) (1 samples, 0.07%)</title><rect x="1168.7" y="787.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1171.7" y="798.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_discovered_reflist(DiscoveredList*, ReferencePolicy*, bool, BoolObjectClosure*, OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*) (1 samples, 0.07%)</title><rect x="1168.7" y="771.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.7" y="782.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_phase3(DiscoveredList&amp;, bool, BoolObjectClosure*, OopClosure*, VoidClosure*) (1 samples, 0.07%)</title><rect x="1168.7" y="755.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1171.7" y="766.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.07%)</title><rect x="1168.7" y="739.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.7" y="750.0"></text>
</g>
<g>
<title>SymbolTable::unlink(int*, int*) (1 samples, 0.07%)</title><rect x="1169.5" y="787.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1172.5" y="798.0"></text>
</g>
<g>
<title>SymbolTable::buckets_unlink(int, int, BasicHashtable&lt;(MemoryType)9&gt;::BucketUnlinkContext*, unsigned long*) (1 samples, 0.07%)</title><rect x="1169.5" y="771.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1172.5" y="782.0"></text>
</g>
<g>
<title>PSScavenge::invoke_no_policy() (8 samples, 0.53%)</title><rect x="1170.3" y="819.0" width="6.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.3" y="830.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_discovered_references(BoolObjectClosure*, OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*, GCTimer*, GCId) (7 samples, 0.47%)</title><rect x="1170.3" y="803.0" width="5.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.3" y="814.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_discovered_reflist(DiscoveredList*, ReferencePolicy*, bool, BoolObjectClosure*, OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*) (7 samples, 0.47%)</title><rect x="1170.3" y="787.0" width="5.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.3" y="798.0"></text>
</g>
<g>
<title>ReferenceProcessor::pp2_work(DiscoveredList&amp;, BoolObjectClosure*, OopClosure*) (2 samples, 0.13%)</title><rect x="1170.3" y="771.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.3" y="782.0"></text>
</g>
<g>
<title>PSIsAliveClosure::do_object_b(oopDesc*) (1 samples, 0.07%)</title><rect x="1170.3" y="755.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1173.3" y="766.0"></text>
</g>
<g>
<title>java_lang_ref_Reference::discovered(oopDesc*) (1 samples, 0.07%)</title><rect x="1171.1" y="755.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1174.1" y="766.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_phase3(DiscoveredList&amp;, bool, BoolObjectClosure*, OopClosure*, VoidClosure*) (5 samples, 0.33%)</title><rect x="1171.9" y="771.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1174.9" y="782.0"></text>
</g>
<g>
<title>PSEvacuateFollowersClosure::do_void() (5 samples, 0.33%)</title><rect x="1171.9" y="755.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1174.9" y="766.0"></text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (5 samples, 0.33%)</title><rect x="1171.9" y="739.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1174.9" y="750.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (5 samples, 0.33%)</title><rect x="1171.9" y="723.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.9" y="734.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (5 samples, 0.33%)</title><rect x="1171.9" y="707.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1174.9" y="718.0"></text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (4 samples, 0.27%)</title><rect x="1172.7" y="691.0" width="3.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1175.7" y="702.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (4 samples, 0.27%)</title><rect x="1172.7" y="675.0" width="3.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1175.7" y="686.0"></text>
</g>
<g>
<title>StringTable::unlink_or_oops_do(BoolObjectClosure*, OopClosure*, int*, int*) (1 samples, 0.07%)</title><rect x="1175.8" y="803.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.8" y="814.0"></text>
</g>
<g>
<title>StringTable::buckets_unlink_or_oops_do(BoolObjectClosure*, OopClosure*, int, int, BasicHashtable&lt;(MemoryType)9&gt;::BucketUnlinkContext*) (1 samples, 0.07%)</title><rect x="1175.8" y="787.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.8" y="798.0"></text>
</g>
<g>
<title>WatcherThread::run() (17 samples, 1.13%)</title><rect x="1176.6" y="931.0" width="13.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1179.6" y="942.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (17 samples, 1.13%)</title><rect x="1176.6" y="915.0" width="13.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.6" y="926.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (17 samples, 1.13%)</title><rect x="1176.6" y="899.0" width="13.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.6" y="910.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (17 samples, 1.13%)</title><rect x="1176.6" y="883.0" width="13.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.6" y="894.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (17 samples, 1.13%)</title><rect x="1176.6" y="867.0" width="13.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.6" y="878.0"></text>
</g>
<g>
<title>__psynch_cvwait (17 samples, 1.13%)</title><rect x="1176.6" y="851.0" width="13.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1179.6" y="862.0"></text>
</g>
</g>
</svg>
