<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1173"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1173"> </text>
<g id="frames">
<g>
<title>all (337 samples, 100.00%)</title><rect x="10.0" y="1139.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="1150.0">all</text>
</g>
<g>
<title>[deoptimization] (3 samples, 0.89%)</title><rect x="10.0" y="1123.0" width="10.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="1134.0"></text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info(JavaThread*) (3 samples, 0.89%)</title><rect x="10.0" y="1107.0" width="10.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.0" y="1118.0"></text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info_helper(JavaThread*) (3 samples, 0.89%)</title><rect x="10.0" y="1091.0" width="10.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="1102.0"></text>
</g>
<g>
<title>TemplateInterpreter::deopt_entry(TosState, int) (1 samples, 0.30%)</title><rect x="10.0" y="1075.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="1086.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.59%)</title><rect x="13.5" y="1075.0" width="7.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="16.5" y="1086.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (2 samples, 0.59%)</title><rect x="13.5" y="1059.0" width="7.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="16.5" y="1070.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (2 samples, 0.59%)</title><rect x="13.5" y="1043.0" width="7.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="16.5" y="1054.0"></text>
</g>
<g>
<title>OopMapStream::OopMapStream(OopMap*, int) (1 samples, 0.30%)</title><rect x="17.0" y="1027.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="20.0" y="1038.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.30%)</title><rect x="17.0" y="1011.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="20.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/Thread.run (155 samples, 45.99%)</title><rect x="20.5" y="1123.0" width="542.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.5" y="1134.0">java/lang/Thread.run</text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultThreadFactory$DefaultRunnableDecorator.run (153 samples, 45.40%)</title><rect x="20.5" y="1107.0" width="535.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.5" y="1118.0">io/netty/util/concurrent/DefaultThreadFactory$DefaultRunnableDecorator.run</text>
</g>
<g>
<title>io/netty/util/ThreadDeathWatcher$Watcher.run (1 samples, 0.30%)</title><rect x="20.5" y="1091.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.5" y="1102.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.30%)</title><rect x="20.5" y="1075.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.5" y="1086.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor$5.run (152 samples, 45.10%)</title><rect x="24.0" y="1091.0" width="532.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.0" y="1102.0">io/netty/util/concurrent/SingleThreadEventExecutor$5.run</text>
</g>
<g>
<title>io/netty/channel/DefaultEventLoop.run (39 samples, 11.57%)</title><rect x="24.0" y="1075.0" width="136.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.0" y="1086.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$7.run (35 samples, 10.39%)</title><rect x="24.0" y="1059.0" width="122.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.0" y="1070.0">io/netty/channe..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$600 (34 samples, 10.09%)</title><rect x="27.5" y="1043.0" width="119.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.5" y="1054.0">io/netty/channe..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (34 samples, 10.09%)</title><rect x="27.5" y="1027.0" width="119.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.5" y="1038.0">io/netty/channe..</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (34 samples, 10.09%)</title><rect x="27.5" y="1011.0" width="119.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.5" y="1022.0">io/netty/channe..</text>
</g>
<g>
<title>com/tinysakura/xhaka/server/handler/XhakaHttpServletHandler.channelRead0 (34 samples, 10.09%)</title><rect x="27.5" y="995.0" width="119.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="30.5" y="1006.0">com/tinysakura/..</text>
</g>
<g>
<title>com/tinysakura/xhaka/server/handler/XhakaHttpServletHandler.channelRead0 (34 samples, 10.09%)</title><rect x="27.5" y="979.0" width="119.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.5" y="990.0">com/tinysakura/..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/filter/FilterChainImpl.doFilter (30 samples, 8.90%)</title><rect x="27.5" y="963.0" width="105.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.5" y="974.0">com/tinysakur..</text>
</g>
<g>
<title>com/tinysakura/xhaka/filter/TestFilter.doFilter (30 samples, 8.90%)</title><rect x="27.5" y="947.0" width="105.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.5" y="958.0">com/tinysakur..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.30%)</title><rect x="27.5" y="931.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="30.5" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.30%)</title><rect x="27.5" y="915.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="30.5" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (1 samples, 0.30%)</title><rect x="27.5" y="899.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="30.5" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::wait(long, bool, Thread*) (1 samples, 0.30%)</title><rect x="27.5" y="883.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="30.5" y="894.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.30%)</title><rect x="27.5" y="867.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="30.5" y="878.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="27.5" y="851.0" width="3.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="30.5" y="862.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (8 samples, 2.37%)</title><rect x="31.0" y="931.0" width="28.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.0" y="942.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (8 samples, 2.37%)</title><rect x="31.0" y="915.0" width="28.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.0" y="926.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (8 samples, 2.37%)</title><rect x="31.0" y="899.0" width="28.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.0" y="910.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (8 samples, 2.37%)</title><rect x="31.0" y="883.0" width="28.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.0" y="894.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (7 samples, 2.08%)</title><rect x="34.5" y="867.0" width="24.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.5" y="878.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (7 samples, 2.08%)</title><rect x="34.5" y="851.0" width="24.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.5" y="862.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (7 samples, 2.08%)</title><rect x="34.5" y="835.0" width="24.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="37.5" y="846.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (7 samples, 2.08%)</title><rect x="34.5" y="819.0" width="24.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.5" y="830.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (7 samples, 2.08%)</title><rect x="34.5" y="803.0" width="24.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.5" y="814.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (5 samples, 1.48%)</title><rect x="34.5" y="787.0" width="17.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 1.48%)</title><rect x="34.5" y="771.0" width="17.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (5 samples, 1.48%)</title><rect x="34.5" y="755.0" width="17.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 1.48%)</title><rect x="34.5" y="739.0" width="17.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="37.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 1.19%)</title><rect x="34.5" y="723.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 1.19%)</title><rect x="34.5" y="707.0" width="14.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 1.19%)</title><rect x="34.5" y="691.0" width="14.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="37.5" y="702.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (4 samples, 1.19%)</title><rect x="34.5" y="675.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="37.5" y="686.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 1.19%)</title><rect x="34.5" y="659.0" width="14.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="37.5" y="670.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 1.19%)</title><rect x="34.5" y="643.0" width="14.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="37.5" y="654.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.89%)</title><rect x="34.5" y="627.0" width="10.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="37.5" y="638.0"></text>
</g>
<g>
<title>_pthread_cond_wait (1 samples, 0.30%)</title><rect x="45.0" y="627.0" width="3.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="48.0" y="638.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.30%)</title><rect x="45.0" y="611.0" width="3.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="48.0" y="622.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.30%)</title><rect x="45.0" y="595.0" width="3.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="48.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.30%)</title><rect x="48.5" y="723.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="51.5" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.59%)</title><rect x="52.0" y="787.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="55.0" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (2 samples, 0.59%)</title><rect x="52.0" y="771.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="55.0" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (2 samples, 0.59%)</title><rect x="52.0" y="755.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.0" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (2 samples, 0.59%)</title><rect x="52.0" y="739.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.0" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (2 samples, 0.59%)</title><rect x="52.0" y="723.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.0" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (2 samples, 0.59%)</title><rect x="52.0" y="707.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.0" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (2 samples, 0.59%)</title><rect x="52.0" y="691.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.0" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.59%)</title><rect x="52.0" y="675.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="55.0" y="686.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.30%)</title><rect x="52.0" y="659.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="55.0" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.30%)</title><rect x="52.0" y="643.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="55.0" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.30%)</title><rect x="52.0" y="627.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="55.0" y="638.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.30%)</title><rect x="52.0" y="611.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="55.0" y="622.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="52.0" y="595.0" width="3.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="55.0" y="606.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.30%)</title><rect x="55.5" y="659.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="58.5" y="670.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.30%)</title><rect x="55.5" y="643.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.5" y="654.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.30%)</title><rect x="55.5" y="627.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="58.5" y="638.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/filter/FilterChainImpl.doFilter (20 samples, 5.93%)</title><rect x="59.0" y="931.0" width="70.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.0" y="942.0">com/tiny..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/filter/XhakaServlet.service (20 samples, 5.93%)</title><rect x="59.0" y="915.0" width="70.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.0" y="926.0">com/tiny..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.30%)</title><rect x="59.0" y="899.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.0" y="910.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (1 samples, 0.30%)</title><rect x="59.0" y="883.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.0" y="894.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.30%)</title><rect x="59.0" y="867.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.0" y="878.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.30%)</title><rect x="59.0" y="851.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.0" y="862.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.30%)</title><rect x="59.0" y="835.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.0" y="846.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.30%)</title><rect x="59.0" y="819.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.0" y="830.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.30%)</title><rect x="59.0" y="803.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.0" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.30%)</title><rect x="59.0" y="787.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.0" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.30%)</title><rect x="59.0" y="771.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.0" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.30%)</title><rect x="59.0" y="755.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="62.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.30%)</title><rect x="59.0" y="739.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="62.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (1 samples, 0.30%)</title><rect x="59.0" y="723.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.30%)</title><rect x="59.0" y="707.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.30%)</title><rect x="59.0" y="691.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.30%)</title><rect x="59.0" y="675.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.30%)</title><rect x="59.0" y="659.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.0" y="670.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.30%)</title><rect x="59.0" y="643.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.0" y="654.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.30%)</title><rect x="59.0" y="627.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="62.0" y="638.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.30%)</title><rect x="59.0" y="611.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="62.0" y="622.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="59.0" y="595.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="62.0" y="606.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/context/client/GatewaySlaveChannelPool.getInstance (1 samples, 0.30%)</title><rect x="62.5" y="899.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.5" y="910.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.&lt;init&gt; (1 samples, 0.30%)</title><rect x="66.0" y="899.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (1 samples, 0.30%)</title><rect x="66.0" y="883.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.30%)</title><rect x="66.0" y="867.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.initTable (1 samples, 0.30%)</title><rect x="66.0" y="851.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.0" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.yield (1 samples, 0.30%)</title><rect x="66.0" y="835.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.0" y="846.0"></text>
</g>
<g>
<title>JVM_Yield (1 samples, 0.30%)</title><rect x="66.0" y="819.0" width="3.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="69.0" y="830.0"></text>
</g>
<g>
<title>xdrmem_ops_aligned (1 samples, 0.30%)</title><rect x="66.0" y="803.0" width="3.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="69.0" y="814.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.get (11 samples, 3.26%)</title><rect x="69.5" y="899.0" width="38.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.5" y="910.0">com..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.30%)</title><rect x="76.5" y="883.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.5" y="894.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (1 samples, 0.30%)</title><rect x="76.5" y="867.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="79.5" y="878.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.30%)</title><rect x="76.5" y="851.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="79.5" y="862.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.30%)</title><rect x="76.5" y="835.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.5" y="846.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.30%)</title><rect x="76.5" y="819.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="79.5" y="830.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.30%)</title><rect x="76.5" y="803.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.5" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.30%)</title><rect x="76.5" y="787.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.5" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.30%)</title><rect x="76.5" y="771.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.5" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.30%)</title><rect x="76.5" y="755.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.5" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.30%)</title><rect x="76.5" y="739.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.5" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.30%)</title><rect x="76.5" y="723.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.5" y="734.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.30%)</title><rect x="76.5" y="707.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.5" y="718.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.30%)</title><rect x="76.5" y="691.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.5" y="702.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.30%)</title><rect x="76.5" y="675.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.5" y="686.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.30%)</title><rect x="76.5" y="659.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.5" y="670.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.30%)</title><rect x="76.5" y="643.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.5" y="654.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.30%)</title><rect x="76.5" y="627.0" width="3.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="79.5" y="638.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.30%)</title><rect x="76.5" y="611.0" width="3.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="79.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 2.37%)</title><rect x="80.0" y="883.0" width="28.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.0" y="894.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (8 samples, 2.37%)</title><rect x="80.0" y="867.0" width="28.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.0" y="878.0">ja..</text>
</g>
<g>
<title>sun/misc/Unsafe.park (8 samples, 2.37%)</title><rect x="80.0" y="851.0" width="28.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.0" y="862.0">su..</text>
</g>
<g>
<title>Unsafe_Park (8 samples, 2.37%)</title><rect x="80.0" y="835.0" width="28.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="83.0" y="846.0">Un..</text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 2.37%)</title><rect x="80.0" y="819.0" width="28.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="83.0" y="830.0">Pa..</text>
</g>
<g>
<title>__gettimeofday (1 samples, 0.30%)</title><rect x="80.0" y="803.0" width="3.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="83.0" y="814.0"></text>
</g>
<g>
<title>__psynch_cvwait (7 samples, 2.08%)</title><rect x="83.5" y="803.0" width="24.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="86.5" y="814.0">_..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/remote/route/ServerDispatcher.getDispatcherServerName (2 samples, 0.59%)</title><rect x="108.0" y="899.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="111.0" y="910.0"></text>
</g>
<g>
<title>org/springframework/util/AntPathMatcher.match (2 samples, 0.59%)</title><rect x="108.0" y="883.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.0" y="894.0"></text>
</g>
<g>
<title>org/springframework/util/AntPathMatcher.doMatch (2 samples, 0.59%)</title><rect x="108.0" y="867.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="111.0" y="878.0"></text>
</g>
<g>
<title>org/springframework/util/AntPathMatcher.isPotentialMatch (1 samples, 0.30%)</title><rect x="108.0" y="851.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.0" y="862.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.30%)</title><rect x="108.0" y="835.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="111.0" y="846.0"></text>
</g>
<g>
<title>org/springframework/util/AntPathMatcher.tokenizePath (1 samples, 0.30%)</title><rect x="111.5" y="851.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.5" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.30%)</title><rect x="111.5" y="835.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="114.5" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.30%)</title><rect x="111.5" y="819.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="114.5" y="830.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.30%)</title><rect x="111.5" y="803.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="114.5" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.30%)</title><rect x="111.5" y="787.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="114.5" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.30%)</title><rect x="111.5" y="771.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="114.5" y="782.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.30%)</title><rect x="111.5" y="755.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="114.5" y="766.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.30%)</title><rect x="111.5" y="739.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="114.5" y="750.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.30%)</title><rect x="111.5" y="723.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="114.5" y="734.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaHttpServletResponse.replaceOriginResponse (2 samples, 0.59%)</title><rect x="115.0" y="899.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.0" y="910.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.names (1 samples, 0.30%)</title><rect x="115.0" y="883.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.0" y="894.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils.namesAsString (1 samples, 0.30%)</title><rect x="115.0" y="867.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.0" y="878.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.names (1 samples, 0.30%)</title><rect x="115.0" y="851.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.0" y="862.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.30%)</title><rect x="115.0" y="835.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.0" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.30%)</title><rect x="115.0" y="819.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="118.0" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.30%)</title><rect x="115.0" y="803.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.0" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.afterNodeInsertion (1 samples, 0.30%)</title><rect x="115.0" y="787.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.0" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.30%)</title><rect x="115.0" y="771.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.0" y="782.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.30%)</title><rect x="115.0" y="755.0" width="3.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="118.0" y="766.0"></text>
</g>
<g>
<title>java/io/PrintWriter.&lt;init&gt; (1 samples, 0.30%)</title><rect x="118.5" y="883.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.5" y="894.0"></text>
</g>
<g>
<title>java/io/PrintWriter.&lt;init&gt; (1 samples, 0.30%)</title><rect x="118.5" y="867.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.5" y="878.0"></text>
</g>
<g>
<title>java/io/OutputStreamWriter.&lt;init&gt; (1 samples, 0.30%)</title><rect x="118.5" y="851.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.5" y="862.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.forOutputStreamWriter (1 samples, 0.30%)</title><rect x="118.5" y="835.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="121.5" y="846.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.&lt;init&gt; (1 samples, 0.30%)</title><rect x="118.5" y="819.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.&lt;init&gt; (1 samples, 0.30%)</title><rect x="118.5" y="803.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.5" y="814.0"></text>
</g>
<g>
<title>java/io/Writer.&lt;init&gt; (1 samples, 0.30%)</title><rect x="118.5" y="787.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.5" y="798.0"></text>
</g>
<g>
<title>Runtime1::new_type_array(JavaThread*, Klass*, int) (1 samples, 0.30%)</title><rect x="118.5" y="771.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="121.5" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.30%)</title><rect x="118.5" y="755.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="121.5" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(KlassHandle, int, int, Thread*) (1 samples, 0.30%)</title><rect x="118.5" y="739.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="121.5" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::common_mem_allocate_noinit(KlassHandle, unsigned long, Thread*) (1 samples, 0.30%)</title><rect x="118.5" y="723.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="121.5" y="734.0"></text>
</g>
<g>
<title>ParallelScavengeHeap::mem_allocate(unsigned long, bool*) (1 samples, 0.30%)</title><rect x="118.5" y="707.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="121.5" y="718.0"></text>
</g>
<g>
<title>Monitor::lock(Thread*) (1 samples, 0.30%)</title><rect x="118.5" y="691.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="121.5" y="702.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.30%)</title><rect x="118.5" y="675.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="121.5" y="686.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.30%)</title><rect x="118.5" y="659.0" width="3.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="121.5" y="670.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.30%)</title><rect x="118.5" y="643.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="121.5" y="654.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="118.5" y="627.0" width="3.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="121.5" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.writeAndFlush (1 samples, 0.30%)</title><rect x="122.0" y="899.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.0" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.writeAndFlush (1 samples, 0.30%)</title><rect x="122.0" y="883.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="125.0" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (1 samples, 0.30%)</title><rect x="122.0" y="867.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="125.0" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (1 samples, 0.30%)</title><rect x="122.0" y="851.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.0" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.30%)</title><rect x="122.0" y="835.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="125.0" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.safeExecute (1 samples, 0.30%)</title><rect x="122.0" y="819.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.0" y="830.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (1 samples, 0.30%)</title><rect x="122.0" y="803.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.0" y="814.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (1 samples, 0.30%)</title><rect x="122.0" y="787.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.0" y="798.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (1 samples, 0.30%)</title><rect x="122.0" y="771.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.0" y="782.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.30%)</title><rect x="122.0" y="755.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="125.0" y="766.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.30%)</title><rect x="122.0" y="739.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.0" y="750.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.30%)</title><rect x="122.0" y="723.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="125.0" y="734.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.30%)</title><rect x="122.0" y="707.0" width="3.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="125.0" y="718.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.30%)</title><rect x="122.0" y="691.0" width="3.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="125.0" y="702.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (1 samples, 0.30%)</title><rect x="122.0" y="675.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="125.0" y="686.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (1 samples, 0.30%)</title><rect x="122.0" y="659.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="125.0" y="670.0"></text>
</g>
<g>
<title>nmethod::find_pc_desc_internal(unsigned char*, bool) (1 samples, 0.30%)</title><rect x="122.0" y="643.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="125.0" y="654.0"></text>
</g>
<g>
<title>PcDescCache::find_pc_desc(int, bool) (1 samples, 0.30%)</title><rect x="122.0" y="627.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="125.0" y="638.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpRequest.copy (1 samples, 0.30%)</title><rect x="125.5" y="899.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="128.5" y="910.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpRequest.replace (1 samples, 0.30%)</title><rect x="125.5" y="883.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.5" y="894.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.set (1 samples, 0.30%)</title><rect x="125.5" y="867.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.5" y="878.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.set (1 samples, 0.30%)</title><rect x="125.5" y="851.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.5" y="862.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.addImpl (1 samples, 0.30%)</title><rect x="125.5" y="835.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.5" y="846.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.index (1 samples, 0.30%)</title><rect x="125.5" y="819.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.5" y="830.0"></text>
</g>
<g>
<title>javax/servlet/http/Cookie.&lt;init&gt; (1 samples, 0.30%)</title><rect x="129.1" y="931.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.1" y="942.0"></text>
</g>
<g>
<title>javax/servlet/http/Cookie.isToken (1 samples, 0.30%)</title><rect x="129.1" y="915.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.1" y="926.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.30%)</title><rect x="129.1" y="899.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.1" y="910.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaServletOutputStream.flush (4 samples, 1.19%)</title><rect x="132.6" y="963.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.6" y="974.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.write (4 samples, 1.19%)</title><rect x="132.6" y="947.0" width="14.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="135.6" y="958.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (4 samples, 1.19%)</title><rect x="132.6" y="931.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="135.6" y="942.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.write (2 samples, 0.59%)</title><rect x="132.6" y="915.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="135.6" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (2 samples, 0.59%)</title><rect x="132.6" y="899.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="135.6" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (2 samples, 0.59%)</title><rect x="132.6" y="883.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.6" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.safeExecute (2 samples, 0.59%)</title><rect x="132.6" y="867.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.6" y="878.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (2 samples, 0.59%)</title><rect x="132.6" y="851.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.6" y="862.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (2 samples, 0.59%)</title><rect x="132.6" y="835.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.6" y="846.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (2 samples, 0.59%)</title><rect x="132.6" y="819.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="135.6" y="830.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.processQueue (2 samples, 0.59%)</title><rect x="132.6" y="803.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.6" y="814.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (2 samples, 0.59%)</title><rect x="132.6" y="787.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.6" y="798.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (2 samples, 0.59%)</title><rect x="132.6" y="771.0" width="7.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="135.6" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.59%)</title><rect x="132.6" y="755.0" width="7.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="135.6" y="766.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.30%)</title><rect x="136.1" y="739.0" width="3.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="139.1" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectEncoder.encode (2 samples, 0.59%)</title><rect x="139.6" y="915.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.6" y="926.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.buffer (1 samples, 0.30%)</title><rect x="139.6" y="899.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.6" y="910.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.30%)</title><rect x="139.6" y="883.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="142.6" y="894.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.30%)</title><rect x="139.6" y="867.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.6" y="878.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1 samples, 0.30%)</title><rect x="139.6" y="851.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="142.6" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.30%)</title><rect x="139.6" y="835.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="142.6" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (1 samples, 0.30%)</title><rect x="139.6" y="819.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="142.6" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectEncoder.encodeHeaders (1 samples, 0.30%)</title><rect x="143.1" y="899.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="146.1" y="910.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpHeadersEncoder.encoderHeader (1 samples, 0.30%)</title><rect x="143.1" y="883.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.1" y="894.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable (1 samples, 0.30%)</title><rect x="143.1" y="867.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.1" y="878.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.ensureWritable0 (1 samples, 0.30%)</title><rect x="143.1" y="851.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.1" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.capacity (1 samples, 0.30%)</title><rect x="143.1" y="835.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.1" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.reallocate (1 samples, 0.30%)</title><rect x="143.1" y="819.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.1" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.memoryCopy (1 samples, 0.30%)</title><rect x="143.1" y="803.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.1" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.memoryCopy (1 samples, 0.30%)</title><rect x="143.1" y="787.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.1" y="798.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.copyMemory (1 samples, 0.30%)</title><rect x="143.1" y="771.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.1" y="782.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.30%)</title><rect x="143.1" y="755.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.1" y="766.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.takeTask (4 samples, 1.19%)</title><rect x="146.6" y="1059.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (4 samples, 1.19%)</title><rect x="146.6" y="1043.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 1.19%)</title><rect x="146.6" y="1027.0" width="14.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 1.19%)</title><rect x="146.6" y="1011.0" width="14.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.6" y="1022.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (4 samples, 1.19%)</title><rect x="146.6" y="995.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.6" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 1.19%)</title><rect x="146.6" y="979.0" width="14.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="149.6" y="990.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 1.19%)</title><rect x="146.6" y="963.0" width="14.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="149.6" y="974.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 1.19%)</title><rect x="146.6" y="947.0" width="14.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="149.6" y="958.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.run (113 samples, 33.53%)</title><rect x="160.6" y="1075.0" width="395.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.6" y="1086.0">io/netty/channel/nio/NioEventLoop.run</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeys (35 samples, 10.39%)</title><rect x="160.6" y="1059.0" width="122.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="163.6" y="1070.0">io/netty/channe..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized (35 samples, 10.39%)</title><rect x="160.6" y="1043.0" width="122.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="163.6" y="1054.0">io/netty/channe..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKey (35 samples, 10.39%)</title><rect x="160.6" y="1027.0" width="122.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.6" y="1038.0">io/netty/channe..</text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read (28 samples, 8.31%)</title><rect x="160.6" y="1011.0" width="98.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.6" y="1022.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (21 samples, 6.23%)</title><rect x="160.6" y="995.0" width="73.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.6" y="1006.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (21 samples, 6.23%)</title><rect x="160.6" y="979.0" width="73.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.6" y="990.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (21 samples, 6.23%)</title><rect x="160.6" y="963.0" width="73.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.6" y="974.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (21 samples, 6.23%)</title><rect x="160.6" y="947.0" width="73.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.6" y="958.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (21 samples, 6.23%)</title><rect x="160.6" y="931.0" width="73.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="163.6" y="942.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (21 samples, 6.23%)</title><rect x="160.6" y="915.0" width="73.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.6" y="926.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (21 samples, 6.23%)</title><rect x="160.6" y="899.0" width="73.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="163.6" y="910.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelRead (13 samples, 3.86%)</title><rect x="160.6" y="883.0" width="45.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="163.6" y="894.0">io/n..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (13 samples, 3.86%)</title><rect x="160.6" y="867.0" width="45.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.6" y="878.0">io/n..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.callDecode (2 samples, 0.59%)</title><rect x="160.6" y="851.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="163.6" y="862.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.decode (2 samples, 0.59%)</title><rect x="160.6" y="835.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="163.6" y="846.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.30%)</title><rect x="160.6" y="819.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="163.6" y="830.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle, int, Bytecodes::Code, Thread*) (1 samples, 0.30%)</title><rect x="160.6" y="803.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="163.6" y="814.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, Bytecodes::Code, bool, bool, Thread*) (1 samples, 0.30%)</title><rect x="160.6" y="787.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="163.6" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.30%)</title><rect x="160.6" y="771.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="163.6" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (1 samples, 0.30%)</title><rect x="160.6" y="755.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="163.6" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::wait(long, bool, Thread*) (1 samples, 0.30%)</title><rect x="160.6" y="739.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="163.6" y="750.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.30%)</title><rect x="160.6" y="723.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="163.6" y="734.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="160.6" y="707.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="163.6" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.readHeaders (1 samples, 0.30%)</title><rect x="164.1" y="819.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.1" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.add (1 samples, 0.30%)</title><rect x="164.1" y="803.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.1" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.addObject (1 samples, 0.30%)</title><rect x="164.1" y="787.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="167.1" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.add (1 samples, 0.30%)</title><rect x="164.1" y="771.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="167.1" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$2.validateName (1 samples, 0.30%)</title><rect x="164.1" y="755.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="167.1" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$2.validateName (1 samples, 0.30%)</title><rect x="164.1" y="739.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="167.1" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.access$200 (1 samples, 0.30%)</title><rect x="164.1" y="723.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="167.1" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.validateHeaderNameElement (1 samples, 0.30%)</title><rect x="164.1" y="707.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="167.1" y="718.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.30%)</title><rect x="164.1" y="691.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="167.1" y="702.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.30%)</title><rect x="164.1" y="675.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="167.1" y="686.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*) (1 samples, 0.30%)</title><rect x="164.1" y="659.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="167.1" y="670.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*) (1 samples, 0.30%)</title><rect x="164.1" y="643.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="167.1" y="654.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) (1 samples, 0.30%)</title><rect x="164.1" y="627.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="167.1" y="638.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*) (1 samples, 0.30%)</title><rect x="164.1" y="611.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="167.1" y="622.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*) (1 samples, 0.30%)</title><rect x="164.1" y="595.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="167.1" y="606.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*) (1 samples, 0.30%)</title><rect x="164.1" y="579.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="167.1" y="590.0"></text>
</g>
<g>
<title>Monitor::lock(Thread*) (1 samples, 0.30%)</title><rect x="164.1" y="563.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="167.1" y="574.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.30%)</title><rect x="164.1" y="547.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="167.1" y="558.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.30%)</title><rect x="164.1" y="531.0" width="3.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="167.1" y="542.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.30%)</title><rect x="164.1" y="515.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="167.1" y="526.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="164.1" y="499.0" width="3.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="167.1" y="510.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (11 samples, 3.26%)</title><rect x="167.6" y="851.0" width="38.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="170.6" y="862.0">io/..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead (11 samples, 3.26%)</title><rect x="167.6" y="835.0" width="38.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.6" y="846.0">io/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (11 samples, 3.26%)</title><rect x="167.6" y="819.0" width="38.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="170.6" y="830.0">io/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (11 samples, 3.26%)</title><rect x="167.6" y="803.0" width="38.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.6" y="814.0">io/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (11 samples, 3.26%)</title><rect x="167.6" y="787.0" width="38.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="170.6" y="798.0">io/..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (11 samples, 3.26%)</title><rect x="167.6" y="771.0" width="38.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="170.6" y="782.0">io/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (11 samples, 3.26%)</title><rect x="167.6" y="755.0" width="38.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="170.6" y="766.0">io/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (11 samples, 3.26%)</title><rect x="167.6" y="739.0" width="38.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.6" y="750.0">io/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (11 samples, 3.26%)</title><rect x="167.6" y="723.0" width="38.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.6" y="734.0">io/..</text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelRead (11 samples, 3.26%)</title><rect x="167.6" y="707.0" width="38.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.6" y="718.0">io/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (11 samples, 3.26%)</title><rect x="167.6" y="691.0" width="38.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.6" y="702.0">io/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (11 samples, 3.26%)</title><rect x="167.6" y="675.0" width="38.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="170.6" y="686.0">io/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (11 samples, 3.26%)</title><rect x="167.6" y="659.0" width="38.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.6" y="670.0">io/..</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (11 samples, 3.26%)</title><rect x="167.6" y="643.0" width="38.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="170.6" y="654.0">io/..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/handler/FullHttpRequest2HttpServletHandler.channelRead0 (11 samples, 3.26%)</title><rect x="167.6" y="627.0" width="38.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="170.6" y="638.0">com..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/handler/FullHttpRequest2HttpServletHandler.channelRead0 (11 samples, 3.26%)</title><rect x="167.6" y="611.0" width="38.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="170.6" y="622.0">com..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (9 samples, 2.67%)</title><rect x="167.6" y="595.0" width="31.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.6" y="606.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (9 samples, 2.67%)</title><rect x="167.6" y="579.0" width="31.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.6" y="590.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (9 samples, 2.67%)</title><rect x="167.6" y="563.0" width="31.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="170.6" y="574.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (9 samples, 2.67%)</title><rect x="167.6" y="547.0" width="31.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="170.6" y="558.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (9 samples, 2.67%)</title><rect x="167.6" y="531.0" width="31.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.6" y="542.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (9 samples, 2.67%)</title><rect x="167.6" y="515.0" width="31.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="170.6" y="526.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (9 samples, 2.67%)</title><rect x="167.6" y="499.0" width="31.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="170.6" y="510.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (8 samples, 2.37%)</title><rect x="167.6" y="483.0" width="28.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="170.6" y="494.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (8 samples, 2.37%)</title><rect x="167.6" y="467.0" width="28.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="170.6" y="478.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (3 samples, 0.89%)</title><rect x="167.6" y="451.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="170.6" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (3 samples, 0.89%)</title><rect x="167.6" y="435.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="170.6" y="446.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (3 samples, 0.89%)</title><rect x="167.6" y="419.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.6" y="430.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (3 samples, 0.89%)</title><rect x="167.6" y="403.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="170.6" y="414.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (3 samples, 0.89%)</title><rect x="167.6" y="387.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="170.6" y="398.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (3 samples, 0.89%)</title><rect x="167.6" y="371.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.6" y="382.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpRequest.toString (3 samples, 0.89%)</title><rect x="167.6" y="355.0" width="10.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="170.6" y="366.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMessageUtil.appendFullRequest (3 samples, 0.89%)</title><rect x="167.6" y="339.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.6" y="350.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMessageUtil.appendHeaders (3 samples, 0.89%)</title><rect x="167.6" y="323.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.6" y="334.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils$StringEntry.getKey (1 samples, 0.30%)</title><rect x="167.6" y="307.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="170.6" y="318.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils$StringEntry.getKey (1 samples, 0.30%)</title><rect x="167.6" y="291.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="170.6" y="302.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.30%)</title><rect x="167.6" y="275.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="170.6" y="286.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle, int, Bytecodes::Code, Thread*) (1 samples, 0.30%)</title><rect x="167.6" y="259.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="170.6" y="270.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokeinterface(CallInfo&amp;, Handle, constantPoolHandle, int, Thread*) (1 samples, 0.30%)</title><rect x="167.6" y="243.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="170.6" y="254.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_call(CallInfo&amp;, Handle, KlassHandle, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.30%)</title><rect x="167.6" y="227.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="170.6" y="238.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.30%)</title><rect x="167.6" y="211.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="170.6" y="222.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, char const*, Thread*) (1 samples, 0.30%)</title><rect x="167.6" y="195.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="170.6" y="206.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.30%)</title><rect x="167.6" y="179.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="170.6" y="190.0"></text>
</g>
<g>
<title>SystemDictionary::add_loader_constraint(Symbol*, Handle, Handle, Thread*) (1 samples, 0.30%)</title><rect x="167.6" y="163.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="170.6" y="174.0"></text>
</g>
<g>
<title>Dictionary::find_class(int, unsigned int, Symbol*, ClassLoaderData*) (1 samples, 0.30%)</title><rect x="167.6" y="147.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="170.6" y="158.0"></text>
</g>
<g>
<title>Dictionary::get_entry(int, unsigned int, Symbol*, ClassLoaderData*) (1 samples, 0.30%)</title><rect x="167.6" y="131.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="170.6" y="142.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.iterator (2 samples, 0.59%)</title><rect x="171.1" y="307.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="174.1" y="318.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils.iteratorAsString (2 samples, 0.59%)</title><rect x="171.1" y="291.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="174.1" y="302.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.30%)</title><rect x="171.1" y="275.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="174.1" y="286.0"></text>
</g>
<g>
<title>ConstantPool::klass_at(int, Thread*) (1 samples, 0.30%)</title><rect x="171.1" y="259.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="174.1" y="270.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle, int, Thread*) (1 samples, 0.30%)</title><rect x="171.1" y="243.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="174.1" y="254.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.30%)</title><rect x="171.1" y="227.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="174.1" y="238.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.30%)</title><rect x="171.1" y="211.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="174.1" y="222.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.30%)</title><rect x="171.1" y="195.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="174.1" y="206.0"></text>
</g>
<g>
<title>PlaceholderTable::find_and_add(int, unsigned int, Symbol*, ClassLoaderData*, PlaceholderTable::classloadAction, Symbol*, Thread*) (1 samples, 0.30%)</title><rect x="171.1" y="179.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="174.1" y="190.0"></text>
</g>
<g>
<title>PlaceholderEntry::add_seen_thread(Thread*, PlaceholderTable::classloadAction) (1 samples, 0.30%)</title><rect x="171.1" y="163.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="174.1" y="174.0"></text>
</g>
<g>
<title>CHeapObj&lt;(MemoryType)7&gt;::operator new(unsigned long) (1 samples, 0.30%)</title><rect x="171.1" y="147.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="174.1" y="158.0"></text>
</g>
<g>
<title>CHeapObj&lt;(MemoryType)7&gt;::operator new(unsigned long, NativeCallStack const&amp;) (1 samples, 0.30%)</title><rect x="171.1" y="131.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="174.1" y="142.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.30%)</title><rect x="171.1" y="115.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="174.1" y="126.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.30%)</title><rect x="171.1" y="99.0" width="3.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="174.1" y="110.0"></text>
</g>
<g>
<title>malloc_zone_malloc (1 samples, 0.30%)</title><rect x="171.1" y="83.0" width="3.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="174.1" y="94.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (1 samples, 0.30%)</title><rect x="171.1" y="67.0" width="3.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="174.1" y="78.0"></text>
</g>
<g>
<title>tiny_malloc_should_clear (1 samples, 0.30%)</title><rect x="171.1" y="51.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="174.1" y="62.0"></text>
</g>
<g>
<title>tiny_malloc_from_free_list (1 samples, 0.30%)</title><rect x="171.1" y="35.0" width="3.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="174.1" y="46.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.30%)</title><rect x="174.6" y="275.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="177.6" y="286.0"></text>
</g>
<g>
<title>sun/misc/Launcher$AppClassLoader.loadClass (1 samples, 0.30%)</title><rect x="174.6" y="259.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="177.6" y="270.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.30%)</title><rect x="174.6" y="243.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="177.6" y="254.0"></text>
</g>
<g>
<title>sun/misc/PerfCounter.addTime (1 samples, 0.30%)</title><rect x="174.6" y="227.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="177.6" y="238.0"></text>
</g>
<g>
<title>sun/misc/PerfCounter.add (1 samples, 0.30%)</title><rect x="174.6" y="211.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="177.6" y="222.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.30%)</title><rect x="174.6" y="195.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="177.6" y="206.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.30%)</title><rect x="174.6" y="179.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="177.6" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.30%)</title><rect x="174.6" y="163.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="177.6" y="174.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (1 samples, 0.30%)</title><rect x="174.6" y="147.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="177.6" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (4 samples, 1.19%)</title><rect x="178.1" y="451.0" width="14.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="181.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 1.19%)</title><rect x="178.1" y="435.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="181.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (4 samples, 1.19%)</title><rect x="178.1" y="419.0" width="14.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="181.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 1.19%)</title><rect x="178.1" y="403.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="181.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 1.19%)</title><rect x="178.1" y="387.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 1.19%)</title><rect x="178.1" y="371.0" width="14.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="181.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 1.19%)</title><rect x="178.1" y="355.0" width="14.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="181.1" y="366.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (4 samples, 1.19%)</title><rect x="178.1" y="339.0" width="14.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="181.1" y="350.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 1.19%)</title><rect x="178.1" y="323.0" width="14.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="181.1" y="334.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 1.19%)</title><rect x="178.1" y="307.0" width="14.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="181.1" y="318.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 1.19%)</title><rect x="178.1" y="291.0" width="14.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="181.1" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.30%)</title><rect x="192.1" y="451.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="195.1" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.30%)</title><rect x="192.1" y="435.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="195.1" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.30%)</title><rect x="192.1" y="419.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.1" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (1 samples, 0.30%)</title><rect x="192.1" y="403.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="195.1" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (1 samples, 0.30%)</title><rect x="192.1" y="387.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.1" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.30%)</title><rect x="192.1" y="371.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="195.1" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.30%)</title><rect x="192.1" y="355.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.1" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.30%)</title><rect x="192.1" y="339.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.1" y="350.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.30%)</title><rect x="192.1" y="323.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.1" y="334.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.30%)</title><rect x="192.1" y="307.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.1" y="318.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.30%)</title><rect x="192.1" y="291.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="195.1" y="302.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (1 samples, 0.30%)</title><rect x="192.1" y="275.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="195.1" y="286.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (1 samples, 0.30%)</title><rect x="192.1" y="259.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.1" y="270.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.30%)</title><rect x="192.1" y="243.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.1" y="254.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (1 samples, 0.30%)</title><rect x="192.1" y="227.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.1" y="238.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getOffsets (1 samples, 0.30%)</title><rect x="192.1" y="211.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.1" y="222.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getOffsets (1 samples, 0.30%)</title><rect x="192.1" y="195.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="195.1" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.getFilterChainDecision (1 samples, 0.30%)</title><rect x="195.6" y="483.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="198.6" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/FilterAttachableImpl.getFilterChainDecision (1 samples, 0.30%)</title><rect x="195.6" y="467.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.6" y="478.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaHttpServletResponse.&lt;init&gt; (1 samples, 0.30%)</title><rect x="199.1" y="595.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="202.1" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (1 samples, 0.30%)</title><rect x="199.1" y="579.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.1" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (1 samples, 0.30%)</title><rect x="199.1" y="563.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.1" y="574.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (1 samples, 0.30%)</title><rect x="199.1" y="547.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="202.1" y="558.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpResponse.&lt;init&gt; (1 samples, 0.30%)</title><rect x="199.1" y="531.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.1" y="542.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpMessage.&lt;init&gt; (1 samples, 0.30%)</title><rect x="199.1" y="515.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="202.1" y="526.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (1 samples, 0.30%)</title><rect x="199.1" y="499.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.1" y="510.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.&lt;init&gt; (1 samples, 0.30%)</title><rect x="199.1" y="483.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="202.1" y="494.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeadersImpl.&lt;init&gt; (1 samples, 0.30%)</title><rect x="199.1" y="467.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="202.1" y="478.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (1 samples, 0.30%)</title><rect x="199.1" y="451.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.1" y="462.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.&lt;init&gt; (1 samples, 0.30%)</title><rect x="199.1" y="435.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="202.1" y="446.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (1 samples, 0.30%)</title><rect x="202.6" y="595.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="205.6" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.30%)</title><rect x="202.6" y="579.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.6" y="590.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (1 samples, 0.30%)</title><rect x="202.6" y="563.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="205.6" y="574.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (1 samples, 0.30%)</title><rect x="202.6" y="547.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="205.6" y="558.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (1 samples, 0.30%)</title><rect x="202.6" y="531.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="205.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.30%)</title><rect x="202.6" y="515.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="205.6" y="526.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (8 samples, 2.37%)</title><rect x="206.1" y="883.0" width="28.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="209.1" y="894.0">io..</text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.30%)</title><rect x="209.6" y="867.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="212.6" y="878.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.30%)</title><rect x="209.6" y="851.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="212.6" y="862.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*) (1 samples, 0.30%)</title><rect x="209.6" y="835.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="212.6" y="846.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*) (1 samples, 0.30%)</title><rect x="209.6" y="819.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="212.6" y="830.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) (1 samples, 0.30%)</title><rect x="209.6" y="803.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="212.6" y="814.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*) (1 samples, 0.30%)</title><rect x="209.6" y="787.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="212.6" y="798.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*) (1 samples, 0.30%)</title><rect x="209.6" y="771.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="212.6" y="782.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*) (1 samples, 0.30%)</title><rect x="209.6" y="755.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="212.6" y="766.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.30%)</title><rect x="209.6" y="739.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="212.6" y="750.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.30%)</title><rect x="209.6" y="723.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="212.6" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.callDecode (4 samples, 1.19%)</title><rect x="213.1" y="867.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="216.1" y="878.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (4 samples, 1.19%)</title><rect x="213.1" y="851.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.1" y="862.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (4 samples, 1.19%)</title><rect x="213.1" y="835.0" width="14.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.1" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (4 samples, 1.19%)</title><rect x="213.1" y="819.0" width="14.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="216.1" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (4 samples, 1.19%)</title><rect x="213.1" y="803.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="216.1" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (4 samples, 1.19%)</title><rect x="213.1" y="787.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="216.1" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (4 samples, 1.19%)</title><rect x="213.1" y="771.0" width="14.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.1" y="782.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (4 samples, 1.19%)</title><rect x="213.1" y="755.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.1" y="766.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (4 samples, 1.19%)</title><rect x="213.1" y="739.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.1" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (4 samples, 1.19%)</title><rect x="213.1" y="723.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.1" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (4 samples, 1.19%)</title><rect x="213.1" y="707.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="216.1" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (4 samples, 1.19%)</title><rect x="213.1" y="691.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.1" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (4 samples, 1.19%)</title><rect x="213.1" y="675.0" width="14.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.1" y="686.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/Xhaka2FullHttpResponseDecoder.decode (2 samples, 0.59%)</title><rect x="213.1" y="659.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.1" y="670.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/Xhaka2FullHttpResponseDecoder.decode (2 samples, 0.59%)</title><rect x="213.1" y="643.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.1" y="654.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpResponseProtobufTypeSerialize.deserialize (2 samples, 0.59%)</title><rect x="213.1" y="627.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.1" y="638.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpResponseProtobufTypeSerialize.deserialize (2 samples, 0.59%)</title><rect x="213.1" y="611.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.1" y="622.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse.getBody (1 samples, 0.30%)</title><rect x="213.1" y="595.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="216.1" y="606.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.30%)</title><rect x="213.1" y="579.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="216.1" y="590.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.30%)</title><rect x="213.1" y="563.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="216.1" y="574.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*) (1 samples, 0.30%)</title><rect x="213.1" y="547.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="216.1" y="558.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*) (1 samples, 0.30%)</title><rect x="213.1" y="531.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="216.1" y="542.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) (1 samples, 0.30%)</title><rect x="213.1" y="515.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="216.1" y="526.0"></text>
</g>
<g>
<title>AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*) (1 samples, 0.30%)</title><rect x="213.1" y="499.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="216.1" y="510.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*) (1 samples, 0.30%)</title><rect x="213.1" y="483.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="216.1" y="494.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*) (1 samples, 0.30%)</title><rect x="213.1" y="467.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="216.1" y="478.0"></text>
</g>
<g>
<title>Monitor::lock(Thread*) (1 samples, 0.30%)</title><rect x="213.1" y="451.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="216.1" y="462.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.30%)</title><rect x="213.1" y="435.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="216.1" y="446.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.30%)</title><rect x="213.1" y="419.0" width="3.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="216.1" y="430.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.30%)</title><rect x="213.1" y="403.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="216.1" y="414.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="213.1" y="387.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="216.1" y="398.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse.parseFrom (1 samples, 0.30%)</title><rect x="216.6" y="595.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="219.6" y="606.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.30%)</title><rect x="216.6" y="579.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.6" y="590.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.30%)</title><rect x="216.6" y="563.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="219.6" y="574.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.30%)</title><rect x="216.6" y="547.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="219.6" y="558.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parseFrom (1 samples, 0.30%)</title><rect x="216.6" y="531.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="219.6" y="542.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.parsePartialFrom (1 samples, 0.30%)</title><rect x="216.6" y="515.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="219.6" y="526.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse$1.parsePartialFrom (1 samples, 0.30%)</title><rect x="216.6" y="499.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.6" y="510.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse$1.parsePartialFrom (1 samples, 0.30%)</title><rect x="216.6" y="483.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="219.6" y="494.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse.&lt;init&gt; (1 samples, 0.30%)</title><rect x="216.6" y="467.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="219.6" y="478.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpResponseOuterClass$HttpResponse.&lt;init&gt; (1 samples, 0.30%)</title><rect x="216.6" y="451.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="219.6" y="462.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.30%)</title><rect x="216.6" y="435.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="219.6" y="446.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (2 samples, 0.59%)</title><rect x="220.1" y="659.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="223.1" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 0.59%)</title><rect x="220.1" y="643.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="223.1" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 0.59%)</title><rect x="220.1" y="627.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="223.1" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (2 samples, 0.59%)</title><rect x="220.1" y="611.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.1" y="622.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/SlaveXhakaHttpServletResponsehHandler.channelRead0 (2 samples, 0.59%)</title><rect x="220.1" y="595.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="223.1" y="606.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/SlaveXhakaHttpServletResponsehHandler.channelRead0 (2 samples, 0.59%)</title><rect x="220.1" y="579.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.1" y="590.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.received (2 samples, 0.59%)</title><rect x="220.1" y="563.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.1" y="574.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.doReceived (2 samples, 0.59%)</title><rect x="220.1" y="547.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.1" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.30%)</title><rect x="220.1" y="531.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.1" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (1 samples, 0.30%)</title><rect x="220.1" y="515.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="223.1" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.30%)</title><rect x="220.1" y="499.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.1" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.30%)</title><rect x="220.1" y="483.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="223.1" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.30%)</title><rect x="220.1" y="467.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="223.1" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.30%)</title><rect x="220.1" y="451.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="223.1" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.30%)</title><rect x="220.1" y="435.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.1" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.30%)</title><rect x="220.1" y="419.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.1" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.30%)</title><rect x="220.1" y="403.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="223.1" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.30%)</title><rect x="220.1" y="387.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="223.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.30%)</title><rect x="220.1" y="371.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="223.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.30%)</title><rect x="220.1" y="355.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="223.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.30%)</title><rect x="220.1" y="339.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="223.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.30%)</title><rect x="220.1" y="323.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="223.1" y="334.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (1 samples, 0.30%)</title><rect x="220.1" y="307.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="223.1" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.30%)</title><rect x="220.1" y="291.0" width="3.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="223.1" y="302.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.30%)</title><rect x="220.1" y="275.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="223.1" y="286.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.30%)</title><rect x="220.1" y="259.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="223.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.30%)</title><rect x="223.6" y="531.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="226.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.30%)</title><rect x="223.6" y="515.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="226.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.30%)</title><rect x="223.6" y="499.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.30%)</title><rect x="223.6" y="483.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="226.6" y="494.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (1 samples, 0.30%)</title><rect x="223.6" y="467.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="226.6" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.30%)</title><rect x="223.6" y="451.0" width="3.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="226.6" y="462.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.30%)</title><rect x="223.6" y="435.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="226.6" y="446.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.30%)</title><rect x="223.6" y="419.0" width="3.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="226.6" y="430.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (2 samples, 0.59%)</title><rect x="227.1" y="867.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.1" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (2 samples, 0.59%)</title><rect x="227.1" y="851.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="230.1" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 0.59%)</title><rect x="227.1" y="835.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="230.1" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 0.59%)</title><rect x="227.1" y="819.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="230.1" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (2 samples, 0.59%)</title><rect x="227.1" y="803.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.1" y="814.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (2 samples, 0.59%)</title><rect x="227.1" y="787.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="230.1" y="798.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (2 samples, 0.59%)</title><rect x="227.1" y="771.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.1" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (2 samples, 0.59%)</title><rect x="227.1" y="755.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.1" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 0.59%)</title><rect x="227.1" y="739.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="230.1" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 0.59%)</title><rect x="227.1" y="723.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.1" y="734.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (2 samples, 0.59%)</title><rect x="227.1" y="707.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.1" y="718.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/Xhaka2FullHttpResponseDecoder.decode (1 samples, 0.30%)</title><rect x="227.1" y="691.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.1" y="702.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/Xhaka2FullHttpResponseDecoder.decode (1 samples, 0.30%)</title><rect x="227.1" y="675.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="230.1" y="686.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpResponseProtobufTypeSerialize.deserialize (1 samples, 0.30%)</title><rect x="227.1" y="659.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.1" y="670.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpResponseProtobufTypeSerialize.deserialize (1 samples, 0.30%)</title><rect x="227.1" y="643.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="230.1" y="654.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.30%)</title><rect x="227.1" y="627.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="230.1" y="638.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle, int, Bytecodes::Code, Thread*) (1 samples, 0.30%)</title><rect x="227.1" y="611.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="230.1" y="622.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokestatic(CallInfo&amp;, constantPoolHandle, int, Thread*) (1 samples, 0.30%)</title><rect x="227.1" y="595.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="230.1" y="606.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, KlassHandle&amp;, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.30%)</title><rect x="227.1" y="579.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="230.1" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.30%)</title><rect x="227.1" y="563.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="230.1" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (1 samples, 0.30%)</title><rect x="227.1" y="547.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="230.1" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.30%)</title><rect x="227.1" y="531.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="230.1" y="542.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.30%)</title><rect x="227.1" y="515.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="230.1" y="526.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.30%)</title><rect x="227.1" y="499.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="230.1" y="510.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 0.30%)</title><rect x="227.1" y="483.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="230.1" y="494.0"></text>
</g>
<g>
<title>cbClassPrepare (1 samples, 0.30%)</title><rect x="227.1" y="467.0" width="3.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="230.1" y="478.0"></text>
</g>
<g>
<title>event_callback (1 samples, 0.30%)</title><rect x="227.1" y="451.0" width="3.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="230.1" y="462.0"></text>
</g>
<g>
<title>classTrack_processUnloads (1 samples, 0.30%)</title><rect x="227.1" y="435.0" width="3.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="230.1" y="446.0"></text>
</g>
<g>
<title>objectHashCode (1 samples, 0.30%)</title><rect x="227.1" y="419.0" width="3.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="230.1" y="430.0"></text>
</g>
<g>
<title>jvmti_GetObjectHashCode (1 samples, 0.30%)</title><rect x="227.1" y="403.0" width="3.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="230.1" y="414.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (1 samples, 0.30%)</title><rect x="227.1" y="387.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="230.1" y="398.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (1 samples, 0.30%)</title><rect x="230.6" y="691.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="233.6" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.30%)</title><rect x="230.6" y="675.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="233.6" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.30%)</title><rect x="230.6" y="659.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="233.6" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (1 samples, 0.30%)</title><rect x="230.6" y="643.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.6" y="654.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/SlaveXhakaHttpServletResponsehHandler.channelRead0 (1 samples, 0.30%)</title><rect x="230.6" y="627.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="233.6" y="638.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/SlaveXhakaHttpServletResponsehHandler.channelRead0 (1 samples, 0.30%)</title><rect x="230.6" y="611.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="233.6" y="622.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.received (1 samples, 0.30%)</title><rect x="230.6" y="595.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="233.6" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.allocate (3 samples, 0.89%)</title><rect x="234.1" y="995.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.1" y="1006.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.ioBuffer (3 samples, 0.89%)</title><rect x="234.1" y="979.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.1" y="990.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (3 samples, 0.89%)</title><rect x="234.1" y="963.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.1" y="974.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (3 samples, 0.89%)</title><rect x="234.1" y="947.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="237.1" y="958.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (3 samples, 0.89%)</title><rect x="234.1" y="931.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.1" y="942.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (3 samples, 0.89%)</title><rect x="234.1" y="915.0" width="10.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.1" y="926.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (1 samples, 0.30%)</title><rect x="234.1" y="899.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.1" y="910.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (1 samples, 0.30%)</title><rect x="234.1" y="883.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.1" y="894.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 0.30%)</title><rect x="234.1" y="867.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="237.1" y="878.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf$1.newObject (1 samples, 0.30%)</title><rect x="234.1" y="851.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.1" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf$1.newObject (1 samples, 0.30%)</title><rect x="234.1" y="835.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.1" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (2 samples, 0.59%)</title><rect x="237.6" y="899.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.6" y="910.0"></text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (1 samples, 0.30%)</title><rect x="237.6" y="883.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="240.6" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.30%)</title><rect x="237.6" y="867.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="240.6" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin_VaryDuration(Thread*) (1 samples, 0.30%)</title><rect x="237.6" y="851.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="240.6" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (1 samples, 0.30%)</title><rect x="241.1" y="883.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="244.1" y="894.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunk.initBufWithSubpage (1 samples, 0.30%)</title><rect x="241.1" y="867.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="244.1" y="878.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.init (1 samples, 0.30%)</title><rect x="241.1" y="851.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="244.1" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.init (1 samples, 0.30%)</title><rect x="241.1" y="835.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="244.1" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.closeOnRead (4 samples, 1.19%)</title><rect x="244.6" y="995.0" width="14.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="247.6" y="1006.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.close (4 samples, 1.19%)</title><rect x="244.6" y="979.0" width="14.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="247.6" y="990.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.close (4 samples, 1.19%)</title><rect x="244.6" y="963.0" width="14.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="247.6" y="974.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.doClose0 (1 samples, 0.30%)</title><rect x="244.6" y="947.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="247.6" y="958.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doClose (1 samples, 0.30%)</title><rect x="244.6" y="931.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.6" y="942.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (1 samples, 0.30%)</title><rect x="244.6" y="915.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.6" y="926.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (1 samples, 0.30%)</title><rect x="244.6" y="899.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="247.6" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (1 samples, 0.30%)</title><rect x="244.6" y="883.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="247.6" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.preClose (1 samples, 0.30%)</title><rect x="244.6" y="867.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.6" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.preClose0 (1 samples, 0.30%)</title><rect x="244.6" y="851.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="247.6" y="862.0"></text>
</g>
<g>
<title>InterpreterRuntime::prepare_native_call(JavaThread*, Method*) (1 samples, 0.30%)</title><rect x="244.6" y="835.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="247.6" y="846.0"></text>
</g>
<g>
<title>NativeLookup::lookup(methodHandle, bool&amp;, Thread*) (1 samples, 0.30%)</title><rect x="244.6" y="819.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="247.6" y="830.0"></text>
</g>
<g>
<title>NativeLookup::lookup_base(methodHandle, bool&amp;, Thread*) (1 samples, 0.30%)</title><rect x="244.6" y="803.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="247.6" y="814.0"></text>
</g>
<g>
<title>NativeLookup::lookup_entry(methodHandle, bool&amp;, Thread*) (1 samples, 0.30%)</title><rect x="244.6" y="787.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="247.6" y="798.0"></text>
</g>
<g>
<title>NativeLookup::lookup_style(methodHandle, char*, char const*, int, bool, bool&amp;, Thread*) (1 samples, 0.30%)</title><rect x="244.6" y="771.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="247.6" y="782.0"></text>
</g>
<g>
<title>_dispatch_queue_attrs (1 samples, 0.30%)</title><rect x="244.6" y="755.0" width="3.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="247.6" y="766.0"></text>
</g>
<g>
<title>_dispatch_queue_attrs (1 samples, 0.30%)</title><rect x="244.6" y="739.0" width="3.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="247.6" y="750.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.30%)</title><rect x="244.6" y="723.0" width="3.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="247.6" y="734.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.30%)</title><rect x="244.6" y="707.0" width="3.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="247.6" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.fireChannelInactiveAndDeregister (3 samples, 0.89%)</title><rect x="248.1" y="947.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="251.1" y="958.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.deregister (3 samples, 0.89%)</title><rect x="248.1" y="931.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="251.1" y="942.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.invokeLater (2 samples, 0.59%)</title><rect x="248.1" y="915.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.1" y="926.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (2 samples, 0.59%)</title><rect x="248.1" y="899.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="251.1" y="910.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (2 samples, 0.59%)</title><rect x="248.1" y="883.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="251.1" y="894.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (2 samples, 0.59%)</title><rect x="248.1" y="867.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="251.1" y="878.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.59%)</title><rect x="248.1" y="851.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="251.1" y="862.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.59%)</title><rect x="248.1" y="835.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="251.1" y="846.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.59%)</title><rect x="248.1" y="819.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="251.1" y="830.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.59%)</title><rect x="248.1" y="803.0" width="7.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="251.1" y="814.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.59%)</title><rect x="248.1" y="787.0" width="7.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="251.1" y="798.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (2 samples, 0.59%)</title><rect x="248.1" y="771.0" width="7.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="251.1" y="782.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (2 samples, 0.59%)</title><rect x="248.1" y="755.0" width="7.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="251.1" y="766.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.30%)</title><rect x="248.1" y="739.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="251.1" y="750.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.30%)</title><rect x="251.6" y="739.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="254.6" y="750.0"></text>
</g>
<g>
<title>frame::sender_for_interpreter_frame(RegisterMap*) const (1 samples, 0.30%)</title><rect x="251.6" y="723.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="254.6" y="734.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.30%)</title><rect x="251.6" y="707.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="254.6" y="718.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.30%)</title><rect x="251.6" y="691.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="254.6" y="702.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.30%)</title><rect x="251.6" y="675.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="254.6" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.30%)</title><rect x="255.1" y="915.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="258.1" y="926.0"></text>
</g>
<g>
<title>sun/misc/Launcher$AppClassLoader.loadClass (1 samples, 0.30%)</title><rect x="255.1" y="899.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.1" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.30%)</title><rect x="255.1" y="883.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.1" y="894.0"></text>
</g>
<g>
<title>sun/misc/PerfCounter.addTime (1 samples, 0.30%)</title><rect x="255.1" y="867.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="258.1" y="878.0"></text>
</g>
<g>
<title>sun/misc/PerfCounter.add (1 samples, 0.30%)</title><rect x="255.1" y="851.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.1" y="862.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.30%)</title><rect x="255.1" y="835.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="258.1" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.30%)</title><rect x="255.1" y="819.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="258.1" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.30%)</title><rect x="255.1" y="803.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="258.1" y="814.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.30%)</title><rect x="255.1" y="787.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="258.1" y="798.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="255.1" y="771.0" width="3.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="258.1" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioMessageChannel$NioMessageUnsafe.read (7 samples, 2.08%)</title><rect x="258.6" y="1011.0" width="24.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="261.6" y="1022.0">i..</text>
</g>
<g>
<title>InterpreterRuntime::at_safepoint(JavaThread*) (1 samples, 0.30%)</title><rect x="258.6" y="995.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="261.6" y="1006.0"></text>
</g>
<g>
<title>ThreadInVMfromJava::~ThreadInVMfromJava() (1 samples, 0.30%)</title><rect x="258.6" y="979.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="261.6" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans(JavaThreadState, JavaThreadState) (1 samples, 0.30%)</title><rect x="258.6" y="963.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="261.6" y="974.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.30%)</title><rect x="258.6" y="947.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="261.6" y="958.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.30%)</title><rect x="258.6" y="931.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="261.6" y="942.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.30%)</title><rect x="258.6" y="915.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="261.6" y="926.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.30%)</title><rect x="258.6" y="899.0" width="3.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="261.6" y="910.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.30%)</title><rect x="258.6" y="883.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="261.6" y="894.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="258.6" y="867.0" width="3.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="261.6" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (3 samples, 0.89%)</title><rect x="262.1" y="995.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="265.1" y="1006.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (3 samples, 0.89%)</title><rect x="262.1" y="979.0" width="10.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="265.1" y="990.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (3 samples, 0.89%)</title><rect x="262.1" y="963.0" width="10.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="265.1" y="974.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (3 samples, 0.89%)</title><rect x="262.1" y="947.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="265.1" y="958.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (3 samples, 0.89%)</title><rect x="262.1" y="931.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="265.1" y="942.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (3 samples, 0.89%)</title><rect x="262.1" y="915.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="265.1" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (3 samples, 0.89%)</title><rect x="262.1" y="899.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="265.1" y="910.0"></text>
</g>
<g>
<title>io/netty/bootstrap/ServerBootstrap$ServerBootstrapAcceptor.channelRead (3 samples, 0.89%)</title><rect x="262.1" y="883.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="265.1" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.30%)</title><rect x="262.1" y="867.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="265.1" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.30%)</title><rect x="262.1" y="851.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="265.1" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (1 samples, 0.30%)</title><rect x="262.1" y="835.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="265.1" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.30%)</title><rect x="262.1" y="819.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="265.1" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.30%)</title><rect x="262.1" y="803.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="265.1" y="814.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 0.30%)</title><rect x="262.1" y="787.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="265.1" y="798.0"></text>
</g>
<g>
<title>cbClassPrepare (1 samples, 0.30%)</title><rect x="262.1" y="771.0" width="3.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="265.1" y="782.0"></text>
</g>
<g>
<title>event_callback (1 samples, 0.30%)</title><rect x="262.1" y="755.0" width="3.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="265.1" y="766.0"></text>
</g>
<g>
<title>classTrack_processUnloads (1 samples, 0.30%)</title><rect x="262.1" y="739.0" width="3.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="265.1" y="750.0"></text>
</g>
<g>
<title>jvmti_GetLoadedClasses (1 samples, 0.30%)</title><rect x="262.1" y="723.0" width="3.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="265.1" y="734.0"></text>
</g>
<g>
<title>JvmtiGetLoadedClasses::getLoadedClasses(JvmtiEnv*, int*, _jclass***) (1 samples, 0.30%)</title><rect x="262.1" y="707.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="265.1" y="718.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::loaded_classes_do(KlassClosure*) (1 samples, 0.30%)</title><rect x="262.1" y="691.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="265.1" y="702.0"></text>
</g>
<g>
<title>ClassLoaderData::loaded_classes_do(KlassClosure*) (1 samples, 0.30%)</title><rect x="262.1" y="675.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="265.1" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/MultithreadEventLoopGroup.register (2 samples, 0.59%)</title><rect x="265.6" y="867.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.6" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/SingleThreadEventLoop.register (2 samples, 0.59%)</title><rect x="265.6" y="851.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="268.6" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/SingleThreadEventLoop.register (2 samples, 0.59%)</title><rect x="265.6" y="835.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="268.6" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.register (2 samples, 0.59%)</title><rect x="265.6" y="819.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="268.6" y="830.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (2 samples, 0.59%)</title><rect x="265.6" y="803.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.6" y="814.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (1 samples, 0.30%)</title><rect x="265.6" y="787.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="268.6" y="798.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (1 samples, 0.30%)</title><rect x="265.6" y="771.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="268.6" y="782.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.30%)</title><rect x="265.6" y="755.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="268.6" y="766.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.30%)</title><rect x="265.6" y="739.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="268.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.30%)</title><rect x="265.6" y="723.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="268.6" y="734.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.30%)</title><rect x="265.6" y="707.0" width="3.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="268.6" y="718.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.30%)</title><rect x="265.6" y="691.0" width="3.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="268.6" y="702.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (1 samples, 0.30%)</title><rect x="265.6" y="675.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="268.6" y="686.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (1 samples, 0.30%)</title><rect x="265.6" y="659.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="268.6" y="670.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.startThread (1 samples, 0.30%)</title><rect x="269.1" y="787.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.1" y="798.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.doStartThread (1 samples, 0.30%)</title><rect x="269.1" y="771.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="272.1" y="782.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/ThreadPerTaskExecutor.execute (1 samples, 0.30%)</title><rect x="269.1" y="755.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.1" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.start (1 samples, 0.30%)</title><rect x="269.1" y="739.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="272.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.start0 (1 samples, 0.30%)</title><rect x="269.1" y="723.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="272.1" y="734.0"></text>
</g>
<g>
<title>JVM_StartThread (1 samples, 0.30%)</title><rect x="269.1" y="707.0" width="3.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="272.1" y="718.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned long) (1 samples, 0.30%)</title><rect x="269.1" y="691.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="272.1" y="702.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.30%)</title><rect x="269.1" y="675.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="272.1" y="686.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.30%)</title><rect x="269.1" y="659.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="272.1" y="670.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.30%)</title><rect x="269.1" y="643.0" width="3.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="272.1" y="654.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.30%)</title><rect x="269.1" y="627.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="272.1" y="638.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="269.1" y="611.0" width="3.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="272.1" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioServerSocketChannel.doReadMessages (3 samples, 0.89%)</title><rect x="272.6" y="995.0" width="10.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="275.6" y="1006.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.&lt;init&gt; (1 samples, 0.30%)</title><rect x="272.6" y="979.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="275.6" y="990.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelConfig.&lt;init&gt; (1 samples, 0.30%)</title><rect x="272.6" y="963.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="275.6" y="974.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelConfig.&lt;init&gt; (1 samples, 0.30%)</title><rect x="272.6" y="947.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="275.6" y="958.0"></text>
</g>
<g>
<title>io/netty/channel/socket/DefaultSocketChannelConfig.&lt;init&gt; (1 samples, 0.30%)</title><rect x="272.6" y="931.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="275.6" y="942.0"></text>
</g>
<g>
<title>io/netty/channel/socket/DefaultSocketChannelConfig.setTcpNoDelay (1 samples, 0.30%)</title><rect x="272.6" y="915.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="275.6" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setTcpNoDelay (1 samples, 0.30%)</title><rect x="272.6" y="899.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="275.6" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketAdaptor.setBooleanOption (1 samples, 0.30%)</title><rect x="272.6" y="883.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.6" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.setOption (1 samples, 0.30%)</title><rect x="272.6" y="867.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="275.6" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setSocketOption (1 samples, 0.30%)</title><rect x="272.6" y="851.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="275.6" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.setIntOption0 (1 samples, 0.30%)</title><rect x="272.6" y="835.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.6" y="846.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_setIntOption0 (1 samples, 0.30%)</title><rect x="272.6" y="819.0" width="3.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="275.6" y="830.0"></text>
</g>
<g>
<title>setsockopt (1 samples, 0.30%)</title><rect x="272.6" y="803.0" width="3.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="275.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (2 samples, 0.59%)</title><rect x="276.1" y="979.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.1" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (1 samples, 0.30%)</title><rect x="276.1" y="963.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="279.1" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (1 samples, 0.30%)</title><rect x="276.1" y="947.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.1" y="958.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_ServerSocketChannelImpl_accept0 (1 samples, 0.30%)</title><rect x="276.1" y="931.0" width="3.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="279.1" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (1 samples, 0.30%)</title><rect x="279.6" y="963.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="282.6" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localAddress (1 samples, 0.30%)</title><rect x="279.6" y="947.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.6" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localInetAddress (1 samples, 0.30%)</title><rect x="279.6" y="931.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="282.6" y="942.0"></text>
</g>
<g>
<title>__getsockname (1 samples, 0.30%)</title><rect x="279.6" y="915.0" width="3.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="282.6" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.select (58 samples, 17.21%)</title><rect x="283.1" y="1059.0" width="203.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.1" y="1070.0">io/netty/channel/nio/NioEve..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (58 samples, 17.21%)</title><rect x="283.1" y="1043.0" width="203.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="286.1" y="1054.0">sun/nio/ch/SelectorImpl.sel..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (58 samples, 17.21%)</title><rect x="283.1" y="1027.0" width="203.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="286.1" y="1038.0">sun/nio/ch/SelectorImpl.loc..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (58 samples, 17.21%)</title><rect x="283.1" y="1011.0" width="203.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.1" y="1022.0">sun/nio/ch/KQueueSelectorIm..</text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.poll (58 samples, 17.21%)</title><rect x="283.1" y="995.0" width="203.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.1" y="1006.0">sun/nio/ch/KQueueArrayWrapp..</text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.kevent0 (58 samples, 17.21%)</title><rect x="283.1" y="979.0" width="203.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.1" y="990.0">sun/nio/ch/KQueueArrayWrapp..</text>
</g>
<g>
<title>JavaThread::check_special_condition_for_native_trans(JavaThread*) (1 samples, 0.30%)</title><rect x="283.1" y="963.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="286.1" y="974.0"></text>
</g>
<g>
<title>JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread*) (1 samples, 0.30%)</title><rect x="283.1" y="947.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="286.1" y="958.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.30%)</title><rect x="283.1" y="931.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="286.1" y="942.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.30%)</title><rect x="283.1" y="915.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="286.1" y="926.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.30%)</title><rect x="283.1" y="899.0" width="3.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="286.1" y="910.0"></text>
</g>
<g>
<title>kevent (57 samples, 16.91%)</title><rect x="286.6" y="963.0" width="199.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="289.6" y="974.0">kevent</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.runAllTasks (20 samples, 5.93%)</title><rect x="486.2" y="1059.0" width="70.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="489.2" y="1070.0">io/netty..</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.safeExecute (19 samples, 5.64%)</title><rect x="489.7" y="1043.0" width="66.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="492.7" y="1054.0">io/nett..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe$1.run (7 samples, 2.08%)</title><rect x="489.7" y="1027.0" width="24.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="492.7" y="1038.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.access$200 (7 samples, 2.08%)</title><rect x="489.7" y="1011.0" width="24.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="492.7" y="1022.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.register0 (7 samples, 2.08%)</title><rect x="489.7" y="995.0" width="24.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="492.7" y="1006.0">i..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelActive (3 samples, 0.89%)</title><rect x="489.7" y="979.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="492.7" y="990.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (3 samples, 0.89%)</title><rect x="489.7" y="963.0" width="10.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="492.7" y="974.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (3 samples, 0.89%)</title><rect x="489.7" y="947.0" width="10.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.7" y="958.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelActive (3 samples, 0.89%)</title><rect x="489.7" y="931.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="492.7" y="942.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelActive (2 samples, 0.59%)</title><rect x="489.7" y="915.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="492.7" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (2 samples, 0.59%)</title><rect x="489.7" y="899.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="492.7" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (2 samples, 0.59%)</title><rect x="489.7" y="883.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.7" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelActive (2 samples, 0.59%)</title><rect x="489.7" y="867.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.7" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelActive (2 samples, 0.59%)</title><rect x="489.7" y="851.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.7" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive (2 samples, 0.59%)</title><rect x="489.7" y="835.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="492.7" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelActive (2 samples, 0.59%)</title><rect x="489.7" y="819.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.7" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (2 samples, 0.59%)</title><rect x="489.7" y="803.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.7" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (2 samples, 0.59%)</title><rect x="489.7" y="787.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="492.7" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelActive (2 samples, 0.59%)</title><rect x="489.7" y="771.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="492.7" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelActive (2 samples, 0.59%)</title><rect x="489.7" y="755.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="492.7" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (2 samples, 0.59%)</title><rect x="489.7" y="739.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.7" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (2 samples, 0.59%)</title><rect x="489.7" y="723.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="492.7" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelActive (2 samples, 0.59%)</title><rect x="489.7" y="707.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.7" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelActive (2 samples, 0.59%)</title><rect x="489.7" y="691.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.7" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (2 samples, 0.59%)</title><rect x="489.7" y="675.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="492.7" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (2 samples, 0.59%)</title><rect x="489.7" y="659.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="492.7" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelActive (2 samples, 0.59%)</title><rect x="489.7" y="643.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="492.7" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelActive (2 samples, 0.59%)</title><rect x="489.7" y="627.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.7" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (2 samples, 0.59%)</title><rect x="489.7" y="611.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="492.7" y="622.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (2 samples, 0.59%)</title><rect x="489.7" y="595.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="492.7" y="606.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (2 samples, 0.59%)</title><rect x="489.7" y="579.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="492.7" y="590.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (1 samples, 0.30%)</title><rect x="489.7" y="563.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="492.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (1 samples, 0.30%)</title><rect x="489.7" y="547.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="492.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.30%)</title><rect x="489.7" y="531.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="492.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (1 samples, 0.30%)</title><rect x="489.7" y="515.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="492.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.transfer (1 samples, 0.30%)</title><rect x="489.7" y="499.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="492.7" y="510.0"></text>
</g>
<g>
<title>InterpreterRuntime::monitorenter(JavaThread*, BasicObjectLock*) (1 samples, 0.30%)</title><rect x="489.7" y="483.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="492.7" y="494.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.30%)</title><rect x="489.7" y="467.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="492.7" y="478.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.30%)</title><rect x="489.7" y="451.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="492.7" y="462.0"></text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 0.30%)</title><rect x="489.7" y="435.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="492.7" y="446.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.30%)</title><rect x="489.7" y="419.0" width="3.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="492.7" y="430.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (1 samples, 0.30%)</title><rect x="489.7" y="403.0" width="3.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="492.7" y="414.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.offerTask (1 samples, 0.30%)</title><rect x="493.2" y="563.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="496.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.30%)</title><rect x="493.2" y="547.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="496.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.30%)</title><rect x="493.2" y="531.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.30%)</title><rect x="493.2" y="515.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="496.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.30%)</title><rect x="493.2" y="499.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="496.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.30%)</title><rect x="493.2" y="483.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="496.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.30%)</title><rect x="493.2" y="467.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="496.2" y="478.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (1 samples, 0.30%)</title><rect x="493.2" y="451.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="496.2" y="462.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.30%)</title><rect x="493.2" y="435.0" width="3.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="496.2" y="446.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.30%)</title><rect x="493.2" y="419.0" width="3.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="496.2" y="430.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (1 samples, 0.30%)</title><rect x="493.2" y="403.0" width="3.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="496.2" y="414.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.readIfIsAutoRead (1 samples, 0.30%)</title><rect x="496.7" y="915.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.7" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.read (1 samples, 0.30%)</title><rect x="496.7" y="899.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.7" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.read (1 samples, 0.30%)</title><rect x="496.7" y="883.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="499.7" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.read (1 samples, 0.30%)</title><rect x="496.7" y="867.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="499.7" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeRead (1 samples, 0.30%)</title><rect x="496.7" y="851.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.7" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelDuplexHandler.read (1 samples, 0.30%)</title><rect x="496.7" y="835.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="499.7" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.read (1 samples, 0.30%)</title><rect x="496.7" y="819.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="499.7" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeRead (1 samples, 0.30%)</title><rect x="496.7" y="803.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="499.7" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.read (1 samples, 0.30%)</title><rect x="496.7" y="787.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="499.7" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRegistered (4 samples, 1.19%)</title><rect x="500.2" y="979.0" width="14.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="503.2" y="990.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (4 samples, 1.19%)</title><rect x="500.2" y="963.0" width="14.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.2" y="974.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (4 samples, 1.19%)</title><rect x="500.2" y="947.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="503.2" y="958.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRegistered (4 samples, 1.19%)</title><rect x="500.2" y="931.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="503.2" y="942.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRegistered (4 samples, 1.19%)</title><rect x="500.2" y="915.0" width="14.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="503.2" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (4 samples, 1.19%)</title><rect x="500.2" y="899.0" width="14.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="503.2" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (4 samples, 1.19%)</title><rect x="500.2" y="883.0" width="14.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="503.2" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInitializer.channelRegistered (4 samples, 1.19%)</title><rect x="500.2" y="867.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="503.2" y="878.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/server/bootstrap/XhakaWebServer$1.initChannel (4 samples, 1.19%)</title><rect x="500.2" y="851.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="503.2" y="862.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/server/bootstrap/XhakaWebServer$1.initChannel (4 samples, 1.19%)</title><rect x="500.2" y="835.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="503.2" y="846.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/handler/FullHttpRequest2HttpServletHandler.&lt;clinit&gt; (1 samples, 0.30%)</title><rect x="500.2" y="819.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.2" y="830.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpResponse.&lt;init&gt; (1 samples, 0.30%)</title><rect x="500.2" y="803.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="503.2" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/Unpooled.buffer (1 samples, 0.30%)</title><rect x="500.2" y="787.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="503.2" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.heapBuffer (1 samples, 0.30%)</title><rect x="500.2" y="771.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.2" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.heapBuffer (1 samples, 0.30%)</title><rect x="500.2" y="755.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="503.2" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledByteBufAllocator.newHeapBuffer (1 samples, 0.30%)</title><rect x="500.2" y="739.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="503.2" y="750.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.30%)</title><rect x="500.2" y="723.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="503.2" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.30%)</title><rect x="500.2" y="707.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="503.2" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (1 samples, 0.30%)</title><rect x="500.2" y="691.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="503.2" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.30%)</title><rect x="500.2" y="675.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="503.2" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.30%)</title><rect x="500.2" y="659.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="503.2" y="670.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 0.30%)</title><rect x="500.2" y="643.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="503.2" y="654.0"></text>
</g>
<g>
<title>cbClassPrepare (1 samples, 0.30%)</title><rect x="500.2" y="627.0" width="3.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="503.2" y="638.0"></text>
</g>
<g>
<title>event_callback (1 samples, 0.30%)</title><rect x="500.2" y="611.0" width="3.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="503.2" y="622.0"></text>
</g>
<g>
<title>classTrack_addPreparedClass (1 samples, 0.30%)</title><rect x="500.2" y="595.0" width="3.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="503.2" y="606.0"></text>
</g>
<g>
<title>jvmtiAllocate (1 samples, 0.30%)</title><rect x="500.2" y="579.0" width="3.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="503.2" y="590.0"></text>
</g>
<g>
<title>jvmti_Allocate (1 samples, 0.30%)</title><rect x="500.2" y="563.0" width="3.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="503.2" y="574.0"></text>
</g>
<g>
<title>JvmtiEnvBase::allocate(long, unsigned char**) (1 samples, 0.30%)</title><rect x="500.2" y="547.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="503.2" y="558.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType) (1 samples, 0.30%)</title><rect x="500.2" y="531.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="503.2" y="542.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.30%)</title><rect x="500.2" y="515.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="503.2" y="526.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.30%)</title><rect x="500.2" y="499.0" width="3.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="503.2" y="510.0"></text>
</g>
<g>
<title>malloc_zone_malloc (1 samples, 0.30%)</title><rect x="500.2" y="483.0" width="3.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="503.2" y="494.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (1 samples, 0.30%)</title><rect x="500.2" y="467.0" width="3.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="503.2" y="478.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.addLast (2 samples, 0.59%)</title><rect x="503.7" y="819.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="506.7" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.addLast (2 samples, 0.59%)</title><rect x="503.7" y="803.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.7" y="814.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (2 samples, 0.59%)</title><rect x="503.7" y="787.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="506.7" y="798.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (1 samples, 0.30%)</title><rect x="503.7" y="771.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="506.7" y="782.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.offerTask (1 samples, 0.30%)</title><rect x="503.7" y="755.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="506.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.30%)</title><rect x="503.7" y="739.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="506.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.30%)</title><rect x="503.7" y="723.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="506.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.30%)</title><rect x="503.7" y="707.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="506.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.30%)</title><rect x="503.7" y="691.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.30%)</title><rect x="503.7" y="675.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="506.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.30%)</title><rect x="503.7" y="659.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="506.7" y="670.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (1 samples, 0.30%)</title><rect x="503.7" y="643.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="506.7" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.30%)</title><rect x="503.7" y="627.0" width="3.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="506.7" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.30%)</title><rect x="503.7" y="611.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="506.7" y="622.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.30%)</title><rect x="503.7" y="595.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="506.7" y="606.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.30%)</title><rect x="503.7" y="579.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="506.7" y="590.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.30%)</title><rect x="503.7" y="563.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="506.7" y="574.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.30%)</title><rect x="503.7" y="547.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="506.7" y="558.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.30%)</title><rect x="503.7" y="531.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="506.7" y="542.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="503.7" y="515.0" width="3.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="506.7" y="526.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.startThread (1 samples, 0.30%)</title><rect x="507.2" y="771.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.2" y="782.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.doStartThread (1 samples, 0.30%)</title><rect x="507.2" y="755.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="510.2" y="766.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/ThreadPerTaskExecutor.execute (1 samples, 0.30%)</title><rect x="507.2" y="739.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="510.2" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.start (1 samples, 0.30%)</title><rect x="507.2" y="723.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="510.2" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.start0 (1 samples, 0.30%)</title><rect x="507.2" y="707.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.2" y="718.0"></text>
</g>
<g>
<title>JVM_StartThread (1 samples, 0.30%)</title><rect x="507.2" y="691.0" width="3.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="510.2" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (1 samples, 0.30%)</title><rect x="507.2" y="675.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="510.2" y="686.0"></text>
</g>
<g>
<title>JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread*) (1 samples, 0.30%)</title><rect x="507.2" y="659.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="510.2" y="670.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.30%)</title><rect x="507.2" y="643.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="510.2" y="654.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.30%)</title><rect x="507.2" y="627.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="510.2" y="638.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.30%)</title><rect x="507.2" y="611.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="510.2" y="622.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.30%)</title><rect x="507.2" y="595.0" width="3.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="510.2" y="606.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.30%)</title><rect x="507.2" y="579.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="510.2" y="590.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="507.2" y="563.0" width="3.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="510.2" y="574.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator.&lt;clinit&gt; (1 samples, 0.30%)</title><rect x="510.7" y="819.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="513.7" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.30%)</title><rect x="510.7" y="803.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.7" y="814.0"></text>
</g>
<g>
<title>sun/misc/Launcher$AppClassLoader.loadClass (1 samples, 0.30%)</title><rect x="510.7" y="787.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.7" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.30%)</title><rect x="510.7" y="771.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.7" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.30%)</title><rect x="510.7" y="755.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="513.7" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.30%)</title><rect x="510.7" y="739.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="513.7" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.30%)</title><rect x="510.7" y="723.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.7" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.30%)</title><rect x="510.7" y="707.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="513.7" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.access$100 (1 samples, 0.30%)</title><rect x="510.7" y="691.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.7" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.30%)</title><rect x="510.7" y="675.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.7" y="686.0"></text>
</g>
<g>
<title>sun/misc/Resource.getBytes (1 samples, 0.30%)</title><rect x="510.7" y="659.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="513.7" y="670.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.30%)</title><rect x="510.7" y="643.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.7" y="654.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.30%)</title><rect x="510.7" y="627.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="513.7" y="638.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytes (1 samples, 0.30%)</title><rect x="510.7" y="611.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.7" y="622.0"></text>
</g>
<g>
<title>Java_java_util_zip_Inflater_inflateBytes (1 samples, 0.30%)</title><rect x="510.7" y="595.0" width="3.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="513.7" y="606.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.30%)</title><rect x="510.7" y="579.0" width="3.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="513.7" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$5.run (1 samples, 0.30%)</title><rect x="514.2" y="1027.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="517.2" y="1038.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$400 (1 samples, 0.30%)</title><rect x="514.2" y="1011.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="517.2" y="1022.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeExceptionCaught (1 samples, 0.30%)</title><rect x="514.2" y="995.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.2" y="1006.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$TailContext.exceptionCaught (1 samples, 0.30%)</title><rect x="514.2" y="979.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="517.2" y="990.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.onUnhandledInboundException (1 samples, 0.30%)</title><rect x="514.2" y="963.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="517.2" y="974.0"></text>
</g>
<g>
<title>io/netty/util/internal/logging/Slf4JLogger.warn (1 samples, 0.30%)</title><rect x="514.2" y="947.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="517.2" y="958.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.warn (1 samples, 0.30%)</title><rect x="514.2" y="931.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="517.2" y="942.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (1 samples, 0.30%)</title><rect x="514.2" y="915.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="517.2" y="926.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.30%)</title><rect x="514.2" y="899.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="517.2" y="910.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (1 samples, 0.30%)</title><rect x="514.2" y="883.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.2" y="894.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (1 samples, 0.30%)</title><rect x="514.2" y="867.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="517.2" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.30%)</title><rect x="514.2" y="851.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="517.2" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(instanceKlassHandle, Thread*) (1 samples, 0.30%)</title><rect x="514.2" y="835.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="517.2" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.30%)</title><rect x="514.2" y="819.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="517.2" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.30%)</title><rect x="514.2" y="803.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="517.2" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*) (1 samples, 0.30%)</title><rect x="514.2" y="787.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="517.2" y="798.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 0.30%)</title><rect x="514.2" y="771.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="517.2" y="782.0"></text>
</g>
<g>
<title>cbClassPrepare (1 samples, 0.30%)</title><rect x="514.2" y="755.0" width="3.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="517.2" y="766.0"></text>
</g>
<g>
<title>event_callback (1 samples, 0.30%)</title><rect x="514.2" y="739.0" width="3.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="517.2" y="750.0"></text>
</g>
<g>
<title>classTrack_processUnloads (1 samples, 0.30%)</title><rect x="514.2" y="723.0" width="3.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="517.2" y="734.0"></text>
</g>
<g>
<title>jvmti_GetLoadedClasses (1 samples, 0.30%)</title><rect x="514.2" y="707.0" width="3.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="517.2" y="718.0"></text>
</g>
<g>
<title>JvmtiGetLoadedClasses::getLoadedClasses(JvmtiEnv*, int*, _jclass***) (1 samples, 0.30%)</title><rect x="514.2" y="691.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="517.2" y="702.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::loaded_classes_do(KlassClosure*) (1 samples, 0.30%)</title><rect x="514.2" y="675.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="517.2" y="686.0"></text>
</g>
<g>
<title>ClassLoaderData::loaded_classes_do(KlassClosure*) (1 samples, 0.30%)</title><rect x="514.2" y="659.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="517.2" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$AbstractWriteTask.run (10 samples, 2.97%)</title><rect x="517.7" y="1027.0" width="35.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.7" y="1038.0">io/..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteAndFlushTask.write (9 samples, 2.67%)</title><rect x="517.7" y="1011.0" width="31.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.7" y="1022.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$AbstractWriteTask.write (9 samples, 2.67%)</title><rect x="517.7" y="995.0" width="31.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.7" y="1006.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$1900 (9 samples, 2.67%)</title><rect x="517.7" y="979.0" width="31.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.7" y="990.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (9 samples, 2.67%)</title><rect x="517.7" y="963.0" width="31.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="520.7" y="974.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (9 samples, 2.67%)</title><rect x="517.7" y="947.0" width="31.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="520.7" y="958.0">io..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (9 samples, 2.67%)</title><rect x="517.7" y="931.0" width="31.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="520.7" y="942.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (9 samples, 2.67%)</title><rect x="517.7" y="915.0" width="31.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="520.7" y="926.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (9 samples, 2.67%)</title><rect x="517.7" y="899.0" width="31.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="520.7" y="910.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (9 samples, 2.67%)</title><rect x="517.7" y="883.0" width="31.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="520.7" y="894.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (9 samples, 2.67%)</title><rect x="517.7" y="867.0" width="31.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="520.7" y="878.0">io..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (9 samples, 2.67%)</title><rect x="517.7" y="851.0" width="31.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.7" y="862.0">io..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/FullHttpRequest2XhakaEncoder.encode (8 samples, 2.37%)</title><rect x="517.7" y="835.0" width="28.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="520.7" y="846.0">co..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/FullHttpRequest2XhakaEncoder.encode (8 samples, 2.37%)</title><rect x="517.7" y="819.0" width="28.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.7" y="830.0">co..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (3 samples, 0.89%)</title><rect x="517.7" y="803.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.7" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (3 samples, 0.89%)</title><rect x="517.7" y="787.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="520.7" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (3 samples, 0.89%)</title><rect x="517.7" y="771.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="520.7" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (3 samples, 0.89%)</title><rect x="517.7" y="755.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="520.7" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (3 samples, 0.89%)</title><rect x="517.7" y="739.0" width="10.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.7" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (3 samples, 0.89%)</title><rect x="517.7" y="723.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="520.7" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (3 samples, 0.89%)</title><rect x="517.7" y="707.0" width="10.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.7" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (3 samples, 0.89%)</title><rect x="517.7" y="691.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="520.7" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (3 samples, 0.89%)</title><rect x="517.7" y="675.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.7" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (2 samples, 0.59%)</title><rect x="517.7" y="659.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="520.7" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (2 samples, 0.59%)</title><rect x="517.7" y="643.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.7" y="654.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.59%)</title><rect x="517.7" y="627.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.7" y="638.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.59%)</title><rect x="517.7" y="611.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="520.7" y="622.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (2 samples, 0.59%)</title><rect x="517.7" y="595.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.7" y="606.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (2 samples, 0.59%)</title><rect x="517.7" y="579.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="520.7" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultFullHttpRequest.toString (2 samples, 0.59%)</title><rect x="517.7" y="563.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.7" y="574.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMessageUtil.appendFullRequest (2 samples, 0.59%)</title><rect x="517.7" y="547.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.7" y="558.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMessageUtil.appendFullCommon (1 samples, 0.30%)</title><rect x="517.7" y="531.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="520.7" y="542.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.30%)</title><rect x="517.7" y="515.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="520.7" y="526.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMessageUtil.appendHeaders (1 samples, 0.30%)</title><rect x="521.2" y="531.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.2" y="542.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils$StringEntry.getKey (1 samples, 0.30%)</title><rect x="521.2" y="515.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="524.2" y="526.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils$StringEntry.getKey (1 samples, 0.30%)</title><rect x="521.2" y="499.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="524.2" y="510.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.30%)</title><rect x="521.2" y="483.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="524.2" y="494.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle, int, Bytecodes::Code, Thread*) (1 samples, 0.30%)</title><rect x="521.2" y="467.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="524.2" y="478.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokeinterface(CallInfo&amp;, Handle, constantPoolHandle, int, Thread*) (1 samples, 0.30%)</title><rect x="521.2" y="451.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="524.2" y="462.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_call(CallInfo&amp;, Handle, KlassHandle, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.30%)</title><rect x="521.2" y="435.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="524.2" y="446.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_interface_method(CallInfo&amp;, methodHandle, KlassHandle, Handle, KlassHandle, bool, Thread*) (1 samples, 0.30%)</title><rect x="521.2" y="419.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="524.2" y="430.0"></text>
</g>
<g>
<title>LinkResolver::lookup_instance_method_in_klasses(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, Thread*) (1 samples, 0.30%)</title><rect x="521.2" y="403.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="524.2" y="414.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol*, Symbol*, Klass::OverpassLookupMode) const (1 samples, 0.30%)</title><rect x="521.2" y="387.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="524.2" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt;*, Symbol*, Symbol*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.30%)</title><rect x="521.2" y="371.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="524.2" y="382.0"></text>
</g>
<g>
<title>binary_search(Array&lt;Method*&gt;*, Symbol*) (1 samples, 0.30%)</title><rect x="521.2" y="355.0" width="3.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="524.2" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.30%)</title><rect x="524.7" y="659.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="527.7" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.30%)</title><rect x="524.7" y="643.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="527.7" y="654.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.30%)</title><rect x="524.7" y="627.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="527.7" y="638.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.30%)</title><rect x="524.7" y="611.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="527.7" y="622.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.30%)</title><rect x="524.7" y="595.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="527.7" y="606.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.30%)</title><rect x="524.7" y="579.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="527.7" y="590.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.30%)</title><rect x="524.7" y="563.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="527.7" y="574.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.30%)</title><rect x="524.7" y="547.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="527.7" y="558.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.30%)</title><rect x="524.7" y="531.0" width="3.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="527.7" y="542.0"></text>
</g>
<g>
<title>write (1 samples, 0.30%)</title><rect x="524.7" y="515.0" width="3.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="527.7" y="526.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpRequestProtobufTypeSerialize.serialize (3 samples, 0.89%)</title><rect x="528.2" y="803.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="531.2" y="814.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpRequestProtobufTypeSerialize.serialize (3 samples, 0.89%)</title><rect x="528.2" y="787.0" width="10.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="531.2" y="798.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HeaderOuterClass$Header.&lt;clinit&gt; (1 samples, 0.30%)</title><rect x="528.2" y="771.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="531.2" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.30%)</title><rect x="528.2" y="755.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="531.2" y="766.0"></text>
</g>
<g>
<title>sun/misc/Launcher$AppClassLoader.loadClass (1 samples, 0.30%)</title><rect x="528.2" y="739.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="531.2" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.30%)</title><rect x="528.2" y="723.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="531.2" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.30%)</title><rect x="528.2" y="707.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.2" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.30%)</title><rect x="528.2" y="691.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.2" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.30%)</title><rect x="528.2" y="675.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="531.2" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.30%)</title><rect x="528.2" y="659.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.2" y="670.0"></text>
</g>
<g>
<title>sun/misc/URLClassPath.getResource (1 samples, 0.30%)</title><rect x="528.2" y="643.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="531.2" y="654.0"></text>
</g>
<g>
<title>sun/misc/URLClassPath$FileLoader.getResource (1 samples, 0.30%)</title><rect x="528.2" y="627.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.2" y="638.0"></text>
</g>
<g>
<title>java/io/File.exists (1 samples, 0.30%)</title><rect x="528.2" y="611.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="531.2" y="622.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 0.30%)</title><rect x="528.2" y="595.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="531.2" y="606.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1 samples, 0.30%)</title><rect x="528.2" y="579.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="531.2" y="590.0"></text>
</g>
<g>
<title>stat64 (1 samples, 0.30%)</title><rect x="528.2" y="563.0" width="3.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="531.2" y="574.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpRequestOuterClass$HttpRequest.&lt;clinit&gt; (2 samples, 0.59%)</title><rect x="531.7" y="771.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.7" y="782.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpRequestOuterClass$HttpRequest.&lt;init&gt; (1 samples, 0.30%)</title><rect x="531.7" y="755.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="534.7" y="766.0"></text>
</g>
<g>
<title>com/google/protobuf/GeneratedMessageV3.&lt;init&gt; (1 samples, 0.30%)</title><rect x="531.7" y="739.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.7" y="750.0"></text>
</g>
<g>
<title>com/google/protobuf/UnknownFieldSet.&lt;clinit&gt; (1 samples, 0.30%)</title><rect x="531.7" y="723.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="534.7" y="734.0"></text>
</g>
<g>
<title>com/google/protobuf/AbstractParser.&lt;clinit&gt; (1 samples, 0.30%)</title><rect x="531.7" y="707.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.7" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.30%)</title><rect x="531.7" y="691.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="534.7" y="702.0"></text>
</g>
<g>
<title>sun/misc/Launcher$AppClassLoader.loadClass (1 samples, 0.30%)</title><rect x="531.7" y="675.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="534.7" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.30%)</title><rect x="531.7" y="659.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="534.7" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getClassLoadingLock (1 samples, 0.30%)</title><rect x="531.7" y="643.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="534.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 0.30%)</title><rect x="531.7" y="627.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="534.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.30%)</title><rect x="531.7" y="611.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="534.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (1 samples, 0.30%)</title><rect x="531.7" y="595.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.7" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.30%)</title><rect x="535.2" y="755.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="538.2" y="766.0"></text>
</g>
<g>
<title>sun/misc/Launcher$AppClassLoader.loadClass (1 samples, 0.30%)</title><rect x="535.2" y="739.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="538.2" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.30%)</title><rect x="535.2" y="723.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="538.2" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.30%)</title><rect x="535.2" y="707.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="538.2" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.30%)</title><rect x="535.2" y="691.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="538.2" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.30%)</title><rect x="535.2" y="675.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="538.2" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.30%)</title><rect x="535.2" y="659.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="538.2" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.access$100 (1 samples, 0.30%)</title><rect x="535.2" y="643.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="538.2" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.30%)</title><rect x="535.2" y="627.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="538.2" y="638.0"></text>
</g>
<g>
<title>sun/misc/Resource.getBytes (1 samples, 0.30%)</title><rect x="535.2" y="611.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="538.2" y="622.0"></text>
</g>
<g>
<title>java/io/FileInputStream.read (1 samples, 0.30%)</title><rect x="535.2" y="595.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="538.2" y="606.0"></text>
</g>
<g>
<title>java/io/FileInputStream.readBytes (1 samples, 0.30%)</title><rect x="535.2" y="579.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="538.2" y="590.0"></text>
</g>
<g>
<title>readBytes (1 samples, 0.30%)</title><rect x="535.2" y="563.0" width="3.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="538.2" y="574.0"></text>
</g>
<g>
<title>read (1 samples, 0.30%)</title><rect x="535.2" y="547.0" width="3.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="538.2" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.writeAndFlush (2 samples, 0.59%)</title><rect x="538.7" y="803.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="541.7" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.writeAndFlush (2 samples, 0.59%)</title><rect x="538.7" y="787.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.7" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (2 samples, 0.59%)</title><rect x="538.7" y="771.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.7" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (2 samples, 0.59%)</title><rect x="538.7" y="755.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.7" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (2 samples, 0.59%)</title><rect x="538.7" y="739.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="541.7" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWriteAndFlush (2 samples, 0.59%)</title><rect x="538.7" y="723.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="541.7" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (2 samples, 0.59%)</title><rect x="538.7" y="707.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.7" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (2 samples, 0.59%)</title><rect x="538.7" y="691.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.7" y="702.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/XhakaEncoder.encode (1 samples, 0.30%)</title><rect x="538.7" y="675.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.7" y="686.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/XhakaEncoder.encode (1 samples, 0.30%)</title><rect x="538.7" y="659.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="541.7" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.30%)</title><rect x="538.7" y="643.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.7" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.30%)</title><rect x="538.7" y="627.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.7" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.30%)</title><rect x="538.7" y="611.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="541.7" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.30%)</title><rect x="538.7" y="595.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="541.7" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.30%)</title><rect x="538.7" y="579.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="541.7" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.30%)</title><rect x="538.7" y="563.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="541.7" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.30%)</title><rect x="538.7" y="547.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="541.7" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.30%)</title><rect x="538.7" y="531.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.7" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.30%)</title><rect x="538.7" y="515.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="541.7" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.30%)</title><rect x="538.7" y="499.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="541.7" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.30%)</title><rect x="538.7" y="483.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="541.7" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.30%)</title><rect x="538.7" y="467.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="541.7" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (1 samples, 0.30%)</title><rect x="538.7" y="451.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.7" y="462.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.30%)</title><rect x="538.7" y="435.0" width="3.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="541.7" y="446.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.30%)</title><rect x="542.2" y="675.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="545.2" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.30%)</title><rect x="542.2" y="659.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.2" y="670.0"></text>
</g>
<g>
<title>io/netty/handler/codec/EncoderException.&lt;init&gt; (1 samples, 0.30%)</title><rect x="545.7" y="835.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="548.7" y="846.0"></text>
</g>
<g>
<title>io/netty/handler/codec/CodecException.&lt;init&gt; (1 samples, 0.30%)</title><rect x="545.7" y="819.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="548.7" y="830.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.30%)</title><rect x="545.7" y="803.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="548.7" y="814.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.30%)</title><rect x="545.7" y="787.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="548.7" y="798.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.30%)</title><rect x="545.7" y="771.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="548.7" y="782.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.30%)</title><rect x="545.7" y="755.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="548.7" y="766.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.30%)</title><rect x="545.7" y="739.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="548.7" y="750.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.30%)</title><rect x="545.7" y="723.0" width="3.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="548.7" y="734.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.30%)</title><rect x="545.7" y="707.0" width="3.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="548.7" y="718.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (1 samples, 0.30%)</title><rect x="545.7" y="691.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="548.7" y="702.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (1 samples, 0.30%)</title><rect x="545.7" y="675.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="548.7" y="686.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.30%)</title><rect x="545.7" y="659.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="548.7" y="670.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.30%)</title><rect x="545.7" y="643.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="548.7" y="654.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.30%)</title><rect x="545.7" y="627.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="548.7" y="638.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$DefaultHandle.recycle (1 samples, 0.30%)</title><rect x="549.2" y="1011.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="552.2" y="1022.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.put (1 samples, 0.30%)</title><rect x="549.2" y="995.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.2" y="1006.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.resize (1 samples, 0.30%)</title><rect x="549.2" y="979.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.2" y="990.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.transfer (1 samples, 0.30%)</title><rect x="549.2" y="963.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.2" y="974.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.30%)</title><rect x="552.7" y="1027.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="555.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.59%)</title><rect x="556.2" y="1107.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="559.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.59%)</title><rect x="556.2" y="1091.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="559.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.run (2 samples, 0.59%)</title><rect x="556.2" y="1075.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="559.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201 (1 samples, 0.30%)</title><rect x="556.2" y="1059.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="559.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.30%)</title><rect x="556.2" y="1043.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="559.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run$$$capture (1 samples, 0.30%)</title><rect x="556.2" y="1027.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="559.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.30%)</title><rect x="556.2" y="1011.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.2" y="1022.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/ProcessImpl$CommandProcessTask.run (1 samples, 0.30%)</title><rect x="556.2" y="995.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.2" y="1006.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl$ProcessHandler.handle (1 samples, 0.30%)</title><rect x="556.2" y="979.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="559.2" y="990.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl$ProcessHandler.handle (1 samples, 0.30%)</title><rect x="556.2" y="963.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.2" y="974.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.access$100 (1 samples, 0.30%)</title><rect x="556.2" y="947.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="559.2" y="958.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.process (1 samples, 0.30%)</title><rect x="556.2" y="931.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.2" y="942.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/command/monitor200/ProfilerCommand.process (1 samples, 0.30%)</title><rect x="556.2" y="915.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="559.2" y="926.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/command/monitor200/ProfilerCommand.execute (1 samples, 0.30%)</title><rect x="556.2" y="899.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="559.2" y="910.0"></text>
</g>
<g>
<title>one/profiler/AsyncProfiler.execute (1 samples, 0.30%)</title><rect x="556.2" y="883.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.2" y="894.0"></text>
</g>
<g>
<title>one/profiler/AsyncProfiler.execute0 (1 samples, 0.30%)</title><rect x="556.2" y="867.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.2" y="878.0"></text>
</g>
<g>
<title>Java_one_profiler_AsyncProfiler_execute0 (1 samples, 0.30%)</title><rect x="556.2" y="851.0" width="3.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="559.2" y="862.0"></text>
</g>
<g>
<title>Profiler::runInternal(Arguments&amp;, std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;&amp;) (1 samples, 0.30%)</title><rect x="556.2" y="835.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="559.2" y="846.0"></text>
</g>
<g>
<title>Profiler::start(Arguments&amp;, bool) (1 samples, 0.30%)</title><rect x="556.2" y="819.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="559.2" y="830.0"></text>
</g>
<g>
<title>Profiler::bindNativeLibraryLoad(JNIEnv_*, unsigned char (*)(JNIEnv_*, _jobject*, _jstring*, unsigned char)) (1 samples, 0.30%)</title><rect x="556.2" y="803.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="559.2" y="814.0"></text>
</g>
<g>
<title>_dispatch_queue_attrs (1 samples, 0.30%)</title><rect x="556.2" y="787.0" width="3.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="559.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.30%)</title><rect x="556.2" y="771.0" width="3.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="559.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.30%)</title><rect x="556.2" y="755.0" width="3.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="559.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.30%)</title><rect x="556.2" y="739.0" width="3.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="559.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.30%)</title><rect x="556.2" y="723.0" width="3.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="559.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.30%)</title><rect x="556.2" y="707.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="559.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301 (1 samples, 0.30%)</title><rect x="559.7" y="1059.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="562.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.runAndReset (1 samples, 0.30%)</title><rect x="559.7" y="1043.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.runAndReset$$$capture (1 samples, 0.30%)</title><rect x="559.7" y="1027.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="562.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.30%)</title><rect x="559.7" y="1011.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.7" y="1022.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/context/client/HeartbeatPacemaker$Task.run (1 samples, 0.30%)</title><rect x="559.7" y="995.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="562.7" y="1006.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1 samples, 0.30%)</title><rect x="559.7" y="979.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.7" y="990.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (1 samples, 0.30%)</title><rect x="559.7" y="963.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.7" y="974.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.30%)</title><rect x="559.7" y="947.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.7" y="958.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.30%)</title><rect x="559.7" y="931.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="562.7" y="942.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.30%)</title><rect x="559.7" y="915.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="562.7" y="926.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.30%)</title><rect x="559.7" y="899.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="562.7" y="910.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.30%)</title><rect x="559.7" y="883.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.7" y="894.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.30%)</title><rect x="559.7" y="867.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.7" y="878.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.30%)</title><rect x="559.7" y="851.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="562.7" y="862.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.30%)</title><rect x="559.7" y="835.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="562.7" y="846.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.30%)</title><rect x="559.7" y="819.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="562.7" y="830.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.30%)</title><rect x="559.7" y="803.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.7" y="814.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (1 samples, 0.30%)</title><rect x="559.7" y="787.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="562.7" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (1 samples, 0.30%)</title><rect x="559.7" y="771.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.7" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (1 samples, 0.30%)</title><rect x="559.7" y="755.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="562.7" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (1 samples, 0.30%)</title><rect x="559.7" y="739.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.7" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.abbreviate (1 samples, 0.30%)</title><rect x="559.7" y="723.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="562.7" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.computeDotIndexes (1 samples, 0.30%)</title><rect x="559.7" y="707.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="562.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.30%)</title><rect x="559.7" y="691.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.7" y="702.0"></text>
</g>
<g>
<title>java/lang/ref/Reference$ReferenceHandler.run (1 samples, 0.30%)</title><rect x="563.2" y="1123.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="566.2" y="1134.0"></text>
</g>
<g>
<title>thread_start (178 samples, 52.82%)</title><rect x="566.7" y="1123.0" width="623.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="569.7" y="1134.0">thread_start</text>
</g>
<g>
<title>_pthread_start (178 samples, 52.82%)</title><rect x="566.7" y="1107.0" width="623.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="569.7" y="1118.0">_pthread_start</text>
</g>
<g>
<title>_pthread_body (178 samples, 52.82%)</title><rect x="566.7" y="1091.0" width="623.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="569.7" y="1102.0">_pthread_body</text>
</g>
<g>
<title>java_start(Thread*) (178 samples, 52.82%)</title><rect x="566.7" y="1075.0" width="623.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="569.7" y="1086.0">java_start(Thread*)</text>
</g>
<g>
<title>GCTaskThread::run() (35 samples, 10.39%)</title><rect x="566.7" y="1059.0" width="122.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="569.7" y="1070.0">GCTaskThread::r..</text>
</g>
<g>
<title>DrainStacksCompactionTask::do_it(GCTaskManager*, unsigned int) (11 samples, 3.26%)</title><rect x="566.7" y="1043.0" width="38.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="569.7" y="1054.0">Dra..</text>
</g>
<g>
<title>ParCompactionManager::drain_region_stacks() (11 samples, 3.26%)</title><rect x="566.7" y="1027.0" width="38.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="569.7" y="1038.0">Par..</text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (11 samples, 3.26%)</title><rect x="566.7" y="1011.0" width="38.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="569.7" y="1022.0">PSP..</text>
</g>
<g>
<title>MoveAndUpdateClosure::copy_partial_obj() (3 samples, 0.89%)</title><rect x="566.7" y="995.0" width="10.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="569.7" y="1006.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (3 samples, 0.89%)</title><rect x="566.7" y="979.0" width="10.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="569.7" y="990.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (8 samples, 2.37%)</title><rect x="577.2" y="995.0" width="28.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="580.2" y="1006.0">Pa..</text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (8 samples, 2.37%)</title><rect x="577.2" y="979.0" width="28.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="580.2" y="990.0">Mo..</text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.30%)</title><rect x="577.2" y="963.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="580.2" y="974.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.30%)</title><rect x="577.2" y="947.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="580.2" y="958.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.30%)</title><rect x="577.2" y="931.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="580.2" y="942.0"></text>
</g>
<g>
<title>InstanceMirrorKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (2 samples, 0.59%)</title><rect x="580.7" y="963.0" width="7.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="583.7" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (2 samples, 0.59%)</title><rect x="580.7" y="947.0" width="7.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="583.7" y="958.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (2 samples, 0.59%)</title><rect x="580.7" y="931.0" width="7.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="583.7" y="942.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (2 samples, 0.59%)</title><rect x="580.7" y="915.0" width="7.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="583.7" y="926.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.30%)</title><rect x="587.7" y="963.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="590.7" y="974.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.30%)</title><rect x="587.7" y="947.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="590.7" y="958.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.30%)</title><rect x="587.7" y="931.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="590.7" y="942.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (4 samples, 1.19%)</title><rect x="591.2" y="963.0" width="14.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="594.2" y="974.0"></text>
</g>
<g>
<title>GCTaskManager::get_task(unsigned int) (1 samples, 0.30%)</title><rect x="605.3" y="1043.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="608.3" y="1054.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.30%)</title><rect x="605.3" y="1027.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="608.3" y="1038.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.30%)</title><rect x="605.3" y="1011.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="608.3" y="1022.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.30%)</title><rect x="605.3" y="995.0" width="3.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="608.3" y="1006.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.30%)</title><rect x="605.3" y="979.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="608.3" y="990.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="605.3" y="963.0" width="3.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="608.3" y="974.0"></text>
</g>
<g>
<title>OldToYoungRootsTask::do_it(GCTaskManager*, unsigned int) (1 samples, 0.30%)</title><rect x="608.8" y="1043.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="611.8" y="1054.0"></text>
</g>
<g>
<title>CardTableExtension::scavenge_contents_parallel(ObjectStartArray*, MutableSpace*, HeapWord*, PSPromotionManager*, unsigned int, unsigned int) (1 samples, 0.30%)</title><rect x="608.8" y="1027.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="611.8" y="1038.0"></text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (1 samples, 0.30%)</title><rect x="608.8" y="1011.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="611.8" y="1022.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (1 samples, 0.30%)</title><rect x="608.8" y="995.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="611.8" y="1006.0"></text>
</g>
<g>
<title>ScavengeRootsTask::do_it(GCTaskManager*, unsigned int) (1 samples, 0.30%)</title><rect x="612.3" y="1043.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="615.3" y="1054.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::oops_do(OopClosure*, KlassClosure*, bool) (1 samples, 0.30%)</title><rect x="612.3" y="1027.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="615.3" y="1038.0"></text>
</g>
<g>
<title>ClassLoaderData::classes_do(KlassClosure*) (1 samples, 0.30%)</title><rect x="612.3" y="1011.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="615.3" y="1022.0"></text>
</g>
<g>
<title>PSScavengeKlassClosure::do_klass(Klass*) (1 samples, 0.30%)</title><rect x="612.3" y="995.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="615.3" y="1006.0"></text>
</g>
<g>
<title>PSScavengeFromKlassClosure::do_oop(oopDesc**) (1 samples, 0.30%)</title><rect x="612.3" y="979.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="615.3" y="990.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (1 samples, 0.30%)</title><rect x="612.3" y="963.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="615.3" y="974.0"></text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.30%)</title><rect x="612.3" y="947.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="615.3" y="958.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.30%)</title><rect x="612.3" y="931.0" width="3.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="615.3" y="942.0"></text>
</g>
<g>
<title>StealMarkingTask::do_it(GCTaskManager*, unsigned int) (3 samples, 0.89%)</title><rect x="615.8" y="1043.0" width="10.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="618.8" y="1054.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (3 samples, 0.89%)</title><rect x="615.8" y="1027.0" width="10.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="618.8" y="1038.0"></text>
</g>
<g>
<title>xdrmem_ops_aligned (3 samples, 0.89%)</title><rect x="615.8" y="1011.0" width="10.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="618.8" y="1022.0"></text>
</g>
<g>
<title>StealRegionCompactionTask::do_it(GCTaskManager*, unsigned int) (17 samples, 5.04%)</title><rect x="626.3" y="1043.0" width="59.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="629.3" y="1054.0">StealR..</text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (4 samples, 1.19%)</title><rect x="626.3" y="1027.0" width="14.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="629.3" y="1038.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (4 samples, 1.19%)</title><rect x="626.3" y="1011.0" width="14.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="629.3" y="1022.0"></text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (4 samples, 1.19%)</title><rect x="626.3" y="995.0" width="14.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="629.3" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (3 samples, 0.89%)</title><rect x="626.3" y="979.0" width="10.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="629.3" y="990.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (3 samples, 0.89%)</title><rect x="626.3" y="963.0" width="10.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="629.3" y="974.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (3 samples, 0.89%)</title><rect x="626.3" y="947.0" width="10.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="629.3" y="958.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.30%)</title><rect x="636.8" y="979.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="639.8" y="990.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.30%)</title><rect x="636.8" y="963.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="639.8" y="974.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.30%)</title><rect x="636.8" y="947.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="639.8" y="958.0"></text>
</g>
<g>
<title>ParCompactionManager::drain_region_stacks() (3 samples, 0.89%)</title><rect x="640.3" y="1027.0" width="10.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="643.3" y="1038.0"></text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (3 samples, 0.89%)</title><rect x="640.3" y="1011.0" width="10.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="643.3" y="1022.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (3 samples, 0.89%)</title><rect x="640.3" y="995.0" width="10.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="643.3" y="1006.0"></text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (2 samples, 0.59%)</title><rect x="643.8" y="979.0" width="7.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="646.8" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (2 samples, 0.59%)</title><rect x="643.8" y="963.0" width="7.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="646.8" y="974.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (2 samples, 0.59%)</title><rect x="643.8" y="947.0" width="7.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="646.8" y="958.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (2 samples, 0.59%)</title><rect x="643.8" y="931.0" width="7.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="646.8" y="942.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (6 samples, 1.78%)</title><rect x="650.8" y="1027.0" width="21.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="653.8" y="1038.0">P..</text>
</g>
<g>
<title>xdrmem_ops_aligned (6 samples, 1.78%)</title><rect x="650.8" y="1011.0" width="21.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="653.8" y="1022.0">x..</text>
</g>
<g>
<title>SpinPause (4 samples, 1.19%)</title><rect x="671.8" y="1027.0" width="14.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="674.8" y="1038.0"></text>
</g>
<g>
<title>ThreadRootsMarkingTask::do_it(GCTaskManager*, unsigned int) (1 samples, 0.30%)</title><rect x="685.8" y="1043.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="688.8" y="1054.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (1 samples, 0.30%)</title><rect x="685.8" y="1027.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="688.8" y="1038.0"></text>
</g>
<g>
<title>InstanceMirrorKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.30%)</title><rect x="685.8" y="1011.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="688.8" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.30%)</title><rect x="685.8" y="995.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="688.8" y="1006.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.30%)</title><rect x="685.8" y="979.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="688.8" y="990.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.30%)</title><rect x="685.8" y="963.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="688.8" y="974.0"></text>
</g>
<g>
<title>JavaThread::run() (85 samples, 25.22%)</title><rect x="689.3" y="1059.0" width="297.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="692.3" y="1070.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (84 samples, 24.93%)</title><rect x="689.3" y="1043.0" width="294.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="692.3" y="1054.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (60 samples, 17.80%)</title><rect x="689.3" y="1027.0" width="210.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="692.3" y="1038.0">CompileBroker::compiler_thre..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (25 samples, 7.42%)</title><rect x="689.3" y="1011.0" width="87.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="692.3" y="1022.0">CompileBro..</text>
</g>
<g>
<title>CompilationLog::log_compile(JavaThread*, CompileTask*) (3 samples, 0.89%)</title><rect x="689.3" y="995.0" width="10.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="692.3" y="1006.0"></text>
</g>
<g>
<title>CompileTask::print_compilation_impl(outputStream*, Method*, int, int, bool, int, bool, char const*, bool) (3 samples, 0.89%)</title><rect x="689.3" y="979.0" width="10.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="692.3" y="990.0"></text>
</g>
<g>
<title>Method::print_short_name(outputStream*) (2 samples, 0.59%)</title><rect x="689.3" y="963.0" width="7.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="692.3" y="974.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.30%)</title><rect x="692.8" y="947.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="695.8" y="958.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf(char*, unsigned long, char const*, __va_list_tag*, bool, unsigned long&amp;) (1 samples, 0.30%)</title><rect x="692.8" y="931.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="695.8" y="942.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 0.30%)</title><rect x="692.8" y="915.0" width="3.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="695.8" y="926.0"></text>
</g>
<g>
<title>_vsnprintf (1 samples, 0.30%)</title><rect x="692.8" y="899.0" width="3.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="695.8" y="910.0"></text>
</g>
<g>
<title>__v2printf (1 samples, 0.30%)</title><rect x="692.8" y="883.0" width="3.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="695.8" y="894.0"></text>
</g>
<g>
<title>__vfprintf (1 samples, 0.30%)</title><rect x="692.8" y="867.0" width="3.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="695.8" y="878.0"></text>
</g>
<g>
<title>__sfvwrite (1 samples, 0.30%)</title><rect x="692.8" y="851.0" width="3.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="695.8" y="862.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.30%)</title><rect x="696.3" y="963.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="699.3" y="974.0"></text>
</g>
<g>
<title>_platform_strlen (1 samples, 0.30%)</title><rect x="696.3" y="947.0" width="3.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="699.3" y="958.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (21 samples, 6.23%)</title><rect x="699.8" y="995.0" width="73.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="702.8" y="1006.0">Compiler..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (21 samples, 6.23%)</title><rect x="699.8" y="979.0" width="73.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="702.8" y="990.0">Compilat..</text>
</g>
<g>
<title>Compilation::compile_method() (21 samples, 6.23%)</title><rect x="699.8" y="963.0" width="73.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="702.8" y="974.0">Compilat..</text>
</g>
<g>
<title>Compilation::compile_java_method() (20 samples, 5.93%)</title><rect x="699.8" y="947.0" width="70.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="702.8" y="958.0">Compilat..</text>
</g>
<g>
<title>Compilation::build_hir() (11 samples, 3.26%)</title><rect x="699.8" y="931.0" width="38.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="702.8" y="942.0">Com..</text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (1 samples, 0.30%)</title><rect x="699.8" y="915.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="702.8" y="926.0"></text>
</g>
<g>
<title>GlobalValueNumbering::substitute(Instruction*) (1 samples, 0.30%)</title><rect x="699.8" y="899.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="702.8" y="910.0"></text>
</g>
<g>
<title>ValueMap::find_insert(Instruction*) (1 samples, 0.30%)</title><rect x="699.8" y="883.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="702.8" y="894.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (10 samples, 2.97%)</title><rect x="703.3" y="915.0" width="35.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="706.3" y="926.0">IR:..</text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (10 samples, 2.97%)</title><rect x="703.3" y="899.0" width="35.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="706.3" y="910.0">IRS..</text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (10 samples, 2.97%)</title><rect x="703.3" y="883.0" width="35.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="706.3" y="894.0">Gra..</text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (8 samples, 2.37%)</title><rect x="703.3" y="867.0" width="28.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="706.3" y="878.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (8 samples, 2.37%)</title><rect x="703.3" y="851.0" width="28.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="706.3" y="862.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (7 samples, 2.08%)</title><rect x="703.3" y="835.0" width="24.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="706.3" y="846.0">G..</text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (4 samples, 1.19%)</title><rect x="703.3" y="819.0" width="14.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="706.3" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (4 samples, 1.19%)</title><rect x="703.3" y="803.0" width="14.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="706.3" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (4 samples, 1.19%)</title><rect x="703.3" y="787.0" width="14.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="706.3" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (4 samples, 1.19%)</title><rect x="703.3" y="771.0" width="14.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="706.3" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.30%)</title><rect x="703.3" y="755.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="706.3" y="766.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.30%)</title><rect x="703.3" y="739.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="706.3" y="750.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.30%)</title><rect x="703.3" y="723.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="706.3" y="734.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.30%)</title><rect x="703.3" y="707.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="706.3" y="718.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.30%)</title><rect x="703.3" y="691.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="706.3" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.30%)</title><rect x="703.3" y="675.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="706.3" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.30%)</title><rect x="703.3" y="659.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="706.3" y="670.0"></text>
</g>
<g>
<title>FieldStreamBase::signature() const (1 samples, 0.30%)</title><rect x="703.3" y="643.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="706.3" y="654.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 0.89%)</title><rect x="706.8" y="755.0" width="10.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="709.8" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (2 samples, 0.59%)</title><rect x="706.8" y="739.0" width="7.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="709.8" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (2 samples, 0.59%)</title><rect x="706.8" y="723.0" width="7.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="709.8" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.59%)</title><rect x="706.8" y="707.0" width="7.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="709.8" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.59%)</title><rect x="706.8" y="691.0" width="7.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="709.8" y="702.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.59%)</title><rect x="706.8" y="675.0" width="7.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="709.8" y="686.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.30%)</title><rect x="706.8" y="659.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="709.8" y="670.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.30%)</title><rect x="706.8" y="643.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="709.8" y="654.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.30%)</title><rect x="706.8" y="627.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="709.8" y="638.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.30%)</title><rect x="706.8" y="611.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="709.8" y="622.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.30%)</title><rect x="706.8" y="595.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="709.8" y="606.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.30%)</title><rect x="706.8" y="579.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="709.8" y="590.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.30%)</title><rect x="706.8" y="563.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="709.8" y="574.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.30%)</title><rect x="706.8" y="547.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="709.8" y="558.0"></text>
</g>
<g>
<title>ValueStack::copy(ValueStack::Kind, int) (1 samples, 0.30%)</title><rect x="706.8" y="531.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="709.8" y="542.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.30%)</title><rect x="706.8" y="515.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="709.8" y="526.0"></text>
</g>
<g>
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.30%)</title><rect x="706.8" y="499.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="709.8" y="510.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.30%)</title><rect x="710.3" y="659.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="713.3" y="670.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.30%)</title><rect x="713.8" y="739.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="716.8" y="750.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::remove_at(int) (1 samples, 0.30%)</title><rect x="713.8" y="723.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="716.8" y="734.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (3 samples, 0.89%)</title><rect x="717.3" y="819.0" width="10.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="720.3" y="830.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.89%)</title><rect x="717.3" y="803.0" width="10.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="720.3" y="814.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.89%)</title><rect x="717.3" y="787.0" width="10.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="720.3" y="798.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(InstanceKlass*, InstanceKlass*, Symbol*, Symbol*, Bytecodes::Code) (2 samples, 0.59%)</title><rect x="717.3" y="771.0" width="7.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="720.3" y="782.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(KlassHandle, Symbol*, Symbol*, KlassHandle, bool) (1 samples, 0.30%)</title><rect x="720.8" y="755.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="723.8" y="766.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, Thread*) (1 samples, 0.30%)</title><rect x="720.8" y="739.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="723.8" y="750.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.30%)</title><rect x="720.8" y="723.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="723.8" y="734.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, char const*, Thread*) (1 samples, 0.30%)</title><rect x="720.8" y="707.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="723.8" y="718.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.30%)</title><rect x="720.8" y="691.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="723.8" y="702.0"></text>
</g>
<g>
<title>SignatureStream::next_non_primitive(int) (1 samples, 0.30%)</title><rect x="720.8" y="675.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="723.8" y="686.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.30%)</title><rect x="724.3" y="771.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="727.3" y="782.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.30%)</title><rect x="724.3" y="755.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="727.3" y="766.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle, ciInstanceKlass*) (1 samples, 0.30%)</title><rect x="724.3" y="739.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="727.3" y="750.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle, ciSymbol*) (1 samples, 0.30%)</title><rect x="724.3" y="723.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="727.3" y="734.0"></text>
</g>
<g>
<title>GrowableArray&lt;ciType*&gt;::GrowableArray(Arena*, int, int, ciType* const&amp;) (1 samples, 0.30%)</title><rect x="724.3" y="707.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="727.3" y="718.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.30%)</title><rect x="724.3" y="691.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="727.3" y="702.0"></text>
</g>
<g>
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.30%)</title><rect x="724.3" y="675.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="727.3" y="686.0"></text>
</g>
<g>
<title>GraphBuilder::load_constant() (1 samples, 0.30%)</title><rect x="727.8" y="835.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="730.8" y="846.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_constant() (1 samples, 0.30%)</title><rect x="727.8" y="819.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="730.8" y="830.0"></text>
</g>
<g>
<title>ciEnv::get_constant_by_index(constantPoolHandle, int, int, ciInstanceKlass*) (1 samples, 0.30%)</title><rect x="727.8" y="803.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="730.8" y="814.0"></text>
</g>
<g>
<title>ciEnv::get_constant_by_index_impl(constantPoolHandle, int, int, ciInstanceKlass*) (1 samples, 0.30%)</title><rect x="727.8" y="787.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="730.8" y="798.0"></text>
</g>
<g>
<title>ConstantPool::string_at(int, int, Thread*) (1 samples, 0.30%)</title><rect x="727.8" y="771.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="730.8" y="782.0"></text>
</g>
<g>
<title>ConstantPool::string_at_impl(constantPoolHandle, int, int, Thread*) (1 samples, 0.30%)</title><rect x="727.8" y="755.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="730.8" y="766.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (1 samples, 0.30%)</title><rect x="727.8" y="739.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="730.8" y="750.0"></text>
</g>
<g>
<title>Symbol::as_unicode(int&amp;) const (1 samples, 0.30%)</title><rect x="727.8" y="723.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="730.8" y="734.0"></text>
</g>
<g>
<title>UTF8::convert_to_unicode(char const*, unsigned short*, int) (1 samples, 0.30%)</title><rect x="727.8" y="707.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="730.8" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::state_at_entry() (1 samples, 0.30%)</title><rect x="731.3" y="867.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="734.3" y="878.0"></text>
</g>
<g>
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.30%)</title><rect x="731.3" y="851.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="734.3" y="862.0"></text>
</g>
<g>
<title>PhiSimplifier::PhiSimplifier(BlockBegin*) (1 samples, 0.30%)</title><rect x="734.8" y="867.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="737.8" y="878.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="851.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="737.8" y="862.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="835.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="737.8" y="846.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="819.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="737.8" y="830.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="803.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="737.8" y="814.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="787.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="737.8" y="798.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="771.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="737.8" y="782.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="755.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="737.8" y="766.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="739.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="737.8" y="750.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="723.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="737.8" y="734.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="707.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="737.8" y="718.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="691.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="737.8" y="702.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="675.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="737.8" y="686.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="659.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="737.8" y="670.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="643.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="737.8" y="654.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="627.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="737.8" y="638.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="611.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="737.8" y="622.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="595.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="737.8" y="606.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="579.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="737.8" y="590.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="563.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="737.8" y="574.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="547.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="737.8" y="558.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="531.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="737.8" y="542.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="515.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="737.8" y="526.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="499.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="737.8" y="510.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="483.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="737.8" y="494.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="467.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="737.8" y="478.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="451.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="737.8" y="462.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="435.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="737.8" y="446.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="419.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="737.8" y="430.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="403.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="737.8" y="414.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="387.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="737.8" y="398.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="371.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="737.8" y="382.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="355.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="737.8" y="366.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="339.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="737.8" y="350.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="323.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="737.8" y="334.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="307.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="737.8" y="318.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="291.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="737.8" y="302.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="275.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="737.8" y="286.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="259.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="737.8" y="270.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="243.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="737.8" y="254.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="227.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="737.8" y="238.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="211.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="737.8" y="222.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="195.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="737.8" y="206.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="179.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="737.8" y="190.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(boolArray&amp;, BlockClosure*) (1 samples, 0.30%)</title><rect x="734.8" y="163.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="737.8" y="174.0"></text>
</g>
<g>
<title>PhiSimplifier::block_do(BlockBegin*) (1 samples, 0.30%)</title><rect x="734.8" y="147.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="737.8" y="158.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (9 samples, 2.67%)</title><rect x="738.3" y="931.0" width="31.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="741.3" y="942.0">Co..</text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (2 samples, 0.59%)</title><rect x="738.3" y="915.0" width="7.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="741.3" y="926.0"></text>
</g>
<g>
<title>LIRGenerator::block_do(BlockBegin*) (2 samples, 0.59%)</title><rect x="738.3" y="899.0" width="7.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="741.3" y="910.0"></text>
</g>
<g>
<title>LIRGenerator::do_Return(Return*) (1 samples, 0.30%)</title><rect x="738.3" y="883.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="741.3" y="894.0"></text>
</g>
<g>
<title>LIRGenerator::do_root(Instruction*) (1 samples, 0.30%)</title><rect x="741.8" y="883.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="744.8" y="894.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (1 samples, 0.30%)</title><rect x="741.8" y="867.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="744.8" y="878.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (1 samples, 0.30%)</title><rect x="741.8" y="851.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="744.8" y="862.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (1 samples, 0.30%)</title><rect x="741.8" y="835.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="744.8" y="846.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (7 samples, 2.08%)</title><rect x="745.3" y="915.0" width="24.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="748.3" y="926.0">L..</text>
</g>
<g>
<title>LinearScan::allocate_registers() (2 samples, 0.59%)</title><rect x="745.3" y="899.0" width="7.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="748.3" y="910.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (2 samples, 0.59%)</title><rect x="745.3" y="883.0" width="7.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="748.3" y="894.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(IntervalState, int) (1 samples, 0.30%)</title><rect x="745.3" y="867.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="748.3" y="878.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (1 samples, 0.30%)</title><rect x="748.8" y="867.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="751.8" y="878.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_locked_reg(Interval*) (1 samples, 0.30%)</title><rect x="748.8" y="851.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="751.8" y="862.0"></text>
</g>
<g>
<title>LinearScanWalker::spill_exclude_active_fixed() (1 samples, 0.30%)</title><rect x="748.8" y="835.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="751.8" y="846.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.30%)</title><rect x="752.3" y="899.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="755.3" y="910.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(LIR_OpList*, IntervalWalker*) (1 samples, 0.30%)</title><rect x="752.3" y="883.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="755.3" y="894.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info(CodeEmitInfo*, int) (1 samples, 0.30%)</title><rect x="752.3" y="867.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="755.3" y="878.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.30%)</title><rect x="752.3" y="851.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="755.3" y="862.0"></text>
</g>
<g>
<title>Instruction::as_Constant() (1 samples, 0.30%)</title><rect x="752.3" y="835.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="755.3" y="846.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (2 samples, 0.59%)</title><rect x="755.8" y="899.0" width="7.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="758.8" y="910.0"></text>
</g>
<g>
<title>LIR_OpJavaCall::as_OpJavaCall() (1 samples, 0.30%)</title><rect x="755.8" y="883.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="758.8" y="894.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.30%)</title><rect x="759.3" y="883.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="762.3" y="894.0"></text>
</g>
<g>
<title>LinearScan::number_instructions() (1 samples, 0.30%)</title><rect x="762.8" y="899.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="765.8" y="910.0"></text>
</g>
<g>
<title>BitMap::resize(unsigned long, bool) (1 samples, 0.30%)</title><rect x="762.8" y="883.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="765.8" y="894.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.30%)</title><rect x="762.8" y="867.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="765.8" y="878.0"></text>
</g>
<g>
<title>LinearScan::sort_intervals_before_allocation() (1 samples, 0.30%)</title><rect x="766.3" y="899.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="769.3" y="910.0"></text>
</g>
<g>
<title>Compilation::install_code(int) (1 samples, 0.30%)</title><rect x="769.8" y="947.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="772.8" y="958.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (1 samples, 0.30%)</title><rect x="769.8" y="931.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="772.8" y="942.0"></text>
</g>
<g>
<title>nmethod::post_compiled_method_load_event() (1 samples, 0.30%)</title><rect x="769.8" y="915.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="772.8" y="926.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.30%)</title><rect x="769.8" y="899.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="772.8" y="910.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.30%)</title><rect x="769.8" y="883.0" width="3.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="772.8" y="894.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (1 samples, 0.30%)</title><rect x="773.3" y="995.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="776.3" y="1006.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.30%)</title><rect x="773.3" y="979.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="776.3" y="990.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.30%)</title><rect x="773.3" y="963.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="776.3" y="974.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle, ciInstanceKlass*) (1 samples, 0.30%)</title><rect x="773.3" y="947.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="776.3" y="958.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle, ciSymbol*) (1 samples, 0.30%)</title><rect x="773.3" y="931.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="776.3" y="942.0"></text>
</g>
<g>
<title>CompileQueue::get() (35 samples, 10.39%)</title><rect x="776.8" y="1011.0" width="122.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="779.8" y="1022.0">CompileQueue::g..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (32 samples, 9.50%)</title><rect x="776.8" y="995.0" width="112.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="779.8" y="1006.0">Monitor::wait(..</text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (31 samples, 9.20%)</title><rect x="776.8" y="979.0" width="108.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="779.8" y="990.0">Monitor::IWai..</text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.30%)</title><rect x="776.8" y="963.0" width="3.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="779.8" y="974.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.30%)</title><rect x="776.8" y="947.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="779.8" y="958.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="776.8" y="931.0" width="3.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="779.8" y="942.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (30 samples, 8.90%)</title><rect x="780.3" y="963.0" width="105.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="783.3" y="974.0">os::PlatformE..</text>
</g>
<g>
<title>__psynch_cvwait (30 samples, 8.90%)</title><rect x="780.3" y="947.0" width="105.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="783.3" y="958.0">__psynch_cvwait</text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.30%)</title><rect x="885.4" y="979.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="888.4" y="990.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.30%)</title><rect x="885.4" y="963.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="888.4" y="974.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.30%)</title><rect x="885.4" y="947.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="888.4" y="958.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.30%)</title><rect x="885.4" y="931.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="888.4" y="942.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.30%)</title><rect x="885.4" y="915.0" width="3.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="888.4" y="926.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.30%)</title><rect x="885.4" y="899.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="888.4" y="910.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="885.4" y="883.0" width="3.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="888.4" y="894.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (2 samples, 0.59%)</title><rect x="888.9" y="995.0" width="7.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="891.9" y="1006.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (2 samples, 0.59%)</title><rect x="888.9" y="979.0" width="7.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="891.9" y="990.0"></text>
</g>
<g>
<title>NMethodSweeper::process_nmethod(nmethod*) (2 samples, 0.59%)</title><rect x="888.9" y="963.0" width="7.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="891.9" y="974.0"></text>
</g>
<g>
<title>nmethod::cleanup_inline_caches() (1 samples, 0.30%)</title><rect x="892.4" y="947.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="895.4" y="958.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 0.30%)</title><rect x="892.4" y="931.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="895.4" y="942.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.30%)</title><rect x="895.9" y="995.0" width="3.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="898.9" y="1006.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (1 samples, 0.30%)</title><rect x="895.9" y="979.0" width="3.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="898.9" y="990.0"></text>
</g>
<g>
<title>JvmtiAgentThread::call_start_function() (5 samples, 1.48%)</title><rect x="899.4" y="1027.0" width="17.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="902.4" y="1038.0"></text>
</g>
<g>
<title>commandLoop (5 samples, 1.48%)</title><rect x="899.4" y="1011.0" width="17.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="902.4" y="1022.0"></text>
</g>
<g>
<title>debugMonitorWait (3 samples, 0.89%)</title><rect x="899.4" y="995.0" width="10.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="902.4" y="1006.0"></text>
</g>
<g>
<title>JvmtiEnv::RawMonitorWait(JvmtiRawMonitor*, long) (3 samples, 0.89%)</title><rect x="899.4" y="979.0" width="10.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="902.4" y="990.0"></text>
</g>
<g>
<title>JvmtiRawMonitor::raw_wait(long, bool, Thread*) (3 samples, 0.89%)</title><rect x="899.4" y="963.0" width="10.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="902.4" y="974.0"></text>
</g>
<g>
<title>JvmtiRawMonitor::SimpleWait(Thread*, long) (3 samples, 0.89%)</title><rect x="899.4" y="947.0" width="10.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="902.4" y="958.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (3 samples, 0.89%)</title><rect x="899.4" y="931.0" width="10.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="902.4" y="942.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.89%)</title><rect x="899.4" y="915.0" width="10.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="902.4" y="926.0"></text>
</g>
<g>
<title>outStream_sendCommand (1 samples, 0.30%)</title><rect x="909.9" y="995.0" width="3.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="912.9" y="1006.0"></text>
</g>
<g>
<title>transport_sendPacket (1 samples, 0.30%)</title><rect x="909.9" y="979.0" width="3.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="912.9" y="990.0"></text>
</g>
<g>
<title>socketTransport_writePacket (1 samples, 0.30%)</title><rect x="909.9" y="963.0" width="3.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="912.9" y="974.0"></text>
</g>
<g>
<title>send_fully (1 samples, 0.30%)</title><rect x="909.9" y="947.0" width="3.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="912.9" y="958.0"></text>
</g>
<g>
<title>sendto (1 samples, 0.30%)</title><rect x="909.9" y="931.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="912.9" y="942.0"></text>
</g>
<g>
<title>outStream_writeObjectRef (1 samples, 0.30%)</title><rect x="913.4" y="995.0" width="3.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="916.4" y="1006.0"></text>
</g>
<g>
<title>jni_NewWeakGlobalRef (1 samples, 0.30%)</title><rect x="913.4" y="979.0" width="3.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="916.4" y="990.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (19 samples, 5.64%)</title><rect x="916.9" y="1027.0" width="66.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="919.9" y="1038.0">Service..</text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1 samples, 0.30%)</title><rect x="916.9" y="1011.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="919.9" y="1022.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 0.30%)</title><rect x="916.9" y="995.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="919.9" y="1006.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (1 samples, 0.30%)</title><rect x="916.9" y="979.0" width="3.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="919.9" y="990.0"></text>
</g>
<g>
<title>PcDesc::real_pc(nmethod const*) const (1 samples, 0.30%)</title><rect x="916.9" y="963.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="919.9" y="974.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (17 samples, 5.04%)</title><rect x="920.4" y="1011.0" width="59.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="923.4" y="1022.0">Monito..</text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (17 samples, 5.04%)</title><rect x="920.4" y="995.0" width="59.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="923.4" y="1006.0">Monito..</text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (17 samples, 5.04%)</title><rect x="920.4" y="979.0" width="59.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="923.4" y="990.0">ParkCo..</text>
</g>
<g>
<title>os::PlatformEvent::park() (17 samples, 5.04%)</title><rect x="920.4" y="963.0" width="59.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="923.4" y="974.0">os::Pl..</text>
</g>
<g>
<title>__psynch_cvwait (17 samples, 5.04%)</title><rect x="920.4" y="947.0" width="59.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="923.4" y="958.0">__psyn..</text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.30%)</title><rect x="979.9" y="1011.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="982.9" y="1022.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.30%)</title><rect x="979.9" y="995.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="982.9" y="1006.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.30%)</title><rect x="979.9" y="979.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="982.9" y="990.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.30%)</title><rect x="979.9" y="963.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="982.9" y="974.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.30%)</title><rect x="979.9" y="947.0" width="3.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="982.9" y="958.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.30%)</title><rect x="979.9" y="931.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="982.9" y="942.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="979.9" y="915.0" width="3.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="982.9" y="926.0"></text>
</g>
<g>
<title>JvmtiExport::post_thread_start(JavaThread*) (1 samples, 0.30%)</title><rect x="983.4" y="1043.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="986.4" y="1054.0"></text>
</g>
<g>
<title>cbThreadStart (1 samples, 0.30%)</title><rect x="983.4" y="1027.0" width="3.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="986.4" y="1038.0"></text>
</g>
<g>
<title>event_callback (1 samples, 0.30%)</title><rect x="983.4" y="1011.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="986.4" y="1022.0"></text>
</g>
<g>
<title>threadControl_onEventHandlerEntry (1 samples, 0.30%)</title><rect x="983.4" y="995.0" width="3.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="986.4" y="1006.0"></text>
</g>
<g>
<title>findThread (1 samples, 0.30%)</title><rect x="983.4" y="979.0" width="3.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="986.4" y="990.0"></text>
</g>
<g>
<title>VMThread::run() (15 samples, 4.45%)</title><rect x="986.9" y="1059.0" width="52.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="989.9" y="1070.0">VMThr..</text>
</g>
<g>
<title>VMThread::loop() (15 samples, 4.45%)</title><rect x="986.9" y="1043.0" width="52.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="989.9" y="1054.0">VMThr..</text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.30%)</title><rect x="986.9" y="1027.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="989.9" y="1038.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.30%)</title><rect x="986.9" y="1011.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="989.9" y="1022.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.30%)</title><rect x="986.9" y="995.0" width="3.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="989.9" y="1006.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.30%)</title><rect x="986.9" y="979.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="989.9" y="990.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="986.9" y="963.0" width="3.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="989.9" y="974.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (3 samples, 0.89%)</title><rect x="990.4" y="1027.0" width="10.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="993.4" y="1038.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (3 samples, 0.89%)</title><rect x="990.4" y="1011.0" width="10.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="993.4" y="1022.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (3 samples, 0.89%)</title><rect x="990.4" y="995.0" width="10.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="993.4" y="1006.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.89%)</title><rect x="990.4" y="979.0" width="10.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="993.4" y="990.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (4 samples, 1.19%)</title><rect x="1000.9" y="1027.0" width="14.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1003.9" y="1038.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (4 samples, 1.19%)</title><rect x="1000.9" y="1011.0" width="14.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1003.9" y="1022.0"></text>
</g>
<g>
<title>InlineCacheBuffer::update_inline_caches() (1 samples, 0.30%)</title><rect x="1000.9" y="995.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1003.9" y="1006.0"></text>
</g>
<g>
<title>StubQueue::remove_first(int) (1 samples, 0.30%)</title><rect x="1000.9" y="979.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1003.9" y="990.0"></text>
</g>
<g>
<title>StubQueue::remove_first() (1 samples, 0.30%)</title><rect x="1000.9" y="963.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1003.9" y="974.0"></text>
</g>
<g>
<title>ICStub::finalize() (1 samples, 0.30%)</title><rect x="1000.9" y="947.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1003.9" y="958.0"></text>
</g>
<g>
<title>CompiledIC::internal_set_ic_destination(unsigned char*, bool, void*, bool) (1 samples, 0.30%)</title><rect x="1000.9" y="931.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1003.9" y="942.0"></text>
</g>
<g>
<title>NativeInstruction::wrote(int) (1 samples, 0.30%)</title><rect x="1000.9" y="915.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1003.9" y="926.0"></text>
</g>
<g>
<title>Threads::nmethods_do(CodeBlobClosure*) (3 samples, 0.89%)</title><rect x="1004.4" y="995.0" width="10.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1007.4" y="1006.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (3 samples, 0.89%)</title><rect x="1004.4" y="979.0" width="10.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1007.4" y="990.0"></text>
</g>
<g>
<title>StackFrameStream::StackFrameStream(JavaThread*, bool) (1 samples, 0.30%)</title><rect x="1004.4" y="963.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1007.4" y="974.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.30%)</title><rect x="1004.4" y="947.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1007.4" y="958.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.30%)</title><rect x="1004.4" y="931.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1007.4" y="942.0"></text>
</g>
<g>
<title>StackFrameStream::next() (2 samples, 0.59%)</title><rect x="1007.9" y="963.0" width="7.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1010.9" y="974.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.59%)</title><rect x="1007.9" y="947.0" width="7.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1010.9" y="958.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.30%)</title><rect x="1007.9" y="931.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1010.9" y="942.0"></text>
</g>
<g>
<title>frame::sender_for_interpreter_frame(RegisterMap*) const (1 samples, 0.30%)</title><rect x="1011.4" y="931.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1014.4" y="942.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.30%)</title><rect x="1011.4" y="915.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1014.4" y="926.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.30%)</title><rect x="1011.4" y="899.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1014.4" y="910.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.30%)</title><rect x="1011.4" y="883.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1014.4" y="894.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (7 samples, 2.08%)</title><rect x="1014.9" y="1027.0" width="24.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1017.9" y="1038.0">V..</text>
</g>
<g>
<title>VM_Operation::evaluate() (7 samples, 2.08%)</title><rect x="1014.9" y="1011.0" width="24.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1017.9" y="1022.0">V..</text>
</g>
<g>
<title>VM_BulkRevokeBias::doit() (1 samples, 0.30%)</title><rect x="1014.9" y="995.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1017.9" y="1006.0"></text>
</g>
<g>
<title>bulk_revoke_or_rebias_at_safepoint(oopDesc*, bool, bool, JavaThread*) (1 samples, 0.30%)</title><rect x="1014.9" y="979.0" width="3.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1017.9" y="990.0"></text>
</g>
<g>
<title>get_or_compute_monitor_info(JavaThread*) (1 samples, 0.30%)</title><rect x="1014.9" y="963.0" width="3.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1017.9" y="974.0"></text>
</g>
<g>
<title>vframe::java_sender() const (1 samples, 0.30%)</title><rect x="1014.9" y="947.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1017.9" y="958.0"></text>
</g>
<g>
<title>vframe::sender() const (1 samples, 0.30%)</title><rect x="1014.9" y="931.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1017.9" y="942.0"></text>
</g>
<g>
<title>vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*) (1 samples, 0.30%)</title><rect x="1014.9" y="915.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1017.9" y="926.0"></text>
</g>
<g>
<title>vframe::vframe(frame const*, RegisterMap const*, JavaThread*) (1 samples, 0.30%)</title><rect x="1014.9" y="899.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1017.9" y="910.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(RegisterMap const*) (1 samples, 0.30%)</title><rect x="1014.9" y="883.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1017.9" y="894.0"></text>
</g>
<g>
<title>VM_CollectForMetadataAllocation::doit() (5 samples, 1.48%)</title><rect x="1018.4" y="995.0" width="17.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1021.4" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::collect_as_vm_thread(GCCause::Cause) (5 samples, 1.48%)</title><rect x="1018.4" y="979.0" width="17.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1021.4" y="990.0"></text>
</g>
<g>
<title>PSParallelCompact::invoke(bool) (5 samples, 1.48%)</title><rect x="1018.4" y="963.0" width="17.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1021.4" y="974.0"></text>
</g>
<g>
<title>PSParallelCompact::invoke_no_policy(bool) (4 samples, 1.19%)</title><rect x="1018.4" y="947.0" width="14.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1021.4" y="958.0"></text>
</g>
<g>
<title>PSParallelCompact::adjust_roots() (3 samples, 0.89%)</title><rect x="1018.4" y="931.0" width="10.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1021.4" y="942.0"></text>
</g>
<g>
<title>JvmtiTagMap::weak_oops_do(BoolObjectClosure*, OopClosure*) (1 samples, 0.30%)</title><rect x="1018.4" y="915.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1021.4" y="926.0"></text>
</g>
<g>
<title>JvmtiTagMap::do_weak_oops(BoolObjectClosure*, OopClosure*) (1 samples, 0.30%)</title><rect x="1018.4" y="899.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1021.4" y="910.0"></text>
</g>
<g>
<title>StringTable::buckets_oops_do(OopClosure*, int, int) (1 samples, 0.30%)</title><rect x="1021.9" y="915.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1024.9" y="926.0"></text>
</g>
<g>
<title>PSParallelCompact::AdjustPointerClosure::do_oop(oopDesc**) (1 samples, 0.30%)</title><rect x="1021.9" y="899.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1024.9" y="910.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.30%)</title><rect x="1021.9" y="883.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1024.9" y="894.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.30%)</title><rect x="1021.9" y="867.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1024.9" y="878.0"></text>
</g>
<g>
<title>Threads::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (1 samples, 0.30%)</title><rect x="1025.4" y="915.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1028.4" y="926.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (1 samples, 0.30%)</title><rect x="1025.4" y="899.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1028.4" y="910.0"></text>
</g>
<g>
<title>HandleArea::oops_do(OopClosure*) (1 samples, 0.30%)</title><rect x="1025.4" y="883.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1028.4" y="894.0"></text>
</g>
<g>
<title>chunk_oops_do(OopClosure*, Chunk*, char*) (1 samples, 0.30%)</title><rect x="1025.4" y="867.0" width="3.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1028.4" y="878.0"></text>
</g>
<g>
<title>PSParallelCompact::AdjustPointerClosure::do_oop(oopDesc**) (1 samples, 0.30%)</title><rect x="1025.4" y="851.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1028.4" y="862.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.30%)</title><rect x="1025.4" y="835.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1028.4" y="846.0"></text>
</g>
<g>
<title>PSParallelCompact::fill_blocks(unsigned long) (1 samples, 0.30%)</title><rect x="1025.4" y="819.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1028.4" y="830.0"></text>
</g>
<g>
<title>PSParallelCompact::marking_phase(ParCompactionManager*, bool, ParallelOldTracer*) (1 samples, 0.30%)</title><rect x="1028.9" y="931.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1031.9" y="942.0"></text>
</g>
<g>
<title>SymbolTable::unlink(int*, int*) (1 samples, 0.30%)</title><rect x="1028.9" y="915.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1031.9" y="926.0"></text>
</g>
<g>
<title>SymbolTable::buckets_unlink(int, int, BasicHashtable&lt;(MemoryType)9&gt;::BucketUnlinkContext*, unsigned long*) (1 samples, 0.30%)</title><rect x="1028.9" y="899.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1031.9" y="910.0"></text>
</g>
<g>
<title>PSScavenge::invoke_no_policy() (1 samples, 0.30%)</title><rect x="1032.4" y="947.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1035.4" y="958.0"></text>
</g>
<g>
<title>StringTable::unlink_or_oops_do(BoolObjectClosure*, OopClosure*, int*, int*) (1 samples, 0.30%)</title><rect x="1032.4" y="931.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1035.4" y="942.0"></text>
</g>
<g>
<title>StringTable::buckets_unlink_or_oops_do(BoolObjectClosure*, OopClosure*, int, int, BasicHashtable&lt;(MemoryType)9&gt;::BucketUnlinkContext*) (1 samples, 0.30%)</title><rect x="1032.4" y="915.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1035.4" y="926.0"></text>
</g>
<g>
<title>PSIsAliveClosure::do_object_b(oopDesc*) (1 samples, 0.30%)</title><rect x="1032.4" y="899.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1035.4" y="910.0"></text>
</g>
<g>
<title>VM_ParallelGCFailedAllocation::doit() (1 samples, 0.30%)</title><rect x="1035.9" y="995.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1038.9" y="1006.0"></text>
</g>
<g>
<title>ParallelScavengeHeap::failed_mem_allocate(unsigned long) (1 samples, 0.30%)</title><rect x="1035.9" y="979.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1038.9" y="990.0"></text>
</g>
<g>
<title>PSScavenge::invoke() (1 samples, 0.30%)</title><rect x="1035.9" y="963.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1038.9" y="974.0"></text>
</g>
<g>
<title>PSScavenge::invoke_no_policy() (1 samples, 0.30%)</title><rect x="1035.9" y="947.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1038.9" y="958.0"></text>
</g>
<g>
<title>nmethod::oops_do_marking_epilogue() (1 samples, 0.30%)</title><rect x="1035.9" y="931.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1038.9" y="942.0"></text>
</g>
<g>
<title>WatcherThread::run() (43 samples, 12.76%)</title><rect x="1039.4" y="1059.0" width="150.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1042.4" y="1070.0">WatcherThread::run()</text>
</g>
<g>
<title>WatcherThread::sleep() const (43 samples, 12.76%)</title><rect x="1039.4" y="1043.0" width="150.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1042.4" y="1054.0">WatcherThread::slee..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (43 samples, 12.76%)</title><rect x="1039.4" y="1027.0" width="150.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1042.4" y="1038.0">Monitor::wait(bool,..</text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (43 samples, 12.76%)</title><rect x="1039.4" y="1011.0" width="150.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1042.4" y="1022.0">Monitor::IWait(Thre..</text>
</g>
<g>
<title>os::PlatformEvent::park(long) (42 samples, 12.46%)</title><rect x="1039.4" y="995.0" width="147.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1042.4" y="1006.0">os::PlatformEvent::..</text>
</g>
<g>
<title>__gettimeofday (1 samples, 0.30%)</title><rect x="1042.9" y="979.0" width="3.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1045.9" y="990.0"></text>
</g>
<g>
<title>__psynch_cvwait (40 samples, 11.87%)</title><rect x="1046.4" y="979.0" width="140.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1049.4" y="990.0">__psynch_cvwait</text>
</g>
<g>
<title>pthread_cond_destroy (1 samples, 0.30%)</title><rect x="1186.5" y="995.0" width="3.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1189.5" y="1006.0"></text>
</g>
</g>
</svg>
