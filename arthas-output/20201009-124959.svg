<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1046" onload="init(evt)" viewBox="0 0 1200 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1029"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1029"> </text>
<g id="frames">
<g>
<title>all (364 samples, 100.00%)</title><rect x="10.0" y="995.0" width="1180.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="13.0" y="1006.0">all</text>
</g>
<g>
<title>[deoptimization] (3 samples, 0.82%)</title><rect x="10.0" y="979.0" width="9.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info(JavaThread*) (3 samples, 0.82%)</title><rect x="10.0" y="963.0" width="9.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info_helper(JavaThread*) (3 samples, 0.82%)</title><rect x="10.0" y="947.0" width="9.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>Deoptimization::UnrollBlock::UnrollBlock(int, int, int, int, long*, unsigned char**, BasicType) (2 samples, 0.55%)</title><rect x="10.0" y="931.0" width="6.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (2 samples, 0.55%)</title><rect x="10.0" y="915.0" width="6.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>malloc (2 samples, 0.55%)</title><rect x="10.0" y="899.0" width="6.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>malloc_zone_malloc (2 samples, 0.55%)</title><rect x="10.0" y="883.0" width="6.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (2 samples, 0.55%)</title><rect x="10.0" y="867.0" width="6.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>small_malloc_should_clear (2 samples, 0.55%)</title><rect x="10.0" y="851.0" width="6.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>__ulock_wait (1 samples, 0.27%)</title><rect x="10.0" y="835.0" width="3.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>small_malloc_from_free_list (1 samples, 0.27%)</title><rect x="13.2" y="835.0" width="3.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="16.2" y="846.0"></text>
</g>
<g>
<title>small_free_list_remove_ptr_no_clear (1 samples, 0.27%)</title><rect x="13.2" y="819.0" width="3.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="16.2" y="830.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.27%)</title><rect x="16.5" y="931.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="19.5" y="942.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (1 samples, 0.27%)</title><rect x="19.7" y="979.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.7" y="990.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (1 samples, 0.27%)</title><rect x="19.7" y="963.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.7" y="974.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.processQueue (1 samples, 0.27%)</title><rect x="19.7" y="947.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.7" y="958.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.27%)</title><rect x="19.7" y="931.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.7" y="942.0"></text>
</g>
<g>
<title>java/lang/String.getChars (1 samples, 0.27%)</title><rect x="23.0" y="979.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.0" y="990.0"></text>
</g>
<g>
<title>java/lang/Thread.run (191 samples, 52.47%)</title><rect x="26.2" y="979.0" width="619.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="29.2" y="990.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/FastThreadLocalRunnable.run (1 samples, 0.27%)</title><rect x="26.2" y="963.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="29.2" y="974.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/internal/ThreadExecutorMap$2.run (1 samples, 0.27%)</title><rect x="26.2" y="947.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="29.2" y="958.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/util/concurrent/SingleThreadEventExecutor$4.run (1 samples, 0.27%)</title><rect x="26.2" y="931.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.2" y="942.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/NioEventLoop.run (1 samples, 0.27%)</title><rect x="26.2" y="915.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="29.2" y="926.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/NioEventLoop.processSelectedKeys (1 samples, 0.27%)</title><rect x="26.2" y="899.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="29.2" y="910.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized (1 samples, 0.27%)</title><rect x="26.2" y="883.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.2" y="894.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/NioEventLoop.processSelectedKey (1 samples, 0.27%)</title><rect x="26.2" y="867.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="29.2" y="878.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read (1 samples, 0.27%)</title><rect x="26.2" y="851.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="29.2" y="862.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline.fireChannelRead (1 samples, 0.27%)</title><rect x="26.2" y="835.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.2" y="846.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.27%)</title><rect x="26.2" y="819.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="29.2" y="830.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.27%)</title><rect x="26.2" y="803.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="29.2" y="814.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (1 samples, 0.27%)</title><rect x="26.2" y="787.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.2" y="798.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (1 samples, 0.27%)</title><rect x="26.2" y="771.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="29.2" y="782.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.27%)</title><rect x="26.2" y="755.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.2" y="766.0"></text>
</g>
<g>
<title>com/alibaba/arthas/deps/io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.27%)</title><rect x="26.2" y="739.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="29.2" y="750.0"></text>
</g>
<g>
<title>io/termd/core/telnet/netty/TelnetChannelHandler.channelRead (1 samples, 0.27%)</title><rect x="26.2" y="723.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.2" y="734.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.receive (1 samples, 0.27%)</title><rect x="26.2" y="707.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.2" y="718.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.flushDataIfNecessary (1 samples, 0.27%)</title><rect x="26.2" y="691.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.2" y="702.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetConnection.flushData (1 samples, 0.27%)</title><rect x="26.2" y="675.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.2" y="686.0"></text>
</g>
<g>
<title>io/termd/core/telnet/TelnetTtyConnection.onData (1 samples, 0.27%)</title><rect x="26.2" y="659.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.2" y="670.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryDecoder.write (1 samples, 0.27%)</title><rect x="26.2" y="643.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="29.2" y="654.0"></text>
</g>
<g>
<title>io/termd/core/io/BinaryDecoder.write (1 samples, 0.27%)</title><rect x="26.2" y="627.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.2" y="638.0"></text>
</g>
<g>
<title>io/termd/core/tty/ReadBuffer.accept (1 samples, 0.27%)</title><rect x="26.2" y="611.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="29.2" y="622.0"></text>
</g>
<g>
<title>io/termd/core/tty/ReadBuffer.accept (1 samples, 0.27%)</title><rect x="26.2" y="595.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.2" y="606.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyEventDecoder.accept (1 samples, 0.27%)</title><rect x="26.2" y="579.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="29.2" y="590.0"></text>
</g>
<g>
<title>io/termd/core/tty/TtyEventDecoder.accept (1 samples, 0.27%)</title><rect x="26.2" y="563.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.2" y="574.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction$2.accept (1 samples, 0.27%)</title><rect x="26.2" y="547.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.2" y="558.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction$2.accept (1 samples, 0.27%)</title><rect x="26.2" y="531.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="29.2" y="542.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline.access$500 (1 samples, 0.27%)</title><rect x="26.2" y="515.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.2" y="526.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline.deliver (1 samples, 0.27%)</title><rect x="26.2" y="499.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.2" y="510.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.access$200 (1 samples, 0.27%)</title><rect x="26.2" y="483.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.2" y="494.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.handle (1 samples, 0.27%)</title><rect x="26.2" y="467.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="29.2" y="478.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$2.apply (1 samples, 0.27%)</title><rect x="26.2" y="451.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.2" y="462.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.access$000 (1 samples, 0.27%)</title><rect x="26.2" y="435.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="29.2" y="446.0"></text>
</g>
<g>
<title>io/termd/core/readline/Readline$Interaction.end (1 samples, 0.27%)</title><rect x="26.2" y="419.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.2" y="430.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/handlers/term/RequestHandler.accept (1 samples, 0.27%)</title><rect x="26.2" y="403.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="29.2" y="414.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/handlers/term/RequestHandler.accept (1 samples, 0.27%)</title><rect x="26.2" y="387.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.2" y="398.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/handlers/shell/ShellLineHandler.handle (1 samples, 0.27%)</title><rect x="26.2" y="371.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="29.2" y="382.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/handlers/shell/ShellLineHandler.handle (1 samples, 0.27%)</title><rect x="26.2" y="355.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.2" y="366.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/handlers/shell/ShellLineHandler.createJob (1 samples, 0.27%)</title><rect x="26.2" y="339.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="29.2" y="350.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/impl/ShellImpl.createJob (1 samples, 0.27%)</title><rect x="26.2" y="323.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="29.2" y="334.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/GlobalJobControllerImpl.createJob (1 samples, 0.27%)</title><rect x="26.2" y="307.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.2" y="318.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/JobControllerImpl.createJob (1 samples, 0.27%)</title><rect x="26.2" y="291.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.2" y="302.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/JobControllerImpl.createProcess (1 samples, 0.27%)</title><rect x="26.2" y="275.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.2" y="286.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/InternalCommandManager.getCommand (1 samples, 0.27%)</title><rect x="26.2" y="259.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="29.2" y="270.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/system/impl/InternalCommandManager.getCommand (1 samples, 0.27%)</title><rect x="26.2" y="243.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.2" y="254.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.name (1 samples, 0.27%)</title><rect x="26.2" y="227.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.2" y="238.0"></text>
</g>
<g>
<title>com/taobao/arthas/core/shell/command/impl/AnnotatedCommandImpl.shouldOverridesName (1 samples, 0.27%)</title><rect x="26.2" y="211.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.2" y="222.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredMethod (1 samples, 0.27%)</title><rect x="26.2" y="195.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.2" y="206.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredMethods (1 samples, 0.27%)</title><rect x="26.2" y="179.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.2" y="190.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredMethods0 (1 samples, 0.27%)</title><rect x="26.2" y="163.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="29.2" y="174.0"></text>
</g>
<g>
<title>JVM_GetClassDeclaredMethods (1 samples, 0.27%)</title><rect x="26.2" y="147.0" width="3.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="29.2" y="158.0"></text>
</g>
<g>
<title>get_class_declared_methods_helper(JNIEnv_*, _jclass*, unsigned char, bool, Klass*, Thread*) (1 samples, 0.27%)</title><rect x="26.2" y="131.0" width="3.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="29.2" y="142.0"></text>
</g>
<g>
<title>Reflection::new_method(methodHandle, bool, bool, Thread*) (1 samples, 0.27%)</title><rect x="26.2" y="115.0" width="3.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="29.2" y="126.0"></text>
</g>
<g>
<title>Reflection::get_parameter_types(methodHandle, int, oopDesc**, Thread*) (1 samples, 0.27%)</title><rect x="26.2" y="99.0" width="3.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="29.2" y="110.0"></text>
</g>
<g>
<title>get_mirror_from_signature(methodHandle, SignatureStream*, Thread*) (1 samples, 0.27%)</title><rect x="26.2" y="83.0" width="3.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="29.2" y="94.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.27%)</title><rect x="26.2" y="67.0" width="3.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="29.2" y="78.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.27%)</title><rect x="26.2" y="51.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="29.2" y="62.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.27%)</title><rect x="26.2" y="35.0" width="3.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="29.2" y="46.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/DefaultThreadFactory$DefaultRunnableDecorator.run (190 samples, 52.20%)</title><rect x="29.5" y="963.0" width="615.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="32.5" y="974.0">io/netty/util/concurrent/DefaultThreadFactory$DefaultRunnableDecorator.run</text>
</g>
<g>
<title>io/netty/util/ThreadDeathWatcher$Watcher.run (4 samples, 1.10%)</title><rect x="29.5" y="947.0" width="12.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.5" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.sleep (4 samples, 1.10%)</title><rect x="29.5" y="931.0" width="12.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.5" y="942.0"></text>
</g>
<g>
<title>JVM_Sleep (4 samples, 1.10%)</title><rect x="29.5" y="915.0" width="12.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="32.5" y="926.0"></text>
</g>
<g>
<title>os::sleep(Thread*, long, bool) (4 samples, 1.10%)</title><rect x="29.5" y="899.0" width="12.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="32.5" y="910.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (4 samples, 1.10%)</title><rect x="29.5" y="883.0" width="12.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="32.5" y="894.0"></text>
</g>
<g>
<title>__psynch_cvwait (4 samples, 1.10%)</title><rect x="29.5" y="867.0" width="12.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="32.5" y="878.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor$5.run (186 samples, 51.10%)</title><rect x="42.4" y="947.0" width="603.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="45.4" y="958.0">io/netty/util/concurrent/SingleThreadEventExecutor$5.run</text>
</g>
<g>
<title>io/netty/channel/DefaultEventLoop.run (70 samples, 19.23%)</title><rect x="42.4" y="931.0" width="226.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.4" y="942.0">io/netty/channel/DefaultEventL..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$1.run (6 samples, 1.65%)</title><rect x="42.4" y="915.0" width="19.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.4" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$000 (6 samples, 1.65%)</title><rect x="42.4" y="899.0" width="19.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.4" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (6 samples, 1.65%)</title><rect x="42.4" y="883.0" width="19.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.4" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelRegistered (6 samples, 1.65%)</title><rect x="42.4" y="867.0" width="19.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.4" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRegistered (6 samples, 1.65%)</title><rect x="42.4" y="851.0" width="19.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.4" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (6 samples, 1.65%)</title><rect x="42.4" y="835.0" width="19.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="45.4" y="846.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (6 samples, 1.65%)</title><rect x="42.4" y="819.0" width="19.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.4" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.wakeup (1 samples, 0.27%)</title><rect x="42.4" y="803.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.4" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (1 samples, 0.27%)</title><rect x="42.4" y="787.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.interrupt (1 samples, 0.27%)</title><rect x="42.4" y="771.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.interrupt (1 samples, 0.27%)</title><rect x="42.4" y="755.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.4" y="766.0"></text>
</g>
<g>
<title>write (1 samples, 0.27%)</title><rect x="42.4" y="739.0" width="3.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="45.4" y="750.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (5 samples, 1.37%)</title><rect x="45.7" y="803.0" width="16.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="48.7" y="814.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (2 samples, 0.55%)</title><rect x="45.7" y="787.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.7" y="798.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.27%)</title><rect x="45.7" y="771.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.7" y="782.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.27%)</title><rect x="45.7" y="755.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.7" y="766.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.27%)</title><rect x="45.7" y="739.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.7" y="750.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.27%)</title><rect x="45.7" y="723.0" width="3.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="48.7" y="734.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.27%)</title><rect x="45.7" y="707.0" width="3.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="48.7" y="718.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (1 samples, 0.27%)</title><rect x="45.7" y="691.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="48.7" y="702.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (1 samples, 0.27%)</title><rect x="45.7" y="675.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="48.7" y="686.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.27%)</title><rect x="45.7" y="659.0" width="3.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="48.7" y="670.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.27%)</title><rect x="45.7" y="643.0" width="3.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="48.7" y="654.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.27%)</title><rect x="45.7" y="627.0" width="3.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="48.7" y="638.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.27%)</title><rect x="45.7" y="611.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="48.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (1 samples, 0.27%)</title><rect x="48.9" y="771.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="51.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.27%)</title><rect x="48.9" y="755.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.9" y="766.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.offerTask (3 samples, 0.82%)</title><rect x="52.1" y="787.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="55.1" y="798.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscChunkedArrayQueue.offer (3 samples, 0.82%)</title><rect x="52.1" y="771.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="55.1" y="782.0"></text>
</g>
<g>
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscChunkedArrayQueue.offerSlowPath (3 samples, 0.82%)</title><rect x="52.1" y="755.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="55.1" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$3.run (2 samples, 0.55%)</title><rect x="61.9" y="915.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.9" y="926.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$200 (2 samples, 0.55%)</title><rect x="61.9" y="899.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.9" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (2 samples, 0.55%)</title><rect x="61.9" y="883.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.9" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelActive (2 samples, 0.55%)</title><rect x="61.9" y="867.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.9" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelActive (2 samples, 0.55%)</title><rect x="61.9" y="851.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.9" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (2 samples, 0.55%)</title><rect x="61.9" y="835.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="64.9" y="846.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (2 samples, 0.55%)</title><rect x="61.9" y="819.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="64.9" y="830.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (2 samples, 0.55%)</title><rect x="61.9" y="803.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.9" y="814.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (2 samples, 0.55%)</title><rect x="61.9" y="787.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="64.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.55%)</title><rect x="61.9" y="771.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.9" y="782.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.55%)</title><rect x="61.9" y="755.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.9" y="766.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.55%)</title><rect x="61.9" y="739.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.9" y="750.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.55%)</title><rect x="61.9" y="723.0" width="6.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="64.9" y="734.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.55%)</title><rect x="61.9" y="707.0" width="6.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="64.9" y="718.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (2 samples, 0.55%)</title><rect x="61.9" y="691.0" width="6.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="64.9" y="702.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (2 samples, 0.55%)</title><rect x="61.9" y="675.0" width="6.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="64.9" y="686.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (2 samples, 0.55%)</title><rect x="61.9" y="659.0" width="6.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="64.9" y="670.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (2 samples, 0.55%)</title><rect x="61.9" y="643.0" width="6.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="64.9" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(KlassHandle, int, int, Thread*) (1 samples, 0.27%)</title><rect x="61.9" y="627.0" width="3.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="64.9" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.27%)</title><rect x="65.1" y="627.0" width="3.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="68.1" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(KlassHandle, int, int, Thread*) (1 samples, 0.27%)</title><rect x="65.1" y="611.0" width="3.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="68.1" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$7.run (48 samples, 13.19%)</title><rect x="68.4" y="915.0" width="155.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="71.4" y="926.0">io/netty/channel/Abs..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$600 (48 samples, 13.19%)</title><rect x="68.4" y="899.0" width="155.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="71.4" y="910.0">io/netty/channel/Abs..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (48 samples, 13.19%)</title><rect x="68.4" y="883.0" width="155.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.4" y="894.0">io/netty/channel/Abs..</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (48 samples, 13.19%)</title><rect x="68.4" y="867.0" width="155.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.4" y="878.0">io/netty/channel/Sim..</text>
</g>
<g>
<title>com/tinysakura/xhaka/server/handler/XhakaHttpServletHandler.channelRead0 (48 samples, 13.19%)</title><rect x="68.4" y="851.0" width="155.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.4" y="862.0">com/tinysakura/xhaka..</text>
</g>
<g>
<title>com/tinysakura/xhaka/server/handler/XhakaHttpServletHandler.channelRead0 (48 samples, 13.19%)</title><rect x="68.4" y="835.0" width="155.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="71.4" y="846.0">com/tinysakura/xhaka..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/filter/FilterChainImpl.doFilter (44 samples, 12.09%)</title><rect x="68.4" y="819.0" width="142.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="71.4" y="830.0">com/tinysakura/xha..</text>
</g>
<g>
<title>com/tinysakura/xhaka/filter/TestFilter.doFilter (44 samples, 12.09%)</title><rect x="68.4" y="803.0" width="142.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.4" y="814.0">com/tinysakura/xha..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (10 samples, 2.75%)</title><rect x="68.4" y="787.0" width="32.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="71.4" y="798.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (10 samples, 2.75%)</title><rect x="68.4" y="771.0" width="32.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.4" y="782.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (10 samples, 2.75%)</title><rect x="68.4" y="755.0" width="32.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="71.4" y="766.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (10 samples, 2.75%)</title><rect x="68.4" y="739.0" width="32.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.4" y="750.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (10 samples, 2.75%)</title><rect x="68.4" y="723.0" width="32.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="71.4" y="734.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (10 samples, 2.75%)</title><rect x="68.4" y="707.0" width="32.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.4" y="718.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (10 samples, 2.75%)</title><rect x="68.4" y="691.0" width="32.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.4" y="702.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (10 samples, 2.75%)</title><rect x="68.4" y="675.0" width="32.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.4" y="686.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (10 samples, 2.75%)</title><rect x="68.4" y="659.0" width="32.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.4" y="670.0">ch..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.27%)</title><rect x="68.4" y="643.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.4" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.27%)</title><rect x="68.4" y="627.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.4" y="638.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.27%)</title><rect x="68.4" y="611.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="71.4" y="622.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.27%)</title><rect x="68.4" y="595.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.4" y="606.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.27%)</title><rect x="68.4" y="579.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="71.4" y="590.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.27%)</title><rect x="68.4" y="563.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.4" y="574.0"></text>
</g>
<g>
<title>java/lang/Object.toString (1 samples, 0.27%)</title><rect x="68.4" y="547.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.4" y="558.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (1 samples, 0.27%)</title><rect x="68.4" y="531.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.4" y="542.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.27%)</title><rect x="68.4" y="515.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="71.4" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (4 samples, 1.10%)</title><rect x="71.6" y="643.0" width="13.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.6" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.27%)</title><rect x="71.6" y="627.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.6" y="638.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.27%)</title><rect x="71.6" y="611.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="74.6" y="622.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.27%)</title><rect x="71.6" y="595.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="74.6" y="606.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.27%)</title><rect x="71.6" y="579.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.6" y="590.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.27%)</title><rect x="71.6" y="563.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.6" y="574.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.27%)</title><rect x="71.6" y="547.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.6" y="558.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.27%)</title><rect x="71.6" y="531.0" width="3.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="74.6" y="542.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.27%)</title><rect x="71.6" y="515.0" width="3.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="74.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.82%)</title><rect x="74.8" y="627.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (3 samples, 0.82%)</title><rect x="74.8" y="611.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.82%)</title><rect x="74.8" y="595.0" width="9.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.82%)</title><rect x="74.8" y="579.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.82%)</title><rect x="74.8" y="563.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="77.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.82%)</title><rect x="74.8" y="547.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.8" y="558.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (3 samples, 0.82%)</title><rect x="74.8" y="531.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.8" y="542.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.82%)</title><rect x="74.8" y="515.0" width="9.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="77.8" y="526.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.82%)</title><rect x="74.8" y="499.0" width="9.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="77.8" y="510.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.82%)</title><rect x="74.8" y="483.0" width="9.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="77.8" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (5 samples, 1.37%)</title><rect x="84.6" y="643.0" width="16.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.6" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (5 samples, 1.37%)</title><rect x="84.6" y="627.0" width="16.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.6" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (5 samples, 1.37%)</title><rect x="84.6" y="611.0" width="16.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.6" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (5 samples, 1.37%)</title><rect x="84.6" y="595.0" width="16.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.6" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (4 samples, 1.10%)</title><rect x="84.6" y="579.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.6" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (2 samples, 0.55%)</title><rect x="84.6" y="563.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.6" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (2 samples, 0.55%)</title><rect x="84.6" y="547.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.6" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.55%)</title><rect x="84.6" y="531.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.6" y="542.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.27%)</title><rect x="84.6" y="515.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="87.6" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.27%)</title><rect x="84.6" y="499.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="87.6" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.27%)</title><rect x="84.6" y="483.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="87.6" y="494.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.27%)</title><rect x="84.6" y="467.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="87.6" y="478.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.27%)</title><rect x="84.6" y="451.0" width="3.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="87.6" y="462.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.27%)</title><rect x="87.8" y="515.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.8" y="526.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.27%)</title><rect x="87.8" y="499.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.8" y="510.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.27%)</title><rect x="87.8" y="483.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.8" y="494.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (1 samples, 0.27%)</title><rect x="87.8" y="467.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.8" y="478.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (1 samples, 0.27%)</title><rect x="87.8" y="451.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.8" y="462.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.27%)</title><rect x="87.8" y="435.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.8" y="446.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.27%)</title><rect x="87.8" y="419.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.8" y="430.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.subformat (1 samples, 0.27%)</title><rect x="87.8" y="403.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.8" y="414.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.getPositivePrefixFieldPositions (1 samples, 0.27%)</title><rect x="87.8" y="387.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.8" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (2 samples, 0.55%)</title><rect x="91.0" y="563.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="94.0" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/NamedConverter.convert (2 samples, 0.55%)</title><rect x="91.0" y="547.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.0" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/TargetLengthBasedClassNameAbbreviator.abbreviate (2 samples, 0.55%)</title><rect x="91.0" y="531.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.0" y="542.0"></text>
</g>
<g>
<title>new_type_array Runtime1 stub (2 samples, 0.55%)</title><rect x="91.0" y="515.0" width="6.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="94.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.27%)</title><rect x="97.5" y="579.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.5" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.27%)</title><rect x="97.5" y="563.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.5" y="574.0"></text>
</g>
<g>
<title>fast_new_instance Runtime1 stub (1 samples, 0.27%)</title><rect x="97.5" y="547.0" width="3.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="100.5" y="558.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/filter/FilterChainImpl.doFilter (34 samples, 9.34%)</title><rect x="100.8" y="787.0" width="110.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="103.8" y="798.0">com/tinysakur..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/filter/XhakaServlet.service (34 samples, 9.34%)</title><rect x="100.8" y="771.0" width="110.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.8" y="782.0">com/tinysakur..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (6 samples, 1.65%)</title><rect x="100.8" y="755.0" width="19.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="103.8" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (6 samples, 1.65%)</title><rect x="100.8" y="739.0" width="19.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="103.8" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (6 samples, 1.65%)</title><rect x="100.8" y="723.0" width="19.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="103.8" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (6 samples, 1.65%)</title><rect x="100.8" y="707.0" width="19.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.8" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (6 samples, 1.65%)</title><rect x="100.8" y="691.0" width="19.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.8" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (6 samples, 1.65%)</title><rect x="100.8" y="675.0" width="19.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="103.8" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (6 samples, 1.65%)</title><rect x="100.8" y="659.0" width="19.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="103.8" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (6 samples, 1.65%)</title><rect x="100.8" y="643.0" width="19.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.8" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (6 samples, 1.65%)</title><rect x="100.8" y="627.0" width="19.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="103.8" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (3 samples, 0.82%)</title><rect x="100.8" y="611.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="103.8" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (1 samples, 0.27%)</title><rect x="100.8" y="595.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.8" y="606.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (1 samples, 0.27%)</title><rect x="100.8" y="579.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="103.8" y="590.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (1 samples, 0.27%)</title><rect x="100.8" y="563.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="103.8" y="574.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.27%)</title><rect x="100.8" y="547.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.8" y="558.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (1 samples, 0.27%)</title><rect x="100.8" y="531.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="103.8" y="542.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.27%)</title><rect x="100.8" y="515.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="103.8" y="526.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (1 samples, 0.27%)</title><rect x="100.8" y="499.0" width="3.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="103.8" y="510.0"></text>
</g>
<g>
<title>writeBytes (1 samples, 0.27%)</title><rect x="100.8" y="483.0" width="3.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="103.8" y="494.0"></text>
</g>
<g>
<title>write (1 samples, 0.27%)</title><rect x="100.8" y="467.0" width="3.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="103.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.55%)</title><rect x="104.0" y="595.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="107.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (2 samples, 0.55%)</title><rect x="104.0" y="579.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.55%)</title><rect x="104.0" y="563.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.55%)</title><rect x="104.0" y="547.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.55%)</title><rect x="104.0" y="531.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="107.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.55%)</title><rect x="104.0" y="515.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="107.0" y="526.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (2 samples, 0.55%)</title><rect x="104.0" y="499.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="107.0" y="510.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.55%)</title><rect x="104.0" y="483.0" width="6.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="107.0" y="494.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.55%)</title><rect x="104.0" y="467.0" width="6.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="107.0" y="478.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.55%)</title><rect x="104.0" y="451.0" width="6.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="107.0" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (3 samples, 0.82%)</title><rect x="110.5" y="611.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="113.5" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (3 samples, 0.82%)</title><rect x="110.5" y="595.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.5" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (3 samples, 0.82%)</title><rect x="110.5" y="579.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.5" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (3 samples, 0.82%)</title><rect x="110.5" y="563.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.5" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (1 samples, 0.27%)</title><rect x="110.5" y="547.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.5" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.27%)</title><rect x="110.5" y="531.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.5" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.27%)</title><rect x="110.5" y="515.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="113.5" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.27%)</title><rect x="110.5" y="499.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.5" y="510.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.27%)</title><rect x="110.5" y="483.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="113.5" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.27%)</title><rect x="110.5" y="467.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="113.5" y="478.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.27%)</title><rect x="110.5" y="451.0" width="3.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="113.5" y="462.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.27%)</title><rect x="110.5" y="435.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="113.5" y="446.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.27%)</title><rect x="110.5" y="419.0" width="3.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="113.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.55%)</title><rect x="113.7" y="547.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.27%)</title><rect x="113.7" y="531.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.27%)</title><rect x="113.7" y="515.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="116.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.27%)</title><rect x="113.7" y="499.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="116.7" y="510.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.27%)</title><rect x="113.7" y="483.0" width="3.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="116.7" y="494.0"></text>
</g>
<g>
<title>new_type_array Runtime1 stub (1 samples, 0.27%)</title><rect x="117.0" y="531.0" width="3.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="120.0" y="542.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.get (23 samples, 6.32%)</title><rect x="120.2" y="755.0" width="74.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.2" y="766.0">com/tiny..</text>
</g>
<g>
<title>NullPointerException at call throw_exception (1 samples, 0.27%)</title><rect x="120.2" y="739.0" width="3.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="123.2" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (4 samples, 1.10%)</title><rect x="123.5" y="739.0" width="12.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="126.5" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (4 samples, 1.10%)</title><rect x="123.5" y="723.0" width="12.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.5" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (4 samples, 1.10%)</title><rect x="123.5" y="707.0" width="12.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.5" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (4 samples, 1.10%)</title><rect x="123.5" y="691.0" width="12.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.5" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (4 samples, 1.10%)</title><rect x="123.5" y="675.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.5" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (4 samples, 1.10%)</title><rect x="123.5" y="659.0" width="12.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="126.5" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (4 samples, 1.10%)</title><rect x="123.5" y="643.0" width="12.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="126.5" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (4 samples, 1.10%)</title><rect x="123.5" y="627.0" width="12.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.5" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (4 samples, 1.10%)</title><rect x="123.5" y="611.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.5" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (4 samples, 1.10%)</title><rect x="123.5" y="595.0" width="12.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.82%)</title><rect x="123.5" y="579.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (3 samples, 0.82%)</title><rect x="123.5" y="563.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.82%)</title><rect x="123.5" y="547.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="126.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.82%)</title><rect x="123.5" y="531.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.82%)</title><rect x="123.5" y="515.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="126.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.82%)</title><rect x="123.5" y="499.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="126.5" y="510.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (3 samples, 0.82%)</title><rect x="123.5" y="483.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.5" y="494.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.82%)</title><rect x="123.5" y="467.0" width="9.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="126.5" y="478.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.82%)</title><rect x="123.5" y="451.0" width="9.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="126.5" y="462.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.82%)</title><rect x="123.5" y="435.0" width="9.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="126.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.27%)</title><rect x="133.2" y="579.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.27%)</title><rect x="133.2" y="563.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.27%)</title><rect x="133.2" y="547.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.27%)</title><rect x="133.2" y="531.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="136.2" y="542.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.unpark (1 samples, 0.27%)</title><rect x="133.2" y="515.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.2" y="526.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.27%)</title><rect x="133.2" y="499.0" width="3.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="136.2" y="510.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.27%)</title><rect x="133.2" y="483.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="136.2" y="494.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 0.27%)</title><rect x="133.2" y="467.0" width="3.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="136.2" y="478.0"></text>
</g>
<g>
<title>java/lang/NullPointerException.&lt;init&gt; (1 samples, 0.27%)</title><rect x="136.4" y="739.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="139.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (17 samples, 4.67%)</title><rect x="139.7" y="739.0" width="55.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="142.7" y="750.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (17 samples, 4.67%)</title><rect x="139.7" y="723.0" width="55.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="142.7" y="734.0">java/..</text>
</g>
<g>
<title>sun/misc/Unsafe.park (17 samples, 4.67%)</title><rect x="139.7" y="707.0" width="55.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.7" y="718.0">sun/m..</text>
</g>
<g>
<title>Unsafe_Park (17 samples, 4.67%)</title><rect x="139.7" y="691.0" width="55.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="142.7" y="702.0">Unsaf..</text>
</g>
<g>
<title>Parker::park(bool, long) (17 samples, 4.67%)</title><rect x="139.7" y="675.0" width="55.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="142.7" y="686.0">Parke..</text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.27%)</title><rect x="139.7" y="659.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="142.7" y="670.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.27%)</title><rect x="139.7" y="643.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="142.7" y="654.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.27%)</title><rect x="139.7" y="627.0" width="3.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="142.7" y="638.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.27%)</title><rect x="139.7" y="611.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="142.7" y="622.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.27%)</title><rect x="139.7" y="595.0" width="3.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="142.7" y="606.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.27%)</title><rect x="139.7" y="579.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="142.7" y="590.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.27%)</title><rect x="139.7" y="563.0" width="3.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="142.7" y="574.0"></text>
</g>
<g>
<title>__psynch_cvwait (16 samples, 4.40%)</title><rect x="142.9" y="659.0" width="51.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="145.9" y="670.0">__psy..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/remote/route/ServerDispatcher.getDispatcherServerName (3 samples, 0.82%)</title><rect x="194.8" y="755.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="197.8" y="766.0"></text>
</g>
<g>
<title>org/springframework/util/AntPathMatcher.extractPathWithinPattern (1 samples, 0.27%)</title><rect x="194.8" y="739.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="197.8" y="750.0"></text>
</g>
<g>
<title>org/springframework/util/StringUtils.tokenizeToStringArray (1 samples, 0.27%)</title><rect x="194.8" y="723.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="197.8" y="734.0"></text>
</g>
<g>
<title>java/util/StringTokenizer.&lt;init&gt; (1 samples, 0.27%)</title><rect x="194.8" y="707.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="197.8" y="718.0"></text>
</g>
<g>
<title>org/springframework/util/AntPathMatcher.match (2 samples, 0.55%)</title><rect x="198.0" y="739.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="201.0" y="750.0"></text>
</g>
<g>
<title>org/springframework/util/AntPathMatcher.doMatch (2 samples, 0.55%)</title><rect x="198.0" y="723.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.0" y="734.0"></text>
</g>
<g>
<title>org/springframework/util/AntPathMatcher.tokenizePath (2 samples, 0.55%)</title><rect x="198.0" y="707.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="201.0" y="718.0"></text>
</g>
<g>
<title>org/springframework/util/StringUtils.tokenizeToStringArray (2 samples, 0.55%)</title><rect x="198.0" y="691.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.0" y="702.0"></text>
</g>
<g>
<title>java/util/StringTokenizer.nextToken (2 samples, 0.55%)</title><rect x="198.0" y="675.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.55%)</title><rect x="198.0" y="659.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="201.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.55%)</title><rect x="198.0" y="643.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="201.0" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.55%)</title><rect x="198.0" y="627.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="201.0" y="638.0"></text>
</g>
<g>
<title>new_type_array Runtime1 stub (2 samples, 0.55%)</title><rect x="198.0" y="611.0" width="6.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="201.0" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.writeAndFlush (2 samples, 0.55%)</title><rect x="204.5" y="755.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.5" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.writeAndFlush (2 samples, 0.55%)</title><rect x="204.5" y="739.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.5" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (2 samples, 0.55%)</title><rect x="204.5" y="723.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="207.5" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (2 samples, 0.55%)</title><rect x="204.5" y="707.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.5" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (2 samples, 0.55%)</title><rect x="204.5" y="691.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="207.5" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.safeExecute (2 samples, 0.55%)</title><rect x="204.5" y="675.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="207.5" y="686.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (2 samples, 0.55%)</title><rect x="204.5" y="659.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.5" y="670.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (2 samples, 0.55%)</title><rect x="204.5" y="643.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.5" y="654.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (2 samples, 0.55%)</title><rect x="204.5" y="627.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.5" y="638.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.handleException (1 samples, 0.27%)</title><rect x="204.5" y="611.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="207.5" y="622.0"></text>
</g>
<g>
<title>fast_new_instance Runtime1 stub (1 samples, 0.27%)</title><rect x="204.5" y="595.0" width="3.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="207.5" y="606.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.processQueue (1 samples, 0.27%)</title><rect x="207.7" y="611.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="210.7" y="622.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.27%)</title><rect x="207.7" y="595.0" width="3.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="210.7" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.27%)</title><rect x="207.7" y="579.0" width="3.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="210.7" y="590.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.27%)</title><rect x="207.7" y="563.0" width="3.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="210.7" y="574.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.27%)</title><rect x="207.7" y="547.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="210.7" y="558.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.27%)</title><rect x="207.7" y="531.0" width="3.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="210.7" y="542.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaServletOutputStream.flush (4 samples, 1.10%)</title><rect x="211.0" y="819.0" width="13.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="214.0" y="830.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaHttpServletResponse.setResponseBasicHeader (1 samples, 0.27%)</title><rect x="211.0" y="803.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="214.0" y="814.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaHttpServletResponse.getFormattedDate (1 samples, 0.27%)</title><rect x="211.0" y="787.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="214.0" y="798.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (1 samples, 0.27%)</title><rect x="211.0" y="771.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.0" y="782.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.get (1 samples, 0.27%)</title><rect x="211.0" y="755.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.0" y="766.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocal.initialize (1 samples, 0.27%)</title><rect x="211.0" y="739.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.0" y="750.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaHttpServletResponse$1.initialValue (1 samples, 0.27%)</title><rect x="211.0" y="723.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="214.0" y="734.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaHttpServletResponse$1.initialValue (1 samples, 0.27%)</title><rect x="211.0" y="707.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.0" y="718.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.&lt;init&gt; (1 samples, 0.27%)</title><rect x="211.0" y="691.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.0" y="702.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.initializeCalendar (1 samples, 0.27%)</title><rect x="211.0" y="675.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.0" y="686.0"></text>
</g>
<g>
<title>java/util/Calendar.getInstance (1 samples, 0.27%)</title><rect x="211.0" y="659.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="214.0" y="670.0"></text>
</g>
<g>
<title>java/util/Calendar.createCalendar (1 samples, 0.27%)</title><rect x="211.0" y="643.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="214.0" y="654.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.27%)</title><rect x="211.0" y="627.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="214.0" y="638.0"></text>
</g>
<g>
<title>InterpreterRuntime::method(JavaThread*) (1 samples, 0.27%)</title><rect x="211.0" y="611.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="214.0" y="622.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.27%)</title><rect x="211.0" y="595.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="214.0" y="606.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.27%)</title><rect x="211.0" y="579.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="214.0" y="590.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.27%)</title><rect x="211.0" y="563.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="214.0" y="574.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.27%)</title><rect x="211.0" y="547.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="214.0" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.channel (1 samples, 0.27%)</title><rect x="214.2" y="803.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="217.2" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.flush (1 samples, 0.27%)</title><rect x="217.5" y="803.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="220.5" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundHandlerAdapter.flush (1 samples, 0.27%)</title><rect x="217.5" y="787.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="220.5" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush (1 samples, 0.27%)</title><rect x="217.5" y="771.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="220.5" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (1 samples, 0.27%)</title><rect x="217.5" y="755.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.5" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.safeExecute (1 samples, 0.27%)</title><rect x="217.5" y="739.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="220.5" y="750.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (1 samples, 0.27%)</title><rect x="217.5" y="723.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="220.5" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.wakeup (1 samples, 0.27%)</title><rect x="217.5" y="707.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="220.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (1 samples, 0.27%)</title><rect x="217.5" y="691.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="220.5" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.interrupt (1 samples, 0.27%)</title><rect x="217.5" y="675.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="220.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.interrupt (1 samples, 0.27%)</title><rect x="217.5" y="659.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="220.5" y="670.0"></text>
</g>
<g>
<title>write (1 samples, 0.27%)</title><rect x="217.5" y="643.0" width="3.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="220.5" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.write (1 samples, 0.27%)</title><rect x="220.7" y="803.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="223.7" y="814.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (1 samples, 0.27%)</title><rect x="220.7" y="787.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="223.7" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.write (1 samples, 0.27%)</title><rect x="220.7" y="771.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.7" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.27%)</title><rect x="220.7" y="755.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="223.7" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.27%)</title><rect x="220.7" y="739.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.7" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.safeExecute (1 samples, 0.27%)</title><rect x="220.7" y="723.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="223.7" y="734.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (1 samples, 0.27%)</title><rect x="220.7" y="707.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="223.7" y="718.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (1 samples, 0.27%)</title><rect x="220.7" y="691.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="223.7" y="702.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (1 samples, 0.27%)</title><rect x="220.7" y="675.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="223.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.27%)</title><rect x="220.7" y="659.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="223.7" y="670.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.27%)</title><rect x="220.7" y="643.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.7" y="654.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.27%)</title><rect x="220.7" y="627.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="223.7" y="638.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.27%)</title><rect x="220.7" y="611.0" width="3.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="223.7" y="622.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.27%)</title><rect x="220.7" y="595.0" width="3.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="223.7" y="606.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (1 samples, 0.27%)</title><rect x="220.7" y="579.0" width="3.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="223.7" y="590.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (1 samples, 0.27%)</title><rect x="220.7" y="563.0" width="3.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="223.7" y="574.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.27%)</title><rect x="220.7" y="547.0" width="3.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="223.7" y="558.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.27%)</title><rect x="220.7" y="531.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="223.7" y="542.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.takeTask (14 samples, 3.85%)</title><rect x="224.0" y="915.0" width="45.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.0" y="926.0">io/n..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (14 samples, 3.85%)</title><rect x="224.0" y="899.0" width="45.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.0" y="910.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 3.85%)</title><rect x="224.0" y="883.0" width="45.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="227.0" y="894.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (1 samples, 0.27%)</title><rect x="224.0" y="867.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="227.0" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.27%)</title><rect x="224.0" y="851.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="227.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (13 samples, 3.57%)</title><rect x="227.2" y="867.0" width="42.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="230.2" y="878.0">java..</text>
</g>
<g>
<title>sun/misc/Unsafe.park (13 samples, 3.57%)</title><rect x="227.2" y="851.0" width="42.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.2" y="862.0">sun/..</text>
</g>
<g>
<title>Unsafe_Park (13 samples, 3.57%)</title><rect x="227.2" y="835.0" width="42.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="230.2" y="846.0">Unsa..</text>
</g>
<g>
<title>Parker::park(bool, long) (13 samples, 3.57%)</title><rect x="227.2" y="819.0" width="42.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="230.2" y="830.0">Park..</text>
</g>
<g>
<title>JavaThread::handle_special_suspend_equivalent_condition() (1 samples, 0.27%)</title><rect x="227.2" y="803.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="230.2" y="814.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.27%)</title><rect x="227.2" y="787.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="230.2" y="798.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.27%)</title><rect x="227.2" y="771.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="230.2" y="782.0"></text>
</g>
<g>
<title>Monitor::TryFast() (1 samples, 0.27%)</title><rect x="227.2" y="755.0" width="3.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="230.2" y="766.0"></text>
</g>
<g>
<title>__psynch_cvwait (12 samples, 3.30%)</title><rect x="230.4" y="803.0" width="38.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="233.4" y="814.0">__p..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.run (116 samples, 31.87%)</title><rect x="269.3" y="931.0" width="376.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="272.3" y="942.0">io/netty/channel/nio/NioEventLoop.run</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeys (43 samples, 11.81%)</title><rect x="275.8" y="915.0" width="139.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="278.8" y="926.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized (43 samples, 11.81%)</title><rect x="275.8" y="899.0" width="139.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.8" y="910.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.processSelectedKey (43 samples, 11.81%)</title><rect x="275.8" y="883.0" width="139.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="278.8" y="894.0">io/netty/channel/..</text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read (37 samples, 10.16%)</title><rect x="275.8" y="867.0" width="120.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="278.8" y="878.0">io/netty/channe..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (32 samples, 8.79%)</title><rect x="275.8" y="851.0" width="103.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="278.8" y="862.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (32 samples, 8.79%)</title><rect x="275.8" y="835.0" width="103.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="278.8" y="846.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (32 samples, 8.79%)</title><rect x="275.8" y="819.0" width="103.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="278.8" y="830.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (32 samples, 8.79%)</title><rect x="275.8" y="803.0" width="103.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="278.8" y="814.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (32 samples, 8.79%)</title><rect x="275.8" y="787.0" width="103.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="278.8" y="798.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (32 samples, 8.79%)</title><rect x="275.8" y="771.0" width="103.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="278.8" y="782.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (32 samples, 8.79%)</title><rect x="275.8" y="755.0" width="103.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="278.8" y="766.0">io/netty/cha..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelRead (23 samples, 6.32%)</title><rect x="275.8" y="739.0" width="74.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="278.8" y="750.0">io/netty..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (23 samples, 6.32%)</title><rect x="275.8" y="723.0" width="74.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="278.8" y="734.0">io/netty..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.callDecode (1 samples, 0.27%)</title><rect x="275.8" y="707.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="278.8" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.decode (1 samples, 0.27%)</title><rect x="275.8" y="691.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="278.8" y="702.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder.readHeaders (1 samples, 0.27%)</title><rect x="275.8" y="675.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="278.8" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder$HeaderParser.parse (1 samples, 0.27%)</title><rect x="275.8" y="659.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="278.8" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/WrappedByteBuf.forEachByte (1 samples, 0.27%)</title><rect x="275.8" y="643.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="278.8" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.forEachByte (1 samples, 0.27%)</title><rect x="275.8" y="627.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="278.8" y="638.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.forEachByteAsc0 (1 samples, 0.27%)</title><rect x="275.8" y="611.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="278.8" y="622.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectDecoder$HeaderParser.process (1 samples, 0.27%)</title><rect x="275.8" y="595.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="278.8" y="606.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (22 samples, 6.04%)</title><rect x="279.1" y="707.0" width="71.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="282.1" y="718.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead (22 samples, 6.04%)</title><rect x="279.1" y="691.0" width="71.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.1" y="702.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (22 samples, 6.04%)</title><rect x="279.1" y="675.0" width="71.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="282.1" y="686.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (22 samples, 6.04%)</title><rect x="279.1" y="659.0" width="71.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="282.1" y="670.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (22 samples, 6.04%)</title><rect x="279.1" y="643.0" width="71.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.1" y="654.0">io/netty..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (22 samples, 6.04%)</title><rect x="279.1" y="627.0" width="71.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="282.1" y="638.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (22 samples, 6.04%)</title><rect x="279.1" y="611.0" width="71.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="282.1" y="622.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (22 samples, 6.04%)</title><rect x="279.1" y="595.0" width="71.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="282.1" y="606.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (22 samples, 6.04%)</title><rect x="279.1" y="579.0" width="71.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.1" y="590.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelRead (22 samples, 6.04%)</title><rect x="279.1" y="563.0" width="71.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.1" y="574.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (22 samples, 6.04%)</title><rect x="279.1" y="547.0" width="71.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="282.1" y="558.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (22 samples, 6.04%)</title><rect x="279.1" y="531.0" width="71.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.1" y="542.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (22 samples, 6.04%)</title><rect x="279.1" y="515.0" width="71.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="282.1" y="526.0">io/netty..</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (22 samples, 6.04%)</title><rect x="279.1" y="499.0" width="71.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="282.1" y="510.0">io/netty..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/handler/FullHttpRequest2HttpServletHandler.channelRead0 (21 samples, 5.77%)</title><rect x="279.1" y="483.0" width="68.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="282.1" y="494.0">com/tin..</text>
</g>
<g>
<title>com/tinysakura/xhaka/common/handler/FullHttpRequest2HttpServletHandler.channelRead0 (21 samples, 5.77%)</title><rect x="279.1" y="467.0" width="68.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.1" y="478.0">com/tin..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (7 samples, 1.92%)</title><rect x="279.1" y="451.0" width="22.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="282.1" y="462.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (7 samples, 1.92%)</title><rect x="279.1" y="435.0" width="22.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.1" y="446.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (7 samples, 1.92%)</title><rect x="279.1" y="419.0" width="22.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.1" y="430.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (7 samples, 1.92%)</title><rect x="279.1" y="403.0" width="22.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="282.1" y="414.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (7 samples, 1.92%)</title><rect x="279.1" y="387.0" width="22.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.1" y="398.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (7 samples, 1.92%)</title><rect x="279.1" y="371.0" width="22.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.1" y="382.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (7 samples, 1.92%)</title><rect x="279.1" y="355.0" width="22.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="282.1" y="366.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (7 samples, 1.92%)</title><rect x="279.1" y="339.0" width="22.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="282.1" y="350.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (7 samples, 1.92%)</title><rect x="279.1" y="323.0" width="22.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="282.1" y="334.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (5 samples, 1.37%)</title><rect x="279.1" y="307.0" width="16.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="282.1" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (5 samples, 1.37%)</title><rect x="279.1" y="291.0" width="16.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="282.1" y="302.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (5 samples, 1.37%)</title><rect x="279.1" y="275.0" width="16.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="282.1" y="286.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (5 samples, 1.37%)</title><rect x="279.1" y="259.0" width="16.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="282.1" y="270.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (5 samples, 1.37%)</title><rect x="279.1" y="243.0" width="16.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="282.1" y="254.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (5 samples, 1.37%)</title><rect x="279.1" y="227.0" width="16.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="282.1" y="238.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpObjectAggregator$AggregatedFullHttpRequest.toString (4 samples, 1.10%)</title><rect x="279.1" y="211.0" width="12.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.1" y="222.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMessageUtil.appendFullRequest (3 samples, 0.82%)</title><rect x="279.1" y="195.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="282.1" y="206.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMessageUtil.appendFullCommon (2 samples, 0.55%)</title><rect x="279.1" y="179.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="282.1" y="190.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.27%)</title><rect x="282.3" y="163.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="285.3" y="174.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.27%)</title><rect x="282.3" y="147.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="285.3" y="158.0"></text>
</g>
<g>
<title>io/netty/buffer/CompositeByteBuf.toString (1 samples, 0.27%)</title><rect x="282.3" y="131.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="285.3" y="142.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.toString (1 samples, 0.27%)</title><rect x="282.3" y="115.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="285.3" y="126.0"></text>
</g>
<g>
<title>io/netty/util/internal/StringUtil.simpleClassName (1 samples, 0.27%)</title><rect x="282.3" y="99.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="285.3" y="110.0"></text>
</g>
<g>
<title>io/netty/util/internal/StringUtil.simpleClassName (1 samples, 0.27%)</title><rect x="282.3" y="83.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.3" y="94.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.27%)</title><rect x="282.3" y="67.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.3" y="78.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/HttpMessageUtil.appendHeaders (1 samples, 0.27%)</title><rect x="285.5" y="179.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.5" y="190.0"></text>
</g>
<g>
<title>io/netty/handler/codec/HeadersUtils$StringEntryIterator.hasNext (1 samples, 0.27%)</title><rect x="285.5" y="163.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="288.5" y="174.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders$HeaderIterator.hasNext (1 samples, 0.27%)</title><rect x="285.5" y="147.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="288.5" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.27%)</title><rect x="288.8" y="195.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="291.8" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.27%)</title><rect x="288.8" y="179.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.8" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.27%)</title><rect x="288.8" y="163.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="291.8" y="174.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.27%)</title><rect x="288.8" y="147.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="291.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.27%)</title><rect x="292.0" y="211.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.0" y="222.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.27%)</title><rect x="292.0" y="195.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="295.0" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.27%)</title><rect x="292.0" y="179.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.27%)</title><rect x="292.0" y="163.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.0" y="174.0"></text>
</g>
<g>
<title>new_type_array Runtime1 stub (1 samples, 0.27%)</title><rect x="292.0" y="147.0" width="3.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="295.0" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.55%)</title><rect x="295.3" y="307.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.3" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (2 samples, 0.55%)</title><rect x="295.3" y="291.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.3" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (2 samples, 0.55%)</title><rect x="295.3" y="275.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="298.3" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (2 samples, 0.55%)</title><rect x="295.3" y="259.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="298.3" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/FormattingConverter.write (2 samples, 0.55%)</title><rect x="295.3" y="243.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="298.3" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.27%)</title><rect x="295.3" y="227.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="298.3" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/DateConverter.convert (1 samples, 0.27%)</title><rect x="295.3" y="211.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.3" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.27%)</title><rect x="295.3" y="195.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="298.3" y="206.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.27%)</title><rect x="295.3" y="179.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="298.3" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.27%)</title><rect x="295.3" y="163.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="298.3" y="174.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.27%)</title><rect x="295.3" y="147.0" width="3.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="298.3" y="158.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.27%)</title><rect x="295.3" y="131.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="298.3" y="142.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.27%)</title><rect x="295.3" y="115.0" width="3.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="298.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.27%)</title><rect x="298.5" y="227.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="301.5" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.27%)</title><rect x="298.5" y="211.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="301.5" y="222.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/servlet/response/XhakaHttpServletResponse.&lt;init&gt; (13 samples, 3.57%)</title><rect x="301.8" y="451.0" width="42.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.8" y="462.0">com/..</text>
</g>
<g>
<title>java/io/PrintWriter.&lt;init&gt; (13 samples, 3.57%)</title><rect x="301.8" y="435.0" width="42.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.8" y="446.0">java..</text>
</g>
<g>
<title>java/io/PrintWriter.&lt;init&gt; (13 samples, 3.57%)</title><rect x="301.8" y="419.0" width="42.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="304.8" y="430.0">java..</text>
</g>
<g>
<title>java/io/BufferedWriter.&lt;init&gt; (9 samples, 2.47%)</title><rect x="301.8" y="403.0" width="29.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.8" y="414.0">ja..</text>
</g>
<g>
<title>java/io/BufferedWriter.&lt;init&gt; (9 samples, 2.47%)</title><rect x="301.8" y="387.0" width="29.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.8" y="398.0">ja..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.27%)</title><rect x="301.8" y="371.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.8" y="382.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.27%)</title><rect x="301.8" y="355.0" width="3.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="304.8" y="366.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.27%)</title><rect x="301.8" y="339.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="304.8" y="350.0"></text>
</g>
<g>
<title>new_type_array Runtime1 stub (8 samples, 2.20%)</title><rect x="305.0" y="371.0" width="25.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="308.0" y="382.0">n..</text>
</g>
<g>
<title>java/io/OutputStreamWriter.&lt;init&gt; (4 samples, 1.10%)</title><rect x="330.9" y="403.0" width="13.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="333.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.forOutputStreamWriter (4 samples, 1.10%)</title><rect x="330.9" y="387.0" width="13.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="333.9" y="398.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.&lt;init&gt; (4 samples, 1.10%)</title><rect x="330.9" y="371.0" width="13.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="333.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamEncoder.&lt;init&gt; (4 samples, 1.10%)</title><rect x="330.9" y="355.0" width="13.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="333.9" y="366.0"></text>
</g>
<g>
<title>java/io/Writer.&lt;init&gt; (2 samples, 0.55%)</title><rect x="330.9" y="339.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.9" y="350.0"></text>
</g>
<g>
<title>new_type_array Runtime1 stub (2 samples, 0.55%)</title><rect x="330.9" y="323.0" width="6.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="333.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.55%)</title><rect x="337.4" y="339.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.4" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.55%)</title><rect x="337.4" y="323.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.4" y="334.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (1 samples, 0.27%)</title><rect x="343.9" y="451.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="346.9" y="462.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (1 samples, 0.27%)</title><rect x="343.9" y="435.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="346.9" y="446.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (1 samples, 0.27%)</title><rect x="343.9" y="419.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="346.9" y="430.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (1 samples, 0.27%)</title><rect x="343.9" y="403.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="346.9" y="414.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (1 samples, 0.27%)</title><rect x="343.9" y="387.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="346.9" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.27%)</title><rect x="343.9" y="371.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="346.9" y="382.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.27%)</title><rect x="343.9" y="355.0" width="3.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="346.9" y="366.0"></text>
</g>
<g>
<title>io/netty/util/internal/TypeParameterMatcher$ReflectiveMatcher.match (1 samples, 0.27%)</title><rect x="347.1" y="483.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.1" y="494.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (9 samples, 2.47%)</title><rect x="350.4" y="739.0" width="29.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="353.4" y="750.0">io..</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.callDecode (5 samples, 1.37%)</title><rect x="350.4" y="723.0" width="16.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="353.4" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.isReadable (1 samples, 0.27%)</title><rect x="350.4" y="707.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="353.4" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (3 samples, 0.82%)</title><rect x="353.6" y="707.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="356.6" y="718.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (3 samples, 0.82%)</title><rect x="353.6" y="691.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="356.6" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (3 samples, 0.82%)</title><rect x="353.6" y="675.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="356.6" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (3 samples, 0.82%)</title><rect x="353.6" y="659.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="356.6" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (3 samples, 0.82%)</title><rect x="353.6" y="643.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="356.6" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (3 samples, 0.82%)</title><rect x="353.6" y="627.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="356.6" y="638.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (3 samples, 0.82%)</title><rect x="353.6" y="611.0" width="9.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="356.6" y="622.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (3 samples, 0.82%)</title><rect x="353.6" y="595.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="356.6" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.27%)</title><rect x="353.6" y="579.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="356.6" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.27%)</title><rect x="353.6" y="563.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="356.6" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.27%)</title><rect x="353.6" y="547.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="356.6" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.27%)</title><rect x="353.6" y="531.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.6" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.27%)</title><rect x="353.6" y="515.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.6" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.27%)</title><rect x="353.6" y="499.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.6" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.27%)</title><rect x="353.6" y="483.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="356.6" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.27%)</title><rect x="353.6" y="467.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="356.6" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.27%)</title><rect x="353.6" y="451.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="356.6" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.27%)</title><rect x="353.6" y="435.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="356.6" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (1 samples, 0.27%)</title><rect x="353.6" y="419.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="356.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.27%)</title><rect x="353.6" y="403.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="356.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.27%)</title><rect x="353.6" y="387.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.27%)</title><rect x="353.6" y="371.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="356.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (1 samples, 0.27%)</title><rect x="353.6" y="355.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="356.6" y="366.0"></text>
</g>
<g>
<title>new_type_array Runtime1 stub (1 samples, 0.27%)</title><rect x="353.6" y="339.0" width="3.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="356.6" y="350.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (2 samples, 0.55%)</title><rect x="356.9" y="579.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="359.9" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 0.55%)</title><rect x="356.9" y="563.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.9" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 0.55%)</title><rect x="356.9" y="547.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="359.9" y="558.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (2 samples, 0.55%)</title><rect x="356.9" y="531.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="359.9" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (2 samples, 0.55%)</title><rect x="356.9" y="515.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="359.9" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 0.55%)</title><rect x="356.9" y="499.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="359.9" y="510.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 0.55%)</title><rect x="356.9" y="483.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="359.9" y="494.0"></text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (2 samples, 0.55%)</title><rect x="356.9" y="467.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="359.9" y="478.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/SlaveXhakaHttpServletResponsehHandler.channelRead0 (2 samples, 0.55%)</title><rect x="356.9" y="451.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="359.9" y="462.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/SlaveXhakaHttpServletResponsehHandler.channelRead0 (2 samples, 0.55%)</title><rect x="356.9" y="435.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="359.9" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.27%)</title><rect x="356.9" y="419.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.9" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (1 samples, 0.27%)</title><rect x="356.9" y="403.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="359.9" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.27%)</title><rect x="356.9" y="387.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="359.9" y="398.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.received (1 samples, 0.27%)</title><rect x="360.1" y="419.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="363.1" y="430.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.doReceived (1 samples, 0.27%)</title><rect x="360.1" y="403.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="363.1" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.27%)</title><rect x="360.1" y="387.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="363.1" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (1 samples, 0.27%)</title><rect x="360.1" y="371.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="363.1" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.27%)</title><rect x="360.1" y="355.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="363.1" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.27%)</title><rect x="360.1" y="339.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.1" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.27%)</title><rect x="360.1" y="323.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="363.1" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.27%)</title><rect x="360.1" y="307.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="363.1" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.27%)</title><rect x="360.1" y="291.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="363.1" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.27%)</title><rect x="360.1" y="275.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="363.1" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.27%)</title><rect x="360.1" y="259.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="363.1" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.27%)</title><rect x="360.1" y="243.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="363.1" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.27%)</title><rect x="360.1" y="227.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="363.1" y="238.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.27%)</title><rect x="360.1" y="211.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="363.1" y="222.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.27%)</title><rect x="360.1" y="195.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.1" y="206.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (1 samples, 0.27%)</title><rect x="360.1" y="179.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="363.1" y="190.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.27%)</title><rect x="360.1" y="163.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="363.1" y="174.0"></text>
</g>
<g>
<title>java/lang/Long.toString (1 samples, 0.27%)</title><rect x="360.1" y="147.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="363.1" y="158.0"></text>
</g>
<g>
<title>java/lang/Long.toString (1 samples, 0.27%)</title><rect x="360.1" y="131.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.1" y="142.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (1 samples, 0.27%)</title><rect x="360.1" y="115.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="363.1" y="126.0"></text>
</g>
<g>
<title>io/netty/handler/codec/LengthFieldBasedFrameDecoder.decode (1 samples, 0.27%)</title><rect x="363.4" y="707.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="366.4" y="718.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/XhakaDecoder.decode (1 samples, 0.27%)</title><rect x="363.4" y="691.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="366.4" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.27%)</title><rect x="363.4" y="675.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.4" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.27%)</title><rect x="363.4" y="659.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="366.4" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.27%)</title><rect x="363.4" y="643.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="366.4" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.27%)</title><rect x="363.4" y="627.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.4" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.27%)</title><rect x="363.4" y="611.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="366.4" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.27%)</title><rect x="363.4" y="595.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="366.4" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.27%)</title><rect x="363.4" y="579.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="366.4" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.27%)</title><rect x="363.4" y="563.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.4" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.27%)</title><rect x="363.4" y="547.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="366.4" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.27%)</title><rect x="363.4" y="531.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="366.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.27%)</title><rect x="363.4" y="515.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="366.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (1 samples, 0.27%)</title><rect x="363.4" y="499.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="366.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.27%)</title><rect x="363.4" y="483.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="366.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.27%)</title><rect x="363.4" y="467.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="366.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.27%)</title><rect x="363.4" y="451.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="366.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.27%)</title><rect x="363.4" y="435.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="366.4" y="446.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.27%)</title><rect x="363.4" y="419.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="366.4" y="430.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.27%)</title><rect x="363.4" y="403.0" width="3.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="366.4" y="414.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.27%)</title><rect x="363.4" y="387.0" width="3.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="366.4" y="398.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.27%)</title><rect x="363.4" y="371.0" width="3.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="366.4" y="382.0"></text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (4 samples, 1.10%)</title><rect x="366.6" y="723.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="369.6" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (4 samples, 1.10%)</title><rect x="366.6" y="707.0" width="13.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="369.6" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (4 samples, 1.10%)</title><rect x="366.6" y="691.0" width="13.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="369.6" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (4 samples, 1.10%)</title><rect x="366.6" y="675.0" width="13.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="369.6" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (4 samples, 1.10%)</title><rect x="366.6" y="659.0" width="13.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="369.6" y="670.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (4 samples, 1.10%)</title><rect x="366.6" y="643.0" width="13.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="369.6" y="654.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/XhakaProtocolHandler.channelRead0 (4 samples, 1.10%)</title><rect x="366.6" y="627.0" width="13.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="369.6" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.27%)</title><rect x="366.6" y="611.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="369.6" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.27%)</title><rect x="366.6" y="595.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="369.6" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.27%)</title><rect x="366.6" y="579.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="369.6" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.27%)</title><rect x="366.6" y="563.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="369.6" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.27%)</title><rect x="366.6" y="547.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="369.6" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.27%)</title><rect x="366.6" y="531.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="369.6" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.27%)</title><rect x="366.6" y="515.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="369.6" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.27%)</title><rect x="366.6" y="499.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="369.6" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.27%)</title><rect x="366.6" y="483.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="369.6" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.27%)</title><rect x="366.6" y="467.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="369.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.27%)</title><rect x="366.6" y="451.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="369.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (1 samples, 0.27%)</title><rect x="366.6" y="435.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="369.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.27%)</title><rect x="366.6" y="419.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.27%)</title><rect x="366.6" y="403.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="369.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.27%)</title><rect x="366.6" y="387.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="369.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.27%)</title><rect x="366.6" y="371.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="369.6" y="382.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.27%)</title><rect x="366.6" y="355.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="369.6" y="366.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.27%)</title><rect x="366.6" y="339.0" width="3.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="369.6" y="350.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.27%)</title><rect x="366.6" y="323.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="369.6" y="334.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.27%)</title><rect x="366.6" y="307.0" width="3.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="369.6" y="318.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (3 samples, 0.82%)</title><rect x="369.8" y="611.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="372.8" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (3 samples, 0.82%)</title><rect x="369.8" y="595.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="372.8" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (3 samples, 0.82%)</title><rect x="369.8" y="579.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="372.8" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (3 samples, 0.82%)</title><rect x="369.8" y="563.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="372.8" y="574.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/Xhaka2FullHttpResponseDecoder.decode (1 samples, 0.27%)</title><rect x="369.8" y="547.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="372.8" y="558.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/Xhaka2FullHttpResponseDecoder.decode (1 samples, 0.27%)</title><rect x="369.8" y="531.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.8" y="542.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpResponseProtobufTypeSerialize.deserialize (1 samples, 0.27%)</title><rect x="369.8" y="515.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="372.8" y="526.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpResponseProtobufTypeSerialize.deserialize (1 samples, 0.27%)</title><rect x="369.8" y="499.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="372.8" y="510.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders.add (1 samples, 0.27%)</title><rect x="369.8" y="483.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.8" y="494.0"></text>
</g>
<g>
<title>io/netty/handler/codec/DefaultHeaders.addObject (1 samples, 0.27%)</title><rect x="369.8" y="467.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="372.8" y="478.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (1 samples, 0.27%)</title><rect x="369.8" y="451.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="372.8" y="462.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.convertObject (1 samples, 0.27%)</title><rect x="369.8" y="435.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.8" y="446.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/DefaultHttpHeaders$HeaderValueConverterAndValidator.validateValueChar (1 samples, 0.27%)</title><rect x="369.8" y="419.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="372.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.27%)</title><rect x="369.8" y="403.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="372.8" y="414.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (2 samples, 0.55%)</title><rect x="373.1" y="547.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="376.1" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 0.55%)</title><rect x="373.1" y="531.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="376.1" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (2 samples, 0.55%)</title><rect x="373.1" y="515.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="376.1" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (2 samples, 0.55%)</title><rect x="373.1" y="499.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.1" y="510.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/SlaveXhakaHttpServletResponsehHandler.channelRead0 (2 samples, 0.55%)</title><rect x="373.1" y="483.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.1" y="494.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/SlaveXhakaHttpServletResponsehHandler.channelRead0 (2 samples, 0.55%)</title><rect x="373.1" y="467.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="376.1" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.27%)</title><rect x="373.1" y="451.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="376.1" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (1 samples, 0.27%)</title><rect x="373.1" y="435.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.1" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.27%)</title><rect x="373.1" y="419.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="376.1" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.27%)</title><rect x="373.1" y="403.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="376.1" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.27%)</title><rect x="373.1" y="387.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="376.1" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.27%)</title><rect x="373.1" y="371.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.1" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.27%)</title><rect x="373.1" y="355.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="376.1" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.27%)</title><rect x="373.1" y="339.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="376.1" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.27%)</title><rect x="373.1" y="323.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="376.1" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (1 samples, 0.27%)</title><rect x="373.1" y="307.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="376.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.27%)</title><rect x="373.1" y="291.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="376.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.lock (1 samples, 0.27%)</title><rect x="373.1" y="275.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.27%)</title><rect x="373.1" y="259.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="376.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.27%)</title><rect x="373.1" y="243.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.27%)</title><rect x="373.1" y="227.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="376.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.27%)</title><rect x="373.1" y="211.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="376.1" y="222.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.park (1 samples, 0.27%)</title><rect x="373.1" y="195.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="376.1" y="206.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.27%)</title><rect x="373.1" y="179.0" width="3.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="376.1" y="190.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.27%)</title><rect x="373.1" y="163.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="376.1" y="174.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.27%)</title><rect x="373.1" y="147.0" width="3.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="376.1" y="158.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/future/XhakaFuture.received (1 samples, 0.27%)</title><rect x="376.3" y="451.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.3" y="462.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.27%)</title><rect x="376.3" y="435.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="379.3" y="446.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.27%)</title><rect x="376.3" y="419.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="379.3" y="430.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.27%)</title><rect x="376.3" y="403.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="379.3" y="414.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelReadComplete (2 samples, 0.55%)</title><rect x="379.6" y="851.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="382.6" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (2 samples, 0.55%)</title><rect x="379.6" y="835.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="382.6" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelReadComplete (2 samples, 0.55%)</title><rect x="379.6" y="819.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.6" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelReadComplete (2 samples, 0.55%)</title><rect x="379.6" y="803.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.6" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.readIfIsAutoRead (2 samples, 0.55%)</title><rect x="379.6" y="787.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.6" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.read (2 samples, 0.55%)</title><rect x="379.6" y="771.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.6" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.read (2 samples, 0.55%)</title><rect x="379.6" y="755.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.6" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.read (1 samples, 0.27%)</title><rect x="379.6" y="739.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="382.6" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeRead (1 samples, 0.27%)</title><rect x="379.6" y="723.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.6" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelDuplexHandler.read (1 samples, 0.27%)</title><rect x="379.6" y="707.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.6" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.read (1 samples, 0.27%)</title><rect x="379.6" y="691.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="382.6" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeRead (1 samples, 0.27%)</title><rect x="379.6" y="675.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.6" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.read (1 samples, 0.27%)</title><rect x="379.6" y="659.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.6" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundHandlerAdapter.read (1 samples, 0.27%)</title><rect x="379.6" y="643.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.6" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.read (1 samples, 0.27%)</title><rect x="379.6" y="627.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="382.6" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.read (1 samples, 0.27%)</title><rect x="379.6" y="611.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.6" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeRead (1 samples, 0.27%)</title><rect x="379.6" y="595.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="382.6" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.read (1 samples, 0.27%)</title><rect x="379.6" y="579.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.6" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.beginRead (1 samples, 0.27%)</title><rect x="379.6" y="563.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="382.6" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioChannel.doBeginRead (1 samples, 0.27%)</title><rect x="379.6" y="547.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="382.6" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.config (1 samples, 0.27%)</title><rect x="382.8" y="739.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.8" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.allocate (1 samples, 0.27%)</title><rect x="386.0" y="851.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="389.0" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.ioBuffer (1 samples, 0.27%)</title><rect x="386.0" y="835.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="389.0" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.27%)</title><rect x="386.0" y="819.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="389.0" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.27%)</title><rect x="386.0" y="803.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.0" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1 samples, 0.27%)</title><rect x="386.0" y="787.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="389.0" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.27%)</title><rect x="386.0" y="771.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="389.0" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (1 samples, 0.27%)</title><rect x="386.0" y="755.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="389.0" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (1 samples, 0.27%)</title><rect x="386.0" y="739.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="389.0" y="750.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 0.27%)</title><rect x="386.0" y="723.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="389.0" y="734.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.pop (1 samples, 0.27%)</title><rect x="386.0" y="707.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="389.0" y="718.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.scavenge (1 samples, 0.27%)</title><rect x="386.0" y="691.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.0" y="702.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$Stack.scavengeSome (1 samples, 0.27%)</title><rect x="386.0" y="675.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="389.0" y="686.0"></text>
</g>
<g>
<title>io/netty/util/Recycler$WeakOrderQueue.transfer (1 samples, 0.27%)</title><rect x="386.0" y="659.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="389.0" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.closeOnRead (1 samples, 0.27%)</title><rect x="389.3" y="851.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="392.3" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.close (1 samples, 0.27%)</title><rect x="389.3" y="835.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="392.3" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.close (1 samples, 0.27%)</title><rect x="389.3" y="819.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="392.3" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.doClose0 (1 samples, 0.27%)</title><rect x="389.3" y="803.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.3" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doClose (1 samples, 0.27%)</title><rect x="389.3" y="787.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="392.3" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (1 samples, 0.27%)</title><rect x="389.3" y="771.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="392.3" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (1 samples, 0.27%)</title><rect x="389.3" y="755.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="392.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (1 samples, 0.27%)</title><rect x="389.3" y="739.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="392.3" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.preClose (1 samples, 0.27%)</title><rect x="389.3" y="723.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="392.3" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.preClose0 (1 samples, 0.27%)</title><rect x="389.3" y="707.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="392.3" y="718.0"></text>
</g>
<g>
<title>dup2 (1 samples, 0.27%)</title><rect x="389.3" y="691.0" width="3.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="392.3" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.doReadBytes (1 samples, 0.27%)</title><rect x="392.5" y="851.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="395.5" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBuf.writeBytes (1 samples, 0.27%)</title><rect x="392.5" y="835.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.5" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.setBytes (1 samples, 0.27%)</title><rect x="392.5" y="819.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="395.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (1 samples, 0.27%)</title><rect x="392.5" y="803.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.27%)</title><rect x="392.5" y="787.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.27%)</title><rect x="392.5" y="771.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (1 samples, 0.27%)</title><rect x="392.5" y="755.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="395.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (1 samples, 0.27%)</title><rect x="392.5" y="739.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="395.5" y="750.0"></text>
</g>
<g>
<title>read (1 samples, 0.27%)</title><rect x="392.5" y="723.0" width="3.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="395.5" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/nio/AbstractNioMessageChannel$NioMessageUnsafe.read (6 samples, 1.65%)</title><rect x="395.8" y="867.0" width="19.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="398.8" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (4 samples, 1.10%)</title><rect x="395.8" y="851.0" width="12.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.8" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (4 samples, 1.10%)</title><rect x="395.8" y="835.0" width="12.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="398.8" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (4 samples, 1.10%)</title><rect x="395.8" y="819.0" width="12.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="398.8" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (4 samples, 1.10%)</title><rect x="395.8" y="803.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="398.8" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (4 samples, 1.10%)</title><rect x="395.8" y="787.0" width="12.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="398.8" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (4 samples, 1.10%)</title><rect x="395.8" y="771.0" width="12.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="398.8" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (4 samples, 1.10%)</title><rect x="395.8" y="755.0" width="12.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="398.8" y="766.0"></text>
</g>
<g>
<title>io/netty/bootstrap/ServerBootstrap$ServerBootstrapAcceptor.channelRead (4 samples, 1.10%)</title><rect x="395.8" y="739.0" width="12.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="398.8" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/MultithreadEventLoopGroup.register (4 samples, 1.10%)</title><rect x="395.8" y="723.0" width="12.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="398.8" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/SingleThreadEventLoop.register (4 samples, 1.10%)</title><rect x="395.8" y="707.0" width="12.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="398.8" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/SingleThreadEventLoop.register (4 samples, 1.10%)</title><rect x="395.8" y="691.0" width="12.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="398.8" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.register (4 samples, 1.10%)</title><rect x="395.8" y="675.0" width="12.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="398.8" y="686.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (4 samples, 1.10%)</title><rect x="395.8" y="659.0" width="12.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.8" y="670.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (4 samples, 1.10%)</title><rect x="395.8" y="643.0" width="12.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="398.8" y="654.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (4 samples, 1.10%)</title><rect x="395.8" y="627.0" width="12.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="398.8" y="638.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.27%)</title><rect x="395.8" y="611.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="398.8" y="622.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.27%)</title><rect x="395.8" y="595.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.8" y="606.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.27%)</title><rect x="395.8" y="579.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="398.8" y="590.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.27%)</title><rect x="395.8" y="563.0" width="3.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="398.8" y="574.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.27%)</title><rect x="395.8" y="547.0" width="3.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="398.8" y="558.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (1 samples, 0.27%)</title><rect x="395.8" y="531.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="398.8" y="542.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (1 samples, 0.27%)</title><rect x="395.8" y="515.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="398.8" y="526.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (1 samples, 0.27%)</title><rect x="395.8" y="499.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="398.8" y="510.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.27%)</title><rect x="395.8" y="483.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="398.8" y="494.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.27%)</title><rect x="395.8" y="467.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="398.8" y="478.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(KlassHandle, int, int, Thread*) (1 samples, 0.27%)</title><rect x="395.8" y="451.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="398.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (3 samples, 0.82%)</title><rect x="399.0" y="611.0" width="9.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (3 samples, 0.82%)</title><rect x="399.0" y="595.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="402.0" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioServerSocketChannel.doReadMessages (2 samples, 0.55%)</title><rect x="408.7" y="851.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.7" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel.&lt;init&gt; (1 samples, 0.27%)</title><rect x="408.7" y="835.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.7" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelConfig.&lt;init&gt; (1 samples, 0.27%)</title><rect x="408.7" y="819.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.7" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelConfig.&lt;init&gt; (1 samples, 0.27%)</title><rect x="408.7" y="803.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.7" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/socket/DefaultSocketChannelConfig.&lt;init&gt; (1 samples, 0.27%)</title><rect x="408.7" y="787.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="411.7" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelConfig.&lt;init&gt; (1 samples, 0.27%)</title><rect x="408.7" y="771.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="411.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (1 samples, 0.27%)</title><rect x="412.0" y="835.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="415.0" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (1 samples, 0.27%)</title><rect x="412.0" y="819.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="415.0" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localAddress (1 samples, 0.27%)</title><rect x="412.0" y="803.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="415.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localPort (1 samples, 0.27%)</title><rect x="412.0" y="787.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="415.0" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/nio/NioEventLoop.select (58 samples, 15.93%)</title><rect x="415.2" y="915.0" width="188.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="418.2" y="926.0">io/netty/channel/nio/Nio..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (58 samples, 15.93%)</title><rect x="415.2" y="899.0" width="188.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="418.2" y="910.0">sun/nio/ch/SelectorImpl...</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (58 samples, 15.93%)</title><rect x="415.2" y="883.0" width="188.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="418.2" y="894.0">sun/nio/ch/SelectorImpl...</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (58 samples, 15.93%)</title><rect x="415.2" y="867.0" width="188.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="418.2" y="878.0">sun/nio/ch/KQueueSelecto..</text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.poll (58 samples, 15.93%)</title><rect x="415.2" y="851.0" width="188.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="418.2" y="862.0">sun/nio/ch/KQueueArrayWr..</text>
</g>
<g>
<title>sun/nio/ch/KQueueArrayWrapper.kevent0 (58 samples, 15.93%)</title><rect x="415.2" y="835.0" width="188.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="418.2" y="846.0">sun/nio/ch/KQueueArrayWr..</text>
</g>
<g>
<title>kevent (58 samples, 15.93%)</title><rect x="415.2" y="819.0" width="188.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="418.2" y="830.0">kevent</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.runAllTasks (13 samples, 3.57%)</title><rect x="603.2" y="915.0" width="42.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.2" y="926.0">io/n..</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.safeExecute (13 samples, 3.57%)</title><rect x="603.2" y="899.0" width="42.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.2" y="910.0">io/n..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe$1.run (6 samples, 1.65%)</title><rect x="603.2" y="883.0" width="19.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.2" y="894.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.access$200 (6 samples, 1.65%)</title><rect x="603.2" y="867.0" width="19.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.2" y="878.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.register0 (6 samples, 1.65%)</title><rect x="603.2" y="851.0" width="19.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.2" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelActive (1 samples, 0.27%)</title><rect x="603.2" y="835.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.2" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (1 samples, 0.27%)</title><rect x="603.2" y="819.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.2" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (1 samples, 0.27%)</title><rect x="603.2" y="803.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.2" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelActive (1 samples, 0.27%)</title><rect x="603.2" y="787.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.2" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelActive (1 samples, 0.27%)</title><rect x="603.2" y="771.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.2" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (1 samples, 0.27%)</title><rect x="603.2" y="755.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.2" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (1 samples, 0.27%)</title><rect x="603.2" y="739.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.2" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelActive (1 samples, 0.27%)</title><rect x="603.2" y="723.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="606.2" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelActive (1 samples, 0.27%)</title><rect x="603.2" y="707.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.2" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelActive (1 samples, 0.27%)</title><rect x="603.2" y="691.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.2" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelActive (1 samples, 0.27%)</title><rect x="603.2" y="675.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.2" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (1 samples, 0.27%)</title><rect x="603.2" y="659.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.2" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (1 samples, 0.27%)</title><rect x="603.2" y="643.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.2" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelActive (1 samples, 0.27%)</title><rect x="603.2" y="627.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.2" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelActive (1 samples, 0.27%)</title><rect x="603.2" y="611.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.2" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (1 samples, 0.27%)</title><rect x="603.2" y="595.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.2" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (1 samples, 0.27%)</title><rect x="603.2" y="579.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.2" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelActive (1 samples, 0.27%)</title><rect x="603.2" y="563.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.2" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelActive (1 samples, 0.27%)</title><rect x="603.2" y="547.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.2" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (1 samples, 0.27%)</title><rect x="603.2" y="531.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="606.2" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (1 samples, 0.27%)</title><rect x="603.2" y="515.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.2" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelActive (1 samples, 0.27%)</title><rect x="603.2" y="499.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.2" y="510.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelActive (1 samples, 0.27%)</title><rect x="603.2" y="483.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="606.2" y="494.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelActive (1 samples, 0.27%)</title><rect x="603.2" y="467.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="606.2" y="478.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (1 samples, 0.27%)</title><rect x="603.2" y="451.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.2" y="462.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (1 samples, 0.27%)</title><rect x="603.2" y="435.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.2" y="446.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (1 samples, 0.27%)</title><rect x="603.2" y="419.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="606.2" y="430.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.27%)</title><rect x="603.2" y="403.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.2" y="414.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.27%)</title><rect x="603.2" y="387.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.27%)</title><rect x="603.2" y="371.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.2" y="382.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.27%)</title><rect x="603.2" y="355.0" width="3.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="606.2" y="366.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.27%)</title><rect x="603.2" y="339.0" width="3.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="606.2" y="350.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (1 samples, 0.27%)</title><rect x="603.2" y="323.0" width="3.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="606.2" y="334.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle, Thread*) (1 samples, 0.27%)</title><rect x="603.2" y="307.0" width="3.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="606.2" y="318.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRegistered (5 samples, 1.37%)</title><rect x="606.5" y="835.0" width="16.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.5" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (5 samples, 1.37%)</title><rect x="606.5" y="819.0" width="16.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="609.5" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (5 samples, 1.37%)</title><rect x="606.5" y="803.0" width="16.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="609.5" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRegistered (5 samples, 1.37%)</title><rect x="606.5" y="787.0" width="16.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="609.5" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRegistered (5 samples, 1.37%)</title><rect x="606.5" y="771.0" width="16.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="609.5" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (5 samples, 1.37%)</title><rect x="606.5" y="755.0" width="16.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="609.5" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (5 samples, 1.37%)</title><rect x="606.5" y="739.0" width="16.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.5" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInitializer.channelRegistered (5 samples, 1.37%)</title><rect x="606.5" y="723.0" width="16.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.5" y="734.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/server/bootstrap/XhakaWebServer$1.initChannel (3 samples, 0.82%)</title><rect x="606.5" y="707.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.5" y="718.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/server/bootstrap/XhakaWebServer$1.initChannel (3 samples, 0.82%)</title><rect x="606.5" y="691.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.5" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.addLast (3 samples, 0.82%)</title><rect x="606.5" y="675.0" width="9.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="609.5" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.addLast (3 samples, 0.82%)</title><rect x="606.5" y="659.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="609.5" y="670.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (3 samples, 0.82%)</title><rect x="606.5" y="643.0" width="9.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="609.5" y="654.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (3 samples, 0.82%)</title><rect x="606.5" y="627.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="609.5" y="638.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (2 samples, 0.55%)</title><rect x="606.5" y="611.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="609.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (2 samples, 0.55%)</title><rect x="606.5" y="595.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="609.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (2 samples, 0.55%)</title><rect x="606.5" y="579.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.5" y="590.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.offerTask (1 samples, 0.27%)</title><rect x="613.0" y="611.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="616.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.27%)</title><rect x="613.0" y="595.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="616.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.27%)</title><rect x="613.0" y="579.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.27%)</title><rect x="613.0" y="563.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="616.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.27%)</title><rect x="613.0" y="547.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.0" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="707.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.2" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="691.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="619.2" y="702.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="675.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.2" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="659.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="619.2" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="643.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="619.2" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="627.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.2" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="611.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.2" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="595.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.2" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="579.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="619.2" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="563.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="619.2" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="547.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="619.2" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="531.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.2" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="515.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="619.2" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="499.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="619.2" y="510.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="483.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.2" y="494.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="467.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="619.2" y="478.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="451.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="619.2" y="462.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="435.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="619.2" y="446.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="419.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.2" y="430.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="403.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="619.2" y="414.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="387.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="619.2" y="398.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelInboundHandlerAdapter.channelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="371.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="619.2" y="382.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="355.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="619.2" y="366.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRegistered (2 samples, 0.55%)</title><rect x="616.2" y="339.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="619.2" y="350.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.execute (2 samples, 0.55%)</title><rect x="616.2" y="323.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="619.2" y="334.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.addTask (2 samples, 0.55%)</title><rect x="616.2" y="307.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="619.2" y="318.0"></text>
</g>
<g>
<title>com/intellij/rt/debugger/agent/CaptureStorage.capture (2 samples, 0.55%)</title><rect x="616.2" y="291.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.2" y="302.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.27%)</title><rect x="616.2" y="275.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="619.2" y="286.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.27%)</title><rect x="616.2" y="259.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.2" y="270.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.27%)</title><rect x="616.2" y="243.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="619.2" y="254.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.27%)</title><rect x="616.2" y="227.0" width="3.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="619.2" y="238.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.27%)</title><rect x="616.2" y="211.0" width="3.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="619.2" y="222.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle) (1 samples, 0.27%)</title><rect x="616.2" y="195.0" width="3.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="619.2" y="206.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (1 samples, 0.27%)</title><rect x="616.2" y="179.0" width="3.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="619.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (1 samples, 0.27%)</title><rect x="619.5" y="275.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="622.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.27%)</title><rect x="619.5" y="259.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="622.5" y="270.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$AbstractWriteTask.run (7 samples, 1.92%)</title><rect x="622.7" y="883.0" width="22.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="625.7" y="894.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteAndFlushTask.write (7 samples, 1.92%)</title><rect x="622.7" y="867.0" width="22.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.7" y="878.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$AbstractWriteTask.write (7 samples, 1.92%)</title><rect x="622.7" y="851.0" width="22.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.7" y="862.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$1900 (7 samples, 1.92%)</title><rect x="622.7" y="835.0" width="22.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="625.7" y="846.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (7 samples, 1.92%)</title><rect x="622.7" y="819.0" width="22.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.7" y="830.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (7 samples, 1.92%)</title><rect x="622.7" y="803.0" width="22.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.7" y="814.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (7 samples, 1.92%)</title><rect x="622.7" y="787.0" width="22.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.7" y="798.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (7 samples, 1.92%)</title><rect x="622.7" y="771.0" width="22.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="625.7" y="782.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (7 samples, 1.92%)</title><rect x="622.7" y="755.0" width="22.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="625.7" y="766.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (7 samples, 1.92%)</title><rect x="622.7" y="739.0" width="22.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.7" y="750.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (7 samples, 1.92%)</title><rect x="622.7" y="723.0" width="22.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="625.7" y="734.0">i..</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (7 samples, 1.92%)</title><rect x="622.7" y="707.0" width="22.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="625.7" y="718.0">i..</text>
</g>
<g>
<title>InterpreterRuntime::exception_handler_for_exception(JavaThread*, oopDesc*) (1 samples, 0.27%)</title><rect x="622.7" y="691.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="625.7" y="702.0"></text>
</g>
<g>
<title>Method::fast_exception_handler_bci_for(methodHandle, KlassHandle, int, Thread*) (1 samples, 0.27%)</title><rect x="622.7" y="675.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="625.7" y="686.0"></text>
</g>
<g>
<title>ExceptionTable::ExceptionTable(Method const*) (1 samples, 0.27%)</title><rect x="622.7" y="659.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="625.7" y="670.0"></text>
</g>
<g>
<title>ConstMethod::exception_table_start() const (1 samples, 0.27%)</title><rect x="622.7" y="643.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="625.7" y="654.0"></text>
</g>
<g>
<title>ConstMethod::exception_table_length_addr() const (1 samples, 0.27%)</title><rect x="622.7" y="627.0" width="3.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="625.7" y="638.0"></text>
</g>
<g>
<title>ConstMethod::checked_exceptions_length_addr() const (1 samples, 0.27%)</title><rect x="622.7" y="611.0" width="3.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="625.7" y="622.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/FullHttpRequest2XhakaEncoder.encode (6 samples, 1.65%)</title><rect x="625.9" y="691.0" width="19.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.9" y="702.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/FullHttpRequest2XhakaEncoder.encode (6 samples, 1.65%)</title><rect x="625.9" y="675.0" width="19.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.9" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.27%)</title><rect x="625.9" y="659.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.9" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.27%)</title><rect x="625.9" y="643.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.9" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.27%)</title><rect x="625.9" y="627.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.9" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.27%)</title><rect x="625.9" y="611.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.9" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.27%)</title><rect x="625.9" y="595.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.9" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.27%)</title><rect x="625.9" y="579.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="628.9" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.27%)</title><rect x="625.9" y="563.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.9" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.27%)</title><rect x="625.9" y="547.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.9" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.27%)</title><rect x="625.9" y="531.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="628.9" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (1 samples, 0.27%)</title><rect x="625.9" y="515.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.9" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.27%)</title><rect x="625.9" y="499.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.9" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.27%)</title><rect x="625.9" y="483.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="628.9" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (1 samples, 0.27%)</title><rect x="625.9" y="467.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.27%)</title><rect x="625.9" y="451.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="628.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.27%)</title><rect x="625.9" y="435.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.27%)</title><rect x="625.9" y="419.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="628.9" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.27%)</title><rect x="625.9" y="403.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="628.9" y="414.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpRequestProtobufTypeSerialize.serialize (1 samples, 0.27%)</title><rect x="629.2" y="659.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="632.2" y="670.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/serialize/XhakaBodyFullHttpRequestProtobufTypeSerialize.serialize (1 samples, 0.27%)</title><rect x="629.2" y="643.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="632.2" y="654.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpRequestOuterClass$HttpRequest.newBuilder (1 samples, 0.27%)</title><rect x="629.2" y="627.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.2" y="638.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpRequestOuterClass$HttpRequest.toBuilder (1 samples, 0.27%)</title><rect x="629.2" y="611.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.2" y="622.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/serialize/protobuf/HttpRequestOuterClass$HttpRequest$Builder.&lt;init&gt; (1 samples, 0.27%)</title><rect x="629.2" y="595.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.2" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.writeAndFlush (4 samples, 1.10%)</title><rect x="632.4" y="659.0" width="13.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="635.4" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.writeAndFlush (4 samples, 1.10%)</title><rect x="632.4" y="643.0" width="13.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.4" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (4 samples, 1.10%)</title><rect x="632.4" y="627.0" width="13.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.4" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (4 samples, 1.10%)</title><rect x="632.4" y="611.0" width="13.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="635.4" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.validatePromise (1 samples, 0.27%)</title><rect x="632.4" y="595.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="635.4" y="606.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.27%)</title><rect x="632.4" y="579.0" width="3.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="635.4" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (3 samples, 0.82%)</title><rect x="635.7" y="595.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="638.7" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWriteAndFlush (3 samples, 0.82%)</title><rect x="635.7" y="579.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.7" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (3 samples, 0.82%)</title><rect x="635.7" y="563.0" width="9.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.7" y="574.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (3 samples, 0.82%)</title><rect x="635.7" y="547.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="638.7" y="558.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/XhakaEncoder.encode (3 samples, 0.82%)</title><rect x="635.7" y="531.0" width="9.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="638.7" y="542.0"></text>
</g>
<g>
<title>com/tinysakura/xhaka/common/gateway/handler/codec/XhakaEncoder.encode (3 samples, 0.82%)</title><rect x="635.7" y="515.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.7" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (3 samples, 0.82%)</title><rect x="635.7" y="499.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.7" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (3 samples, 0.82%)</title><rect x="635.7" y="483.0" width="9.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.7" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (3 samples, 0.82%)</title><rect x="635.7" y="467.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="638.7" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (3 samples, 0.82%)</title><rect x="635.7" y="451.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.7" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (3 samples, 0.82%)</title><rect x="635.7" y="435.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.7" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (3 samples, 0.82%)</title><rect x="635.7" y="419.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.7" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (3 samples, 0.82%)</title><rect x="635.7" y="403.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="638.7" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (3 samples, 0.82%)</title><rect x="635.7" y="387.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="638.7" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (3 samples, 0.82%)</title><rect x="635.7" y="371.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="638.7" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.27%)</title><rect x="635.7" y="355.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.7" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.27%)</title><rect x="635.7" y="339.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.7" y="350.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.27%)</title><rect x="635.7" y="323.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.7" y="334.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.27%)</title><rect x="635.7" y="307.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="638.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.27%)</title><rect x="635.7" y="291.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="638.7" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (2 samples, 0.55%)</title><rect x="638.9" y="355.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="641.9" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.27%)</title><rect x="638.9" y="339.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="641.9" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/PatternLayout.doLayout (1 samples, 0.27%)</title><rect x="638.9" y="323.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="641.9" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/pattern/PatternLayoutBase.writeLoopOnConverters (1 samples, 0.27%)</title><rect x="638.9" y="307.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="641.9" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (1 samples, 0.27%)</title><rect x="642.1" y="339.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.27%)</title><rect x="642.1" y="323.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="645.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.27%)</title><rect x="642.1" y="307.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.27%)</title><rect x="642.1" y="291.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding$StringEncoder.encode (1 samples, 0.27%)</title><rect x="642.1" y="275.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.1" y="286.0"></text>
</g>
<g>
<title>thread_start (168 samples, 46.15%)</title><rect x="645.4" y="979.0" width="544.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="648.4" y="990.0">thread_start</text>
</g>
<g>
<title>_pthread_start (168 samples, 46.15%)</title><rect x="645.4" y="963.0" width="544.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="648.4" y="974.0">_pthread_start</text>
</g>
<g>
<title>_pthread_body (168 samples, 46.15%)</title><rect x="645.4" y="947.0" width="544.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="648.4" y="958.0">_pthread_body</text>
</g>
<g>
<title>java_start(Thread*) (168 samples, 46.15%)</title><rect x="645.4" y="931.0" width="544.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="648.4" y="942.0">java_start(Thread*)</text>
</g>
<g>
<title>GCTaskThread::run() (76 samples, 20.88%)</title><rect x="645.4" y="915.0" width="246.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="648.4" y="926.0">GCTaskThread::run()</text>
</g>
<g>
<title>DrainStacksCompactionTask::do_it(GCTaskManager*, unsigned int) (3 samples, 0.82%)</title><rect x="645.4" y="899.0" width="9.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="648.4" y="910.0"></text>
</g>
<g>
<title>ParCompactionManager::drain_region_stacks() (3 samples, 0.82%)</title><rect x="645.4" y="883.0" width="9.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="648.4" y="894.0"></text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (3 samples, 0.82%)</title><rect x="645.4" y="867.0" width="9.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="648.4" y="878.0"></text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (1 samples, 0.27%)</title><rect x="645.4" y="851.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="648.4" y="862.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.27%)</title><rect x="645.4" y="835.0" width="3.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="648.4" y="846.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (2 samples, 0.55%)</title><rect x="648.6" y="851.0" width="6.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="651.6" y="862.0"></text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (2 samples, 0.55%)</title><rect x="648.6" y="835.0" width="6.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="651.6" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.27%)</title><rect x="648.6" y="819.0" width="3.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="651.6" y="830.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.27%)</title><rect x="651.9" y="819.0" width="3.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="654.9" y="830.0"></text>
</g>
<g>
<title>MarkFromRootsTask::do_it(GCTaskManager*, unsigned int) (6 samples, 1.65%)</title><rect x="655.1" y="899.0" width="19.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="658.1" y="910.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (6 samples, 1.65%)</title><rect x="655.1" y="883.0" width="19.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="658.1" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (2 samples, 0.55%)</title><rect x="655.1" y="867.0" width="6.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="658.1" y="878.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.27%)</title><rect x="658.4" y="851.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="661.4" y="862.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (1 samples, 0.27%)</title><rect x="658.4" y="835.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="661.4" y="846.0"></text>
</g>
<g>
<title>InstanceMirrorKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.27%)</title><rect x="661.6" y="867.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="664.6" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.27%)</title><rect x="661.6" y="851.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="664.6" y="862.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.27%)</title><rect x="661.6" y="835.0" width="3.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="664.6" y="846.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.27%)</title><rect x="661.6" y="819.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="664.6" y="830.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (2 samples, 0.55%)</title><rect x="664.8" y="867.0" width="6.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="667.8" y="878.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (2 samples, 0.55%)</title><rect x="664.8" y="851.0" width="6.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="667.8" y="862.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (2 samples, 0.55%)</title><rect x="664.8" y="835.0" width="6.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="667.8" y="846.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.27%)</title><rect x="668.1" y="819.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="671.1" y="830.0"></text>
</g>
<g>
<title>PSParallelCompact::follow_class_loader(ParCompactionManager*, ClassLoaderData*) (1 samples, 0.27%)</title><rect x="671.3" y="867.0" width="3.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="674.3" y="878.0"></text>
</g>
<g>
<title>ClassLoaderData::classes_do(KlassClosure*) (1 samples, 0.27%)</title><rect x="671.3" y="851.0" width="3.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="674.3" y="862.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;oopDesc*&gt;(ParCompactionManager*, oopDesc**) (1 samples, 0.27%)</title><rect x="671.3" y="835.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="674.3" y="846.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.27%)</title><rect x="671.3" y="819.0" width="3.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="674.3" y="830.0"></text>
</g>
<g>
<title>OldToYoungRootsTask::do_it(GCTaskManager*, unsigned int) (14 samples, 3.85%)</title><rect x="674.6" y="899.0" width="45.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="677.6" y="910.0">OldT..</text>
</g>
<g>
<title>CardTableExtension::scavenge_contents_parallel(ObjectStartArray*, MutableSpace*, HeapWord*, PSPromotionManager*, unsigned int, unsigned int) (14 samples, 3.85%)</title><rect x="674.6" y="883.0" width="45.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="677.6" y="894.0">Card..</text>
</g>
<g>
<title>ObjArrayKlass::oop_push_contents(PSPromotionManager*, oopDesc*) (3 samples, 0.82%)</title><rect x="674.6" y="867.0" width="9.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="677.6" y="878.0"></text>
</g>
<g>
<title>ObjectStartArray::object_start(HeapWord*) const (5 samples, 1.37%)</title><rect x="684.3" y="867.0" width="16.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="687.3" y="878.0"></text>
</g>
<g>
<title>oopDesc::size() (5 samples, 1.37%)</title><rect x="684.3" y="851.0" width="16.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="687.3" y="862.0"></text>
</g>
<g>
<title>PSPromotionManager::drain_stacks_depth(bool) (6 samples, 1.65%)</title><rect x="700.5" y="867.0" width="19.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="703.5" y="878.0"></text>
</g>
<g>
<title>PSPromotionManager::process_popped_location_depth(StarTask) (5 samples, 1.37%)</title><rect x="703.7" y="851.0" width="16.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="706.7" y="862.0"></text>
</g>
<g>
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (4 samples, 1.10%)</title><rect x="707.0" y="835.0" width="12.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="710.0" y="846.0"></text>
</g>
<g>
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (2 samples, 0.55%)</title><rect x="710.2" y="819.0" width="6.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="713.2" y="830.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (2 samples, 0.55%)</title><rect x="710.2" y="803.0" width="6.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="713.2" y="814.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.27%)</title><rect x="716.7" y="819.0" width="3.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="719.7" y="830.0"></text>
</g>
<g>
<title>ScavengeRootsTask::do_it(GCTaskManager*, unsigned int) (2 samples, 0.55%)</title><rect x="719.9" y="899.0" width="6.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="722.9" y="910.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::oops_do(OopClosure*, KlassClosure*, bool) (1 samples, 0.27%)</title><rect x="719.9" y="883.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="722.9" y="894.0"></text>
</g>
<g>
<title>ClassLoaderData::classes_do(KlassClosure*) (1 samples, 0.27%)</title><rect x="719.9" y="867.0" width="3.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="722.9" y="878.0"></text>
</g>
<g>
<title>PSScavengeKlassClosure::do_klass(Klass*) (1 samples, 0.27%)</title><rect x="719.9" y="851.0" width="3.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="722.9" y="862.0"></text>
</g>
<g>
<title>CodeCache::scavenge_root_nmethods_do(CodeBlobClosure*) (1 samples, 0.27%)</title><rect x="723.2" y="883.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="726.2" y="894.0"></text>
</g>
<g>
<title>MarkingCodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.27%)</title><rect x="723.2" y="867.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="726.2" y="878.0"></text>
</g>
<g>
<title>nmethod::test_set_oops_do_mark() (1 samples, 0.27%)</title><rect x="723.2" y="851.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="726.2" y="862.0"></text>
</g>
<g>
<title>StealMarkingTask::do_it(GCTaskManager*, unsigned int) (7 samples, 1.92%)</title><rect x="726.4" y="899.0" width="22.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="729.4" y="910.0">S..</text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (6 samples, 1.65%)</title><rect x="726.4" y="883.0" width="19.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="729.4" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (2 samples, 0.55%)</title><rect x="726.4" y="867.0" width="6.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="729.4" y="878.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (2 samples, 0.55%)</title><rect x="726.4" y="851.0" width="6.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="729.4" y="862.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (1 samples, 0.27%)</title><rect x="726.4" y="835.0" width="3.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="729.4" y="846.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.27%)</title><rect x="729.7" y="835.0" width="3.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="732.7" y="846.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (4 samples, 1.10%)</title><rect x="732.9" y="867.0" width="13.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="735.9" y="878.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (4 samples, 1.10%)</title><rect x="732.9" y="851.0" width="13.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="735.9" y="862.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (4 samples, 1.10%)</title><rect x="732.9" y="835.0" width="13.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="735.9" y="846.0"></text>
</g>
<g>
<title>ParMarkBitMap::mark_obj(HeapWord*, unsigned long) (1 samples, 0.27%)</title><rect x="742.6" y="819.0" width="3.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="745.6" y="830.0"></text>
</g>
<g>
<title>TypeArrayKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.27%)</title><rect x="745.9" y="883.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="748.9" y="894.0"></text>
</g>
<g>
<title>StealRegionCompactionTask::do_it(GCTaskManager*, unsigned int) (30 samples, 8.24%)</title><rect x="749.1" y="899.0" width="97.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="752.1" y="910.0">StealRegion..</text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (6 samples, 1.65%)</title><rect x="749.1" y="883.0" width="19.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="752.1" y="894.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (6 samples, 1.65%)</title><rect x="749.1" y="867.0" width="19.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="752.1" y="878.0"></text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (6 samples, 1.65%)</title><rect x="749.1" y="851.0" width="19.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="752.1" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (3 samples, 0.82%)</title><rect x="749.1" y="835.0" width="9.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="752.1" y="846.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (3 samples, 0.82%)</title><rect x="749.1" y="819.0" width="9.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="752.1" y="830.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (3 samples, 0.82%)</title><rect x="749.1" y="803.0" width="9.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="752.1" y="814.0"></text>
</g>
<g>
<title>InstanceRefKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.27%)</title><rect x="758.8" y="835.0" width="3.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="761.8" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.27%)</title><rect x="758.8" y="819.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="761.8" y="830.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.27%)</title><rect x="758.8" y="803.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="761.8" y="814.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.27%)</title><rect x="758.8" y="787.0" width="3.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="761.8" y="798.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (2 samples, 0.55%)</title><rect x="762.1" y="835.0" width="6.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="765.1" y="846.0"></text>
</g>
<g>
<title>ParCompactionManager::drain_region_stacks() (9 samples, 2.47%)</title><rect x="768.6" y="883.0" width="29.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="771.6" y="894.0">Pa..</text>
</g>
<g>
<title>PSParallelCompact::fill_region(ParCompactionManager*, unsigned long) (9 samples, 2.47%)</title><rect x="768.6" y="867.0" width="29.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="771.6" y="878.0">PS..</text>
</g>
<g>
<title>MoveAndUpdateClosure::copy_partial_obj() (2 samples, 0.55%)</title><rect x="768.6" y="851.0" width="6.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="771.6" y="862.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (2 samples, 0.55%)</title><rect x="768.6" y="835.0" width="6.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="771.6" y="846.0"></text>
</g>
<g>
<title>ParMarkBitMap::iterate(ParMarkBitMapClosure*, unsigned long, unsigned long) const (6 samples, 1.65%)</title><rect x="775.1" y="851.0" width="19.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="778.1" y="862.0"></text>
</g>
<g>
<title>MoveAndUpdateClosure::do_addr(HeapWord*, unsigned long) (5 samples, 1.37%)</title><rect x="778.3" y="835.0" width="16.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="781.3" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (4 samples, 1.10%)</title><rect x="778.3" y="819.0" width="13.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="781.3" y="830.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (4 samples, 1.10%)</title><rect x="778.3" y="803.0" width="13.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="781.3" y="814.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (3 samples, 0.82%)</title><rect x="781.5" y="787.0" width="9.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="784.5" y="798.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_update_pointers(ParCompactionManager*, oopDesc*) (1 samples, 0.27%)</title><rect x="791.3" y="819.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="794.3" y="830.0"></text>
</g>
<g>
<title>ParallelCompactData::calc_new_pointer(HeapWord*) (1 samples, 0.27%)</title><rect x="791.3" y="803.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="794.3" y="814.0"></text>
</g>
<g>
<title>ParMarkBitMap::live_words_in_range(HeapWord*, oopDesc*) const (1 samples, 0.27%)</title><rect x="791.3" y="787.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="794.3" y="798.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.27%)</title><rect x="794.5" y="851.0" width="3.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="797.5" y="862.0"></text>
</g>
<g>
<title>SpinPause (15 samples, 4.12%)</title><rect x="797.7" y="883.0" width="48.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="800.7" y="894.0">Spin..</text>
</g>
<g>
<title>StealTask::do_it(GCTaskManager*, unsigned int) (8 samples, 2.20%)</title><rect x="846.4" y="899.0" width="25.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="849.4" y="910.0">S..</text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (5 samples, 1.37%)</title><rect x="846.4" y="883.0" width="16.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="849.4" y="894.0"></text>
</g>
<g>
<title>xdrmem_ops_aligned (5 samples, 1.37%)</title><rect x="846.4" y="867.0" width="16.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="849.4" y="878.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.82%)</title><rect x="862.6" y="883.0" width="9.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="865.6" y="894.0"></text>
</g>
<g>
<title>ThreadRootsMarkingTask::do_it(GCTaskManager*, unsigned int) (6 samples, 1.65%)</title><rect x="872.3" y="899.0" width="19.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="875.3" y="910.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (1 samples, 0.27%)</title><rect x="872.3" y="883.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="875.3" y="894.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, CLDClosure*, RegisterMap const*, bool) (1 samples, 0.27%)</title><rect x="872.3" y="867.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="875.3" y="878.0"></text>
</g>
<g>
<title>ClassLoaderData::classes_do(KlassClosure*) (1 samples, 0.27%)</title><rect x="872.3" y="851.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="875.3" y="862.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;oopDesc*&gt;(ParCompactionManager*, oopDesc**) (1 samples, 0.27%)</title><rect x="872.3" y="835.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="875.3" y="846.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.27%)</title><rect x="872.3" y="819.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="875.3" y="830.0"></text>
</g>
<g>
<title>ParCompactionManager::follow_marking_stacks() (5 samples, 1.37%)</title><rect x="875.5" y="883.0" width="16.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="878.5" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (2 samples, 0.55%)</title><rect x="875.5" y="867.0" width="6.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="878.5" y="878.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;oopDesc*&gt;(ParCompactionManager*, oopDesc**) (1 samples, 0.27%)</title><rect x="875.5" y="851.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="878.5" y="862.0"></text>
</g>
<g>
<title>java_lang_Class::oop_size(oopDesc*) (1 samples, 0.27%)</title><rect x="875.5" y="835.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="878.5" y="846.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.27%)</title><rect x="878.8" y="851.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="881.8" y="862.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.27%)</title><rect x="878.8" y="835.0" width="3.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="881.8" y="846.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_follow_contents(ParCompactionManager*, oopDesc*) (1 samples, 0.27%)</title><rect x="882.0" y="867.0" width="3.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="885.0" y="878.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (1 samples, 0.27%)</title><rect x="882.0" y="851.0" width="3.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="885.0" y="862.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.27%)</title><rect x="882.0" y="835.0" width="3.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="885.0" y="846.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.27%)</title><rect x="882.0" y="819.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="885.0" y="830.0"></text>
</g>
<g>
<title>void ObjArrayKlass::objarray_follow_contents&lt;unsigned int&gt;(ParCompactionManager*, oopDesc*, int) (1 samples, 0.27%)</title><rect x="885.3" y="867.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="888.3" y="878.0"></text>
</g>
<g>
<title>void PSParallelCompact::mark_and_push&lt;unsigned int&gt;(ParCompactionManager*, unsigned int*) (1 samples, 0.27%)</title><rect x="885.3" y="851.0" width="3.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="888.3" y="862.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.27%)</title><rect x="885.3" y="835.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="888.3" y="846.0"></text>
</g>
<g>
<title>void specialized_oop_follow_contents&lt;unsigned int&gt;(InstanceRefKlass*, ParCompactionManager*, oopDesc*) (1 samples, 0.27%)</title><rect x="888.5" y="867.0" width="3.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="891.5" y="878.0"></text>
</g>
<g>
<title>ReferenceProcessor::discover_reference(oopDesc*, ReferenceType) (1 samples, 0.27%)</title><rect x="888.5" y="851.0" width="3.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="891.5" y="862.0"></text>
</g>
<g>
<title>oopDesc::atomic_compare_exchange_oop(oopDesc*, HeapWord volatile*, oopDesc*, bool) (1 samples, 0.27%)</title><rect x="888.5" y="835.0" width="3.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="891.5" y="846.0"></text>
</g>
<g>
<title>Atomic::cmpxchg(unsigned int, unsigned int volatile*, unsigned int) (1 samples, 0.27%)</title><rect x="888.5" y="819.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="891.5" y="830.0"></text>
</g>
<g>
<title>JavaThread::run() (7 samples, 1.92%)</title><rect x="891.8" y="915.0" width="22.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="894.8" y="926.0">J..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (7 samples, 1.92%)</title><rect x="891.8" y="899.0" width="22.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="894.8" y="910.0">J..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (6 samples, 1.65%)</title><rect x="891.8" y="883.0" width="19.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="894.8" y="894.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2 samples, 0.55%)</title><rect x="891.8" y="867.0" width="6.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="894.8" y="878.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (2 samples, 0.55%)</title><rect x="891.8" y="851.0" width="6.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="894.8" y="862.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (2 samples, 0.55%)</title><rect x="891.8" y="835.0" width="6.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="894.8" y="846.0"></text>
</g>
<g>
<title>Compilation::compile_method() (2 samples, 0.55%)</title><rect x="891.8" y="819.0" width="6.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="894.8" y="830.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.27%)</title><rect x="891.8" y="803.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="894.8" y="814.0"></text>
</g>
<g>
<title>Compilation::build_hir() (1 samples, 0.27%)</title><rect x="891.8" y="787.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="894.8" y="798.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.27%)</title><rect x="891.8" y="771.0" width="3.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="894.8" y="782.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.27%)</title><rect x="891.8" y="755.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="894.8" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.27%)</title><rect x="891.8" y="739.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="894.8" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.27%)</title><rect x="891.8" y="723.0" width="3.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="894.8" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.27%)</title><rect x="891.8" y="707.0" width="3.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="894.8" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::new_instance(int) (1 samples, 0.27%)</title><rect x="891.8" y="691.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="894.8" y="702.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_klass(bool&amp;) (1 samples, 0.27%)</title><rect x="891.8" y="675.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="894.8" y="686.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index(constantPoolHandle, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.27%)</title><rect x="891.8" y="659.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="894.8" y="670.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.27%)</title><rect x="891.8" y="643.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="894.8" y="654.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.27%)</title><rect x="891.8" y="627.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="894.8" y="638.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.27%)</title><rect x="891.8" y="611.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="894.8" y="622.0"></text>
</g>
<g>
<title>Compilation::install_code(int) (1 samples, 0.27%)</title><rect x="895.0" y="803.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="898.0" y="814.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (1 samples, 0.27%)</title><rect x="895.0" y="787.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="898.0" y="798.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (1 samples, 0.27%)</title><rect x="895.0" y="771.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="898.0" y="782.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (1 samples, 0.27%)</title><rect x="895.0" y="755.0" width="3.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="898.0" y="766.0"></text>
</g>
<g>
<title>CodeBlob::CodeBlob(char const*, CodeBuffer*, int, int, int, int, OopMapSet*) (1 samples, 0.27%)</title><rect x="895.0" y="739.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="898.0" y="750.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (1 samples, 0.27%)</title><rect x="895.0" y="723.0" width="3.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="898.0" y="734.0"></text>
</g>
<g>
<title>CodeBuffer::relocate_code_to(CodeBuffer*) const (1 samples, 0.27%)</title><rect x="895.0" y="707.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="898.0" y="718.0"></text>
</g>
<g>
<title>CallRelocation::fix_relocation_after_move(CodeBuffer const*, CodeBuffer*) (1 samples, 0.27%)</title><rect x="895.0" y="691.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="898.0" y="702.0"></text>
</g>
<g>
<title>Relocation::pd_call_destination(unsigned char*) (1 samples, 0.27%)</title><rect x="895.0" y="675.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="898.0" y="686.0"></text>
</g>
<g>
<title>CompileQueue::get() (4 samples, 1.10%)</title><rect x="898.2" y="867.0" width="13.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="901.2" y="878.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.55%)</title><rect x="898.2" y="851.0" width="6.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="901.2" y="862.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.55%)</title><rect x="898.2" y="835.0" width="6.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="901.2" y="846.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.55%)</title><rect x="898.2" y="819.0" width="6.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="901.2" y="830.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.55%)</title><rect x="898.2" y="803.0" width="6.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="901.2" y="814.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (2 samples, 0.55%)</title><rect x="904.7" y="851.0" width="6.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="907.7" y="862.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (2 samples, 0.55%)</title><rect x="904.7" y="835.0" width="6.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="907.7" y="846.0"></text>
</g>
<g>
<title>CodeCache::next_nmethod(CodeBlob*) (1 samples, 0.27%)</title><rect x="904.7" y="819.0" width="3.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="907.7" y="830.0"></text>
</g>
<g>
<title>CodeHeap::next_free(HeapBlock*) const (1 samples, 0.27%)</title><rect x="904.7" y="803.0" width="3.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="907.7" y="814.0"></text>
</g>
<g>
<title>NMethodSweeper::process_nmethod(nmethod*) (1 samples, 0.27%)</title><rect x="908.0" y="819.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="911.0" y="830.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.27%)</title><rect x="911.2" y="883.0" width="3.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="914.2" y="894.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.27%)</title><rect x="911.2" y="867.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="914.2" y="878.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.27%)</title><rect x="911.2" y="851.0" width="3.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="914.2" y="862.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.27%)</title><rect x="911.2" y="835.0" width="3.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="914.2" y="846.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.27%)</title><rect x="911.2" y="819.0" width="3.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="914.2" y="830.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.27%)</title><rect x="911.2" y="803.0" width="3.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="914.2" y="814.0"></text>
</g>
<g>
<title>VMThread::run() (24 samples, 6.59%)</title><rect x="914.5" y="915.0" width="77.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="917.5" y="926.0">VMThread:..</text>
</g>
<g>
<title>VMThread::loop() (24 samples, 6.59%)</title><rect x="914.5" y="899.0" width="77.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="917.5" y="910.0">VMThread:..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.27%)</title><rect x="914.5" y="883.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="917.5" y="894.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.27%)</title><rect x="914.5" y="867.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="917.5" y="878.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.27%)</title><rect x="914.5" y="851.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="917.5" y="862.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.27%)</title><rect x="914.5" y="835.0" width="3.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="917.5" y="846.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (5 samples, 1.37%)</title><rect x="917.7" y="883.0" width="16.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="920.7" y="894.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (4 samples, 1.10%)</title><rect x="917.7" y="867.0" width="13.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="920.7" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::deflate_idle_monitors() (1 samples, 0.27%)</title><rect x="917.7" y="851.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="920.7" y="862.0"></text>
</g>
<g>
<title>Threads::nmethods_do(CodeBlobClosure*) (3 samples, 0.82%)</title><rect x="920.9" y="851.0" width="9.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="923.9" y="862.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (3 samples, 0.82%)</title><rect x="920.9" y="835.0" width="9.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="923.9" y="846.0"></text>
</g>
<g>
<title>StackFrameStream::next() (3 samples, 0.82%)</title><rect x="920.9" y="819.0" width="9.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="923.9" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.82%)</title><rect x="920.9" y="803.0" width="9.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="923.9" y="814.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (3 samples, 0.82%)</title><rect x="920.9" y="787.0" width="9.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="923.9" y="798.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (2 samples, 0.55%)</title><rect x="920.9" y="771.0" width="6.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="923.9" y="782.0"></text>
</g>
<g>
<title>OopMapSet::find_map_at_offset(int) const (1 samples, 0.27%)</title><rect x="920.9" y="755.0" width="3.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="923.9" y="766.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (1 samples, 0.27%)</title><rect x="924.2" y="755.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="927.2" y="766.0"></text>
</g>
<g>
<title>OopMapValue::read_from(CompressedReadStream*) (1 samples, 0.27%)</title><rect x="924.2" y="739.0" width="3.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="927.2" y="750.0"></text>
</g>
<g>
<title>pthread_getspecific (1 samples, 0.27%)</title><rect x="927.4" y="771.0" width="3.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="930.4" y="782.0"></text>
</g>
<g>
<title>ThreadSafepointState::examine_state_of_thread() (1 samples, 0.27%)</title><rect x="930.7" y="867.0" width="3.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="933.7" y="878.0"></text>
</g>
<g>
<title>SafepointSynchronize::check_for_lazy_critical_native(JavaThread*, JavaThreadState) (1 samples, 0.27%)</title><rect x="930.7" y="851.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="933.7" y="862.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.27%)</title><rect x="930.7" y="835.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="933.7" y="846.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.27%)</title><rect x="930.7" y="819.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="933.7" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.27%)</title><rect x="930.7" y="803.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="933.7" y="814.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.27%)</title><rect x="930.7" y="787.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="933.7" y="798.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (18 samples, 4.95%)</title><rect x="933.9" y="883.0" width="58.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="936.9" y="894.0">VMThre..</text>
</g>
<g>
<title>VM_Operation::evaluate() (18 samples, 4.95%)</title><rect x="933.9" y="867.0" width="58.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="936.9" y="878.0">VM_Ope..</text>
</g>
<g>
<title>VM_ParallelGCFailedAllocation::doit() (18 samples, 4.95%)</title><rect x="933.9" y="851.0" width="58.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="936.9" y="862.0">VM_Par..</text>
</g>
<g>
<title>ParallelScavengeHeap::failed_mem_allocate(unsigned long) (18 samples, 4.95%)</title><rect x="933.9" y="835.0" width="58.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="936.9" y="846.0">Parall..</text>
</g>
<g>
<title>PSScavenge::invoke() (18 samples, 4.95%)</title><rect x="933.9" y="819.0" width="58.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="936.9" y="830.0">PSScav..</text>
</g>
<g>
<title>PSParallelCompact::invoke_no_policy(bool) (14 samples, 3.85%)</title><rect x="933.9" y="803.0" width="45.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="936.9" y="814.0">PSPa..</text>
</g>
<g>
<title>PSParallelCompact::adjust_roots() (2 samples, 0.55%)</title><rect x="933.9" y="787.0" width="6.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="936.9" y="798.0"></text>
</g>
<g>
<title>StringTable::buckets_oops_do(OopClosure*, int, int) (1 samples, 0.27%)</title><rect x="933.9" y="771.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="936.9" y="782.0"></text>
</g>
<g>
<title>PSParallelCompact::AdjustPointerClosure::do_oop(oopDesc**) (1 samples, 0.27%)</title><rect x="933.9" y="755.0" width="3.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="936.9" y="766.0"></text>
</g>
<g>
<title>Threads::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (1 samples, 0.27%)</title><rect x="937.1" y="771.0" width="3.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="940.1" y="782.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (1 samples, 0.27%)</title><rect x="937.1" y="755.0" width="3.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="940.1" y="766.0"></text>
</g>
<g>
<title>StackFrameStream::next() (1 samples, 0.27%)</title><rect x="937.1" y="739.0" width="3.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="940.1" y="750.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.27%)</title><rect x="937.1" y="723.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="940.1" y="734.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.27%)</title><rect x="937.1" y="707.0" width="3.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="940.1" y="718.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.27%)</title><rect x="937.1" y="691.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="940.1" y="702.0"></text>
</g>
<g>
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.27%)</title><rect x="937.1" y="675.0" width="3.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="940.1" y="686.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.27%)</title><rect x="937.1" y="659.0" width="3.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="940.1" y="670.0"></text>
</g>
<g>
<title>PSParallelCompact::marking_phase(ParCompactionManager*, bool, ParallelOldTracer*) (11 samples, 3.02%)</title><rect x="940.4" y="787.0" width="35.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="943.4" y="798.0">PSP..</text>
</g>
<g>
<title>CodeCache::do_unloading(BoolObjectClosure*, bool) (2 samples, 0.55%)</title><rect x="940.4" y="771.0" width="6.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="943.4" y="782.0"></text>
</g>
<g>
<title>nmethod::do_unloading(BoolObjectClosure*, bool) (2 samples, 0.55%)</title><rect x="940.4" y="755.0" width="6.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="943.4" y="766.0"></text>
</g>
<g>
<title>clean_ic_if_metadata_is_dead(CompiledIC*, BoolObjectClosure*, bool) (1 samples, 0.27%)</title><rect x="940.4" y="739.0" width="3.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="943.4" y="750.0"></text>
</g>
<g>
<title>oop_Relocation::oop_value() (1 samples, 0.27%)</title><rect x="943.6" y="739.0" width="3.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="946.6" y="750.0"></text>
</g>
<g>
<title>Assembler::locate_operand(unsigned char*, Assembler::WhichOperand) (1 samples, 0.27%)</title><rect x="943.6" y="723.0" width="3.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="946.6" y="734.0"></text>
</g>
<g>
<title>Klass::clean_weak_klass_links(BoolObjectClosure*, bool) (7 samples, 1.92%)</title><rect x="946.9" y="771.0" width="22.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="949.9" y="782.0">K..</text>
</g>
<g>
<title>InstanceKlass::clean_weak_instanceklass_links(BoolObjectClosure*) (7 samples, 1.92%)</title><rect x="946.9" y="755.0" width="22.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="949.9" y="766.0">I..</text>
</g>
<g>
<title>InstanceKlass::clean_method_data(BoolObjectClosure*) (7 samples, 1.92%)</title><rect x="946.9" y="739.0" width="22.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="949.9" y="750.0">I..</text>
</g>
<g>
<title>MethodData::clean_method_data(BoolObjectClosure*) (1 samples, 0.27%)</title><rect x="966.3" y="723.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="969.3" y="734.0"></text>
</g>
<g>
<title>DataLayout::data_in() (1 samples, 0.27%)</title><rect x="966.3" y="707.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="969.3" y="718.0"></text>
</g>
<g>
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.27%)</title><rect x="966.3" y="691.0" width="3.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="969.3" y="702.0"></text>
</g>
<g>
<title>SymbolTable::unlink(int*, int*) (2 samples, 0.55%)</title><rect x="969.6" y="771.0" width="6.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="972.6" y="782.0"></text>
</g>
<g>
<title>SymbolTable::buckets_unlink(int, int, BasicHashtable&lt;(MemoryType)9&gt;::BucketUnlinkContext*, unsigned long*) (2 samples, 0.55%)</title><rect x="969.6" y="755.0" width="6.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="972.6" y="766.0"></text>
</g>
<g>
<title>PSParallelCompact::post_compact() (1 samples, 0.27%)</title><rect x="976.0" y="787.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="979.0" y="798.0"></text>
</g>
<g>
<title>CodeCache::gc_epilogue() (1 samples, 0.27%)</title><rect x="976.0" y="771.0" width="3.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="979.0" y="782.0"></text>
</g>
<g>
<title>CodeHeap::next_free(HeapBlock*) const (1 samples, 0.27%)</title><rect x="976.0" y="755.0" width="3.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="979.0" y="766.0"></text>
</g>
<g>
<title>PSScavenge::invoke_no_policy() (4 samples, 1.10%)</title><rect x="979.3" y="803.0" width="13.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="982.3" y="814.0"></text>
</g>
<g>
<title>ReferenceProcessor::enqueue_discovered_references(AbstractRefProcTaskExecutor*) (1 samples, 0.27%)</title><rect x="979.3" y="787.0" width="3.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="982.3" y="798.0"></text>
</g>
<g>
<title>bool enqueue_discovered_ref_helper&lt;unsigned int&gt;(ReferenceProcessor*, AbstractRefProcTaskExecutor*) (1 samples, 0.27%)</title><rect x="979.3" y="771.0" width="3.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="982.3" y="782.0"></text>
</g>
<g>
<title>ReferenceProcessor::enqueue_discovered_reflists(HeapWord*, AbstractRefProcTaskExecutor*) (1 samples, 0.27%)</title><rect x="979.3" y="755.0" width="3.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="982.3" y="766.0"></text>
</g>
<g>
<title>ReferenceProcessor::enqueue_discovered_reflist(DiscoveredList&amp;, HeapWord*) (1 samples, 0.27%)</title><rect x="979.3" y="739.0" width="3.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="982.3" y="750.0"></text>
</g>
<g>
<title>java_lang_ref_Reference::discovered(oopDesc*) (1 samples, 0.27%)</title><rect x="979.3" y="723.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="982.3" y="734.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_discovered_references(BoolObjectClosure*, OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*, GCTimer*, GCId) (2 samples, 0.55%)</title><rect x="982.5" y="787.0" width="6.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="985.5" y="798.0"></text>
</g>
<g>
<title>JNIHandleBlock::weak_oops_do(BoolObjectClosure*, OopClosure*) (2 samples, 0.55%)</title><rect x="982.5" y="771.0" width="6.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="985.5" y="782.0"></text>
</g>
<g>
<title>StringTable::unlink_or_oops_do(BoolObjectClosure*, OopClosure*, int*, int*) (1 samples, 0.27%)</title><rect x="989.0" y="787.0" width="3.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="992.0" y="798.0"></text>
</g>
<g>
<title>StringTable::buckets_unlink_or_oops_do(BoolObjectClosure*, OopClosure*, int, int, BasicHashtable&lt;(MemoryType)9&gt;::BucketUnlinkContext*) (1 samples, 0.27%)</title><rect x="989.0" y="771.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="992.0" y="782.0"></text>
</g>
<g>
<title>WatcherThread::run() (61 samples, 16.76%)</title><rect x="992.3" y="915.0" width="197.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="995.3" y="926.0">WatcherThread::run()</text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (2 samples, 0.55%)</title><rect x="992.3" y="899.0" width="6.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="995.3" y="910.0"></text>
</g>
<g>
<title>PerfLongVariant::sample() (2 samples, 0.55%)</title><rect x="992.3" y="883.0" width="6.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="995.3" y="894.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (59 samples, 16.21%)</title><rect x="998.7" y="899.0" width="191.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1001.7" y="910.0">WatcherThread::sleep() co..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (59 samples, 16.21%)</title><rect x="998.7" y="883.0" width="191.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1001.7" y="894.0">Monitor::wait(bool, long,..</text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (59 samples, 16.21%)</title><rect x="998.7" y="867.0" width="191.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1001.7" y="878.0">Monitor::IWait(Thread*, l..</text>
</g>
<g>
<title>Thread::muxAcquire(long volatile*, char const*) (1 samples, 0.27%)</title><rect x="998.7" y="851.0" width="3.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1001.7" y="862.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (58 samples, 15.93%)</title><rect x="1002.0" y="851.0" width="188.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1005.0" y="862.0">os::PlatformEvent::park(..</text>
</g>
<g>
<title>__psynch_cvwait (58 samples, 15.93%)</title><rect x="1002.0" y="835.0" width="188.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1005.0" y="846.0">__psynch_cvwait</text>
</g>
</g>
</svg>
